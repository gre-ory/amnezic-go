{"version":3,"sources":["static/music.png","data/Card.ts","data/Constants.ts","data/Settings.ts","data/Question.ts","data/Util.ts","data/QuestionStats.ts","data/PlayerStats.ts","data/Artist.ts","data/Media.ts","data/Quizz.ts","data/Album.ts","data/Game.ts","data/GameStats.ts","data/Navigate.ts","component/Header.tsx","component/Footer.tsx","component/Page.tsx","component/GameCard.tsx","component/NextButton.tsx","page/HomePage.tsx","component/PlayerAvatar.tsx","component/GamePage.tsx","page/SettingsPage.tsx","component/icon/ClubIcon.tsx","component/icon/DiamondIcon.tsx","component/icon/CircleIcon.tsx","component/icon/HeartIcon.tsx","component/icon/SpadeIcon.tsx","component/icon/SquareIcon.tsx","component/icon/StarIcon.tsx","component/icon/TriangleIcon.tsx","component/icon/CrossIcon.tsx","component/PlayingCardIcon.tsx","component/PlayingCard.tsx","component/PlayingCardModal.tsx","data/Avatar.ts","component/AvatarModal.tsx","component/PlayerCard.tsx","page/PlayersPage.tsx","page/StartPage.tsx","component/MediaCard.tsx","component/MusicPlayer.tsx","component/QuestionCard.tsx","page/QuestionPage.tsx","component/PlayerScoreCard.tsx","page/ScoresPage.tsx","page/AvatarsPage.tsx","page/PlayingCardsPage.tsx","App.tsx","index.js"],"names":["module","exports","__webpack_require__","p","CardSymbol","CardColor","CardSize","DEBUG","MAX_NB_GAME","DEFAULT_NB_PLAYER","PLAYER_ID_SUFFIX","DEFAULT_NB_QUESTION","QUESTION_ID_SUFFIX","DEFAULT_NB_ANSWER_PER_QUESTION","ANSWER_ID_SUFFIX","ONE_SECOND","MAX_NB_SECONDS_LOADING","MAX_NB_SECONDS_PLAYING","newSettings","nbPlayer","arguments","length","undefined","nbQuestion","nbAnswer","addAnswer","question","answer","hint","correct","number","answers","current","id","push","getPlayerAnswerIndex","playerId","answerId","playerAnswers","findIndex","playerAnswer","hasPlayerAnswer","onQuestionPlayed","console","log","concat","status","onQuestionCompleted","range","nb","Array","from","keys","pickIndexes","nbSelected","nbTotal","shuffle","selected","Set","i","j","Math","random","has","add","values","_ref","toZeroPadString","value","padSize","padStart","toDateTimeString","date","Date","year","getFullYear","month","getMonth","day","getDate","toDateString","hours","getHours","minutes","getMinutes","seconds","getSeconds","toTimeString","onUserEvent","callback","event","stopPropagation","preventDefault","onKeyEvent","keyCallback","key","HeartCard","symbol","HEART","color","RED","DiamondCard","DIAMOND","DefaultCards","CLUB","BLACK","SPADE","CIRCLE","BLUE","YELLOW","GREEN","TRIANGLE","ORANGE","PURPLE","getAnswerStats","stats","find","getOrSetAnswerStats","answerStats","success","score","getQuestionStats","questionId","questions","getOrSetQuestionStats","questionStats","error","flagQuestionAsError","nbError","newArtist","name","picture","newMedia","title","music","artist","album","dummyMusics","newAlbum","GameStep","newGameId","customAlphabet","newGameCode","newGame","code","created","now","updated","step","SETTINGS","settings","players","started","ended","addQuestion","game","media","previous","nextNumber","previousNumber","updateSettings","update","Object","objectSpread","updatePlayer","map","player","GAMES","sortGames","games","toConsumableArray","sort","left","right","storeGames","sanitizedGames","slice","localStorage","setItem","JSON","stringify","loadGames","parse","getItem","selectGame","gameId","g","isSetUp","hasPlayers","hasQuestions","OnStep","gameStep","onSetUp","forEach","buildDummyQuestions","_step2","nbMusic","legacyJson","genres","genre","reduce","questionIndexes","_iterator2","Quizz_createForOfIteratorHelper","s","n","done","_step3","questionIndex","startIndex","_iterator3","_loop","endIndex","musics","correctIndex","correctMusic","indexes","filter","index","_step4","_iterator4","err","e","f","_ret","buildLegacyQuestions","card","avatarId","nbSuccess","nbFailure","nbMiss","addPlayer","PLAYERS","onStartGame","questionNumber","nbCompleted","progress","QUIZZ","onAnswers","_step","nbPoint","_iterator","Game_createForOfIteratorHelper","some","isCorrect","flagAnswerAsIncorrect","flagAnswerAsCorrect","miss","onEndGame","SCORES","toGamePage","toSettingsPage","toPlayersPage","toQuizzPage","toScoresPage","Header","props","updateGame","menuDisabled","onPrevious","onNext","navigate","useNavigate","isHomeSelected","isSettingsSelected","isPlayersSelected","isQuizzSelected","isScoresSelected","isHomeDisabled","isSettingsDisabled","isSettingsPageDisabled","isPlayersDisabled","isPlayersPageDisabled","isQuizzDisabled","isQuizzPageDisabled","isScoresDisabled","isScoresPageDisabled","updateGameStep","onHomePage","onSettingsPage","onPlayersPage","onQuizzPage","onScoresPage","handleKeyPress","React","useCallback","useEffect","document","addEventListener","removeEventListener","_React$useState","useState","_React$useState2","slicedToArray","menuElement","setMenuElement","open","Boolean","finalTitle","react_default","a","createElement","Box","className","sx","flexGrow","style","marginBottom","AppBar","position","Toolbar","width","display","alignItems","justifyContent","Fragment","IconButton","aria-label","aria-controls","aria-expanded","aria-haspopup","opacity","cursor","onClick","currentTarget","Menu_default","Menu_Menu","anchorEl","onClose","MenuListProps","aria-labelledby","MenuItem","disabled","ListItemIcon","Home","fontSize","ListItemText","Settings","Group","MusicNote","MilitaryTech","fontWeight","textTransform","SkipPrevious_default","SkipNext_default","Footer","Page","children","component_Header","component_Footer","useStyles","makeStyles","gameCard","flexDirection","padding","borderRadius","border","&:hover","backgroundColor","gameLine","gameItem","GameCard","startGame","resumeGame","deleteGame","classes","onStart","margin","onResume","onDelete","round","Stack","direction","spacing","Chip","label","Close_default","marginLeft","Person_default","marginRight","MusicNote_default","CalendarToday_default","marginTop","height","LinearProgress","variant","valueBuffer","NextButton","description","AvatarSize","HomePage","addGame","deleteGames","oldGameIds","HomePage_createForOfIteratorHelper","sortedGames","component_Page","component_NextButton","Accordion","AccordionSummary","expandIcon","ExpandMore_default","AccordionDetails","Grid","container","item","xs","textAlign","component_GameCard","allGameIds","Delete_default","GamePage","replace","toLowerCase","background","SettingsPage","useParams","lessPlayerDisabled","morePlayerDisabled","lessQuestionDisabled","moreQuestionDisabled","lessAnswerDisabled","moreAnswerDisabled","updateNbPlayer","updateNbQuestion","updateNbAnswer","lessPlayer","morePlayer","lessQuestion","moreQuestion","lessAnswer","moreAnswer","component_GamePage","Button","size","Quiz_default","ClubIcon","xmlns","viewBox","d","DiamondIcon","CircleIcon","HeartIcon","SpadeIcon","SquareIcon","StarIcon","TriangleIcon","CrossIcon","PlayingCardIcon","icon_ClubIcon","CROSS","icon_CrossIcon","icon_DiamondIcon","icon_CircleIcon","icon_HeartIcon","icon_SpadeIcon","SQUARE","icon_SquareIcon","STAR","icon_StarIcon","icon_TriangleIcon","PlayingCard","cardSize","cardClassNames","component_PlayingCardIcon","PlayerAvatar","avatarClassNames","PlayingCardModal","closeModal","onSymbolChange","onColorChange","onCardChange","Modal","aria-describedby","top","transform","bgcolor","boxShadow","Typography","GRAY","newColor","component_PlayingCard","XL","newSymbol","defaultCard","XS","ALL_AVATAR_IDS","AvatarModal","onAvatarChange","component_PlayerAvatar","newAvatarId","M","PlayerCard","avatarSize","setName","editMode","_React$useState3","_React$useState4","playingCardModal","setPlayingCardModal","_React$useState5","_React$useState6","avatarModal","setAvatarModal","updatePlayerCard","Card","CardContent","L","TextField","onChange","target","onBlur","updatePlayerName","S","component_PlayingCardModal","component_AvatarModal","updatePlayerAvatar","PlayersPage","component_PlayerCard","StartPage","MediaCard","mediaImage","musicBackground","artistName","albumName","component","pl","pb","CardMedia","image","MusicPlayer","loading","info","playing","played","onMusicLoaded","onMusicPlaying","onMusicPaused","onMusicEnded","audioRef","useRef","Audio","reset","toggleMusic","play","pause","lessVolume","volume","max","moreVolume","min","src","loop","onAudioLoad","currentTime","duration","onAudioReady","onAudioEnd","playingMusic","pausingMusic","onPause","onPlay","LightTooltip","withStyles","theme","tooltip","arrow","Tooltip","icon","PlayArrow_default","component_MediaCard","backgroundSize","CircularProgress","bottom","QuestionCard","updateQuestion","setQuestionId","musicLoading","setMusicLoading","nbSecondsTotal","setNbSecondsTotal","_React$useState7","_React$useState8","nbShownAnswers","setNbShownAnswers","_React$useState9","_React$useState10","musicReady","setMusicReady","_React$useState11","_React$useState12","countDown","setCountDown","_React$useState13","_React$useState14","musicStarted","setMusicStarted","_React$useState15","_React$useState16","musicPlaying","setMusicPlaying","_React$useState17","_React$useState18","nbSecondsPlayed","setNbSecondsPlayed","_React$useState19","_React$useState20","musicEnded","setMusicEnded","musicError","musicPlayed","addPlayerAnswer","removeAnswer","splice","removePlayerAnswer","flagQuestionAsFailed","onQuestionError","onErrorAnswers","sortedPlayers","badgeValue","badgeColor","resetOnPlayed","onMusicFailed","showNextAnswer","showCountDown","showNbSecondsPlayed","timerId","clearInterval","setInterval","ceil","musicPaused","showHints","musicPlayerInfo","Alert","severity","hidden","Paper","elevation","Avatar","lineHeight","justifyItems","component_MusicPlayer","failed","nbSeconds","getQuestionAnswerStats","transition","Badge","badgeContent","tooltipId","disableTooltip","disableFocusListener","disableHoverListener","QuestionPage","_useParams","questionParam","parseInt","selectQuestion","updateQuestionNumber","Error","onQuestionNumber","component_QuestionCard","PlayerScoreCard","medalColor","prettyPoints","prettyPercent","successPercent","failurePercent","missPercent","sumBySuccessAnswer","sumByFailureAnswer","nbSuccessAnswer","nbFailureAnswer","PlayerScoreCard_createForOfIteratorHelper","avgSuccessDelta","avgFailureDelta","avgDelta","aspectRatio","MilitaryTech_default","TableContainer","Table","TableHead","TableRow","TableCell","align","TableBody","scope","ScoresPage","previousPosition","previousScore","colorScale","medalColorScale","component_PlayerScoreCard","victory_chart","data","intermediateScore","x","y","_createForOfIteratorHelper","computeVizualiationScoreData","victory_group","labels","datum","labelComponent","victory_tooltip","victory_line","victory_scatter","fill","AvatarsPage","PlayingCardsPage","App","setGames","prev","react_router_dom","react_router","path","element","page_HomePage","gameIds","App_createForOfIteratorHelper","newGames","indexOf","page_SettingsPage","page_PlayersPage","page_StartPage","page_QuestionPage","page_ScoresPage","page_AvatarsPage","page_PlayingCardsPage","ReactDOM","render","StrictMode","src_App","getElementById"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yknNCC5BC,EAYAC,EAaAC,0ICzBCC,GAAQ,EAKRC,EAAc,EAEdC,EAAoB,EAIpBC,EAAmB,IAEnBC,EAAsB,GAItBC,EAAqB,EAErBC,EAAiC,EAIjCC,EAAmB,IAEnBC,EAAaR,EAAQ,IAAM,IAC3BS,EAAyBT,EAAQ,GAAK,GACtCU,EAAyBV,EAAQ,GAAK,GCZ5C,SAASW,IACd,MAAO,CACLC,SAFuKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3HX,EAG5Cc,WAHuKH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAnFT,EAIpFa,SAJuKJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA3CP,GCuBzH,SAASY,EAAWC,EAAoBC,GAAsE,IAAtDC,EAAsDR,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvC,GAAIS,EAAmCT,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7GU,EAASJ,EAASK,QAAQV,OAAS,EACnCW,EAAkB,CACtBC,GAAIP,EAASO,GAAKH,EAClBA,OAAQA,EACRH,OAAQA,EACRC,KAAMA,EACNC,QAASA,GAGX,OADAH,EAASK,QAAQG,KAAMF,GAChBA,EAaF,SAASG,EAAsBT,EAAoBU,EAAoBC,GAC5E,OAAOX,EAASY,cAAcC,UAAW,SAAAC,GAAY,OAAMA,EAAaJ,WAAaA,GAAgBI,EAAaH,WAAaA,IAG1H,SAASI,EAAiBf,EAAoBU,EAAoBC,GACvE,OAAOF,EAAsBT,EAAUU,EAAUC,IAAc,EAmB1D,SAASK,EAAkBhB,GAKhC,OAJAiB,QAAQC,IAAR,kCAAAC,OAA+CnB,EAASO,KAExDP,EAASoB,OAAS,SAEXpB,EAGF,SAASqB,EAAqBrB,GAKnC,OAJAiB,QAAQC,IAAR,qCAAAC,OAAkDnB,EAASO,KAE3DP,EAASoB,OAAS,YAEXpB,EC/FF,SAASsB,EAAOC,GACnB,OAAOC,MAAMC,KAAMD,MAAOD,GAAKG,QAG5B,SAASC,EAAaC,EAAoBC,GAE7C,GAAKA,GAAWD,EACZ,OAAOE,EAASR,EAAOO,IAI3B,IADA,IAAIE,EAAW,IAAIC,IACVC,EAAI,EAAGA,EAAIL,EAAYK,IAAM,CAElC,IADA,IAAIC,EAAIC,KAAKC,SAAWP,EAAU,EAC5BE,EAASM,IAAIH,IACfA,EAAIC,KAAKC,SAAWP,EAAU,EAElCE,EAASO,IAAKJ,GAElB,OAAOV,MAAMC,KAAMM,GAOhB,SAASD,EAAYS,GACxB,IAAM,IAAIN,EAAIM,EAAO5C,OAAS,EAAGsC,EAAI,EAAGA,IAAM,CAC1C,IAAIC,EAAIC,KAAKC,UAAaH,EAAI,GAAM,EADMO,EAEX,CAAED,EAAQL,GAAKK,EAAQN,IAApDM,EAAQN,GAFgCO,EAAA,GAE3BD,EAAQL,GAFmBM,EAAA,GAI9C,OAAOD,EAMJ,SAASE,EAAiBC,EAAeC,GAC5C,MAAO,GAAAxB,OAAGuB,GAAQE,SAAUD,EAAS,KAyBlC,SAASE,EAAkBH,GAC9B,OAAKA,GAAS,EACH,IAEX,GAAAvB,OA1BG,SAAuBuB,GAC1B,GAAKA,GAAS,EACV,MAAO,IAEX,IAAMI,EAAO,IAAIC,KAAML,GACjBM,EAAOF,EAAKG,cACZC,EAAQT,EAAiBK,EAAKK,WAAa,EAAG,GAC9CC,EAAMX,EAAiBK,EAAKO,UAAW,GAC7C,SAAAlC,OAAU6B,EAAV,KAAA7B,OAAkB+B,EAAlB,KAAA/B,OAA2BiC,GAkBjBE,CAAaZ,GAAvB,KAAAvB,OAfG,SAAuBuB,GAC1B,GAAKA,GAAS,EACV,MAAO,IAEX,IAAMI,EAAO,IAAIC,KAAML,GACjBa,EAAQd,EAAiBK,EAAKU,WAAY,GAC1CC,EAAUhB,EAAiBK,EAAKY,aAAc,GAC9CC,EAAUlB,EAAiBK,EAAKc,aAAc,GACpD,SAAAzC,OAAUoC,EAAV,KAAApC,OAAmBsC,EAAnB,KAAAtC,OAA8BwC,GAOGE,CAAanB,IAS3C,SAASoB,EAAaC,GACzB,OAAO,SAAEC,GACLD,IACAC,EAAMC,kBACND,EAAME,kBAUP,SAASC,EAAYC,GACxB,OAAO,SAAEJ,GACAI,EAAaJ,EAAMK,MACpBpD,QAAQC,IAAR,cAAAC,OAA2B6C,EAAMK,IAAjC,yCACAL,EAAMC,kBACND,EAAME,kBAENjD,QAAQC,IAAR,cAAAC,OAA2B6C,EAAMK,IAAjC,kCJnGA3F,kLAYAC,oLAaAC,2DAgBL,IAAM0F,EAAkB,CAAEC,OAAQ7F,EAAW8F,MAAOC,MAAO9F,EAAU+F,KAC/DC,EAAoB,CAAEJ,OAAQ7F,EAAWkG,QAASH,MAAO9F,EAAU+F,KAYnEG,EAAuB,CAXN,CAAEN,OAAQ7F,EAAWoG,KAAML,MAAO9F,EAAUoG,OAaxEJ,EACAL,EAb6B,CAAEC,OAAQ7F,EAAWsG,MAAOP,MAAO9F,EAAUoG,OAExC,CAAER,OAAQ7F,EAAWuG,OAAQR,MAAO9F,EAAUuG,MAC5C,CAAEX,OAAQ7F,EAAWuG,OAAQR,MAAO9F,EAAUwG,QACjD,CAAEZ,OAAQ7F,EAAWuG,OAAQR,MAAO9F,EAAU+F,KAC5C,CAAEH,OAAQ7F,EAAWuG,OAAQR,MAAO9F,EAAUyG,OAE3C,CAAEb,OAAQ7F,EAAW2G,SAAUZ,MAAO9F,EAAU2G,QAChD,CAAEf,OAAQ7F,EAAW2G,SAAUZ,MAAO9F,EAAU4G,SKtCjF,SAASC,EAAgBC,EAAsB9E,GACpD,OAAO8E,EAAMpF,QAAQqF,KAAM,SAAAzF,GAAM,OAAIA,EAAOM,KAAOI,IAG9C,SAASgF,EAAqBF,EAAsB9E,GACzD,IAAML,EAAUkF,EAAgBC,EAAO9E,GACvC,QAAiBf,IAAZU,EACH,OAAOA,EAET,IAAMsF,EAA2B,CAC/BrF,GAAII,EACJkF,SAAS,EACTC,MAAO,GAGT,OADAL,EAAMpF,QAAQG,KAAMoF,GACbA,yhCCSF,SAASG,EAAkBN,EAAoBO,GACpD,OAAOP,EAAMQ,UAAUP,KAAM,SAAA1F,GAAQ,OAAIA,EAASO,KAAOyF,IAQpD,SAASE,GAAuBT,EAAoBO,GACzD,IAAM1F,EAAUyF,EAAkBN,EAAOO,GACzC,QAAiBpG,IAAZU,EACH,OAAOA,EAET,IAAM6F,EAA+B,CACnC5F,GAAIyF,EACJF,MAAO,EACPzF,QAAS,GACT+F,OAAO,GAGT,OADAX,EAAMQ,UAAUzF,KAAM2F,GACfA,EAgDF,SAASE,GAAqBZ,EAAoBO,GAGvDP,EAAMa,UACNb,EAAMK,OAAS,EAGf,IAAMK,EAAgBD,GAAuBT,EAAOO,GACpDG,EAAcL,MAAQ,EACtBK,EAAcC,OAAQ,ECzGjB,SAASG,GAAWC,GACzB,MAAO,CACLA,KAAMA,EACNC,QAHoE/G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,ICIpD,SAASgH,GAAUC,EAAeC,EAAeC,EAAgBC,GACtE,MAAO,CACLH,MAAOA,EACPC,MAAOA,EACPC,OAAQA,EACRC,MAAOA,4iCCLX,IAqDMC,GAAc,CArDFL,GACd,gDACA,mFACAH,GACI,yBACA,0GCTD,SAAmBI,GACxB,MAAO,CACLA,MAAOA,EACPF,QAHmE/G,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAZ,IDWvDsH,CACI,yBACA,0GAIaN,GACjB,eACA,mFACAH,GACI,YACA,+GAEJ3G,GAGmB8G,GACnB,cACA,mFACAH,GACI,iBACA3G,QAEJA,GAGe8G,GACf,QACA,0CACAH,GACI,aACA3G,QAEJA,GAGgB8G,GAChB,SACA,uEACAH,GACI,cACA3G,QAEJA,+hCE/CG,IAGKqH,GAHCC,GAAYC,YAAgB,4BAA6B,GACzDC,GAAcD,YAAgB,aAAc,GAkClD,SAASE,KAAmJ,IAA1I5H,EAA0IC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvHX,EAAmBc,EAAoGH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA/ET,EAAqBa,EAA0DJ,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvCP,EAC1H,MAAO,CACLoB,GAAI2G,KACJI,KAAMF,KACNG,QAASxE,KAAKyE,MACdC,QAAS1E,KAAKyE,MACdE,KAAMT,GAASU,SACfC,SAAUpI,EAAaC,EAAUI,EAAYC,GAC7C+H,QAAS,GACT5B,UAAW,GACX6B,SAAS,EACTC,OAAO,GAuBJ,SAASC,GAAaC,EAAYtB,EAAeuB,GACtD,IAAM9H,EAAS6H,EAAKhC,UAAUtG,OAAS,EACjCW,EAAoB,CACxBC,IAAMrB,EAAqBkB,GAAWhB,EACtCgB,OAAQA,EACRgB,OAAQ,aACRuF,MAAOA,EACPuB,MAAOA,EACP7H,QAAS,GACTO,cAAe,IAEjB,GAAKqH,EAAKhC,UAAUtG,OAAS,EAAI,CAC/B,IAAMwI,EAAqBF,EAAKhC,UAAWgC,EAAKhC,UAAUtG,OAAS,GACnEwI,EAASC,WAAa9H,EAAQF,OAC9BE,EAAQ+H,eAAiBF,EAAS/H,OAIpC,OAFAvB,GAASoC,QAAQC,IAAR,iBAAAC,OAA8Bb,IACvC2H,EAAKhC,UAAUzF,KAAMF,GACdA,EAMF,SAASgI,GAAgBC,GAC9B,OAAO,SAAEN,GACP,OAAOO,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEL,SAAUW,EAAQN,EAAKL,aAKtB,SAASc,GAAchI,EAAoB6H,GAChD,OAAO,SAAEN,GACP,OAAMA,EAAKJ,QAGJW,OAAAC,EAAA,EAAAD,CAAA,GACFP,EADL,CAEEJ,QAASI,EAAKJ,QAAQc,IAAK,SAAAC,GAAM,OAAIA,EAAOrI,IAAMG,EAAW6H,EAAQK,GAAWA,MAJzEX,aAtGDhB,6FA8HZ,IAAM4B,GAAQ,QAMP,SAASC,GAAWC,GAIzB,OAHoBP,OAAAQ,EAAA,EAAAR,CAAKO,GAAQE,KAAM,SAAEC,EAAYC,GACnD,OAAOA,EAAM1B,QAAUyB,EAAKzB,UAczB,SAAS2B,GAAYL,GAC1B,IAAMM,EAAiBN,EAAMO,MAAO,EAAGxK,GAEvC,OADAyK,aAAaC,QAASX,GAAOY,KAAKC,UAAWL,IACtCA,EAGF,SAASM,KAEd,OAAOb,GADeW,KAAKG,MAAOL,aAAaM,QAAShB,KAAW,OAAU,IAOxE,SAASiB,GAAYf,EAAegB,GACzC,GAAMA,EAAN,CAGA,IAAM9B,EAAO8B,EAASJ,KAAYjE,KAAM,SAAAsE,GAAC,OAAIA,EAAEzJ,IAAMwJ,SAAWnK,EAEhE,OADAqB,QAAQC,IAAR,kBAAAC,OAA8B4I,EAA9B,OAAA5I,YAAoDvB,IAATqI,EAAqB,KAAO,OAChEA,GAwBF,SAASgC,GAAShC,GACvB,OATK,SAAqBA,GAC1B,YAAkBrI,IAATqI,QAAuCrI,IAAjBqI,EAAKJ,SAAyBI,EAAKJ,QAAQlI,OAAS,EAQ5EuK,CAAYjC,IALd,SAAuBA,GAC5B,YAAkBrI,IAATqI,QAAyCrI,IAAnBqI,EAAKhC,WAA2BgC,EAAKhC,UAAUtG,OAAS,EAI1DwK,CAAclC,GAmBtC,SAASmC,GAAQC,GACtB,OAAO,SAAEpC,GASL,OARAhH,QAAQC,IAAR,aAAAC,OAA0B8G,EAAK1H,GAA/B,OAAAY,OAAuCkJ,IAMvCpC,EAAKP,KAAO2C,EAELpC,GAIN,SAASqC,GAASrC,GA2BvB,OA1BAhH,QAAQC,IAAR,eAAAC,OAA4B8G,EAAK1H,KAO/B0H,EADGpJ,EFxLA,SAA8BoJ,GAEjC,IAAMpI,EAAaoI,EAAKL,SAAS/H,WAC3BC,EAAWmI,EAAKL,SAAS9H,SAc/B,OAbAwB,EAAOzB,GAAa0K,QAAS,SAAAtI,GAIzB,IAHA,IAAMiG,EAAQnB,GAAa9E,EAAI8E,GAAYpH,QACrCK,EAAqBgI,GAAaC,EAAMC,EAAMrB,OAAOL,KAAM0B,GAEvDhG,EAAI,EAAIA,EAAIpC,EAAWoC,IAC5BD,EAAInC,GAAYoC,EACjBnC,EAAWC,EAAUkI,EAAMrB,OAAOL,KAAM0B,EAAMvB,OAAO,GAErD5G,EAAWC,EAAF,UAAAmB,OAAsBe,EAAE,GAAxB,QAAAf,OAAqCe,EAAE,IAAK,KAKtD+F,EEwKAuC,CAAqBvC,GFpIzB,SAA+BA,GAElC,IAFqDwC,EAE/C5K,EAAaoI,EAAKL,SAAS/H,WAC3BC,EAAWmI,EAAKL,SAAS9H,SAEzB4K,EAAUC,GAAWC,OAAOjC,IAAK,SAAAkC,GAAK,OAAIA,EAAM3C,MAAMvI,SAASmL,OAAQ,SAAE3C,EAAU7H,GAAZ,OAAyB6H,EAAW7H,GAAS,GACpHyK,EAAkBpJ,EAAa9B,EAAY6K,GANIM,EAAAC,GAQxBF,GARwB,IAQrD,IAAAC,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAA+C,KAAAC,EAAnCC,EAAmCb,EAAA/H,MAEvC6I,EAAa,EAF0BC,EAAAP,GAGtBN,GAAWC,QAHW,QAAAa,EAAA,eAG/BZ,EAH+BQ,EAAA3I,MAIjCgJ,EAAWH,EAAaV,EAAM3C,MAAMvI,OAAS,EACnD,GAAK+L,EAAWJ,EAEZ,OADAC,EAAaG,EAAW,EACxB,WAGJ,IAAMC,EAASd,EAAM3C,OAAS,GACxB0D,EAAeN,EAAgBC,EAC/BM,EAAeF,EAAQC,QACRhM,GAAhBiM,IACD5K,QAAQC,IAAR,YAAAC,OAAyBuJ,IACzBzJ,QAAQC,IAAR,oBAAAC,OAAiC4J,IACjC9J,QAAQC,IAAR,kBAAAC,OAA+BmK,IAC/BrK,QAAQC,IAAR,gBAAAC,OAA6B0J,EAAMA,MAAnC,OAAA1J,OAA8CoK,EAA9C,OAAApK,OAA8DuK,IAC9DzK,QAAQC,IAAR,iBAAAC,OAA8ByK,IAC9B3K,QAAQC,IAAR,YAAAC,OAAyBwK,EAAOhM,SAChCsB,QAAQC,IAAR,iBAAAC,OAA8B0K,KAElC,IAAMhF,EAASN,GAAWsF,EAAahF,QAAUgF,EAAahF,OAAOL,KAAOqF,EAAahF,OAAOL,KAAO,OACjG0B,EAAQxB,GAAUmF,EAAalF,OAAS,MAAOkF,EAAajF,MAAOC,OAAQjH,GAC3EI,EAAqBgI,GAAaC,EAAM4C,EAAMA,MAAO3C,GAErD4D,EAAUnK,EAAa7B,EAAU6L,EAAOhM,QAASoM,OAAQ,SAAAC,GAAK,OAAIA,GAASJ,IAAetC,MAAO,EAAGxJ,EAAW,GACrHgM,EAAQtL,KAAMoL,GACd9J,EAASgK,GA5B8B,IAAAG,EAAAC,EAAAjB,GA8BlBa,GA9BkB,IA8BvC,IAAAI,EAAAhB,MAAAe,EAAAC,EAAAf,KAAAC,MAA+B,KAAnBY,EAAmBC,EAAAvJ,MACrBkE,EAAQ+E,EAAQK,GACtBjM,EAAWC,EAAU4G,EAAMC,QAAUD,EAAMC,OAAOL,KAAOI,EAAMC,OAAOL,KAAO,MAAOI,EAAMD,OAAS,MAAOqF,IAAUJ,IAhCjF,MAAAO,GAAAD,EAAAE,EAAAD,GAAA,QAAAD,EAAAG,IAmCvC,eAhCJ,IAAAb,EAAAN,MAAAG,EAAAG,EAAAL,KAAAC,MAAyC,KAAAkB,EAAAb,IAAA,gBAAAa,GAAA,UAAAA,EAgCrC,OAnCuC,MAAAH,GAAAX,EAAAY,EAAAD,GAAA,QAAAX,EAAAa,MARM,MAAAF,GAAAnB,EAAAoB,EAAAD,GAAA,QAAAnB,EAAAqB,IAgDrD,OAAOpE,EEuFAsE,CAAsBtE,GAQ/B3G,EADiB2G,EAAKL,SAASnI,UACb8K,QAAS,SAAAyB,GAAK,OAnM3B,SAAoB/D,EAAYuE,GACrC,IAAMpM,EAAS6H,EAAKJ,QAAQlI,OAAS,EAC/BW,EAAkB,CACtBC,GAAIvB,EAAmBoB,EACvBA,OAAQA,EACRqM,SAAUrM,EACVoG,KAAI,UAAArF,OAAYsB,EAAiBrC,EAAQ,IACzCgB,OAAQ,SACRoL,KAAMA,EACN/G,MLrDK,CACLK,MAAO,EACPhG,SAAU,EACV4M,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRtG,QAAS,EACTL,UAAW,KKkDb,OAFApH,GAASoC,QAAQC,IAAR,eAAAC,OAA4Bb,IACrC2H,EAAKJ,QAAQrH,KAAMF,GACZA,EAsL6BuM,CAAW5E,EAAMpD,EAAcmH,EAAQnH,EAAalF,WAMxFsI,EAAKP,KAAOT,GAAS6F,QAEd7E,EAGF,SAAS8E,GAAa9E,GAG3B,OAFAhH,QAAQC,IAAR,mBAAAC,OAAgC8G,EAAK1H,KAE/B0H,EAAKhC,WAAsC,GAAzBgC,EAAKhC,UAAUtG,QAQvCsI,EAAKH,SAAU,EAMfG,EAAK+E,eAAiB/E,EAAKhC,UAAU,GAAG7F,OAMxC6H,EAAKxC,MC/RE,CACL5F,WD8RyBoI,EAAKL,SAAS/H,WC7RvCoN,YAAa,EACbC,SAAU,GDkSZjF,EAAKP,KAAOT,GAASkG,MAEdlF,GA3BEA,EA8BJ,SAASmF,GAAWnF,EAAYjI,GACrC,OAAO,SAAEiI,GACPhH,QAAQC,IAAR,gBAAAC,OAA6B8G,EAAK1H,GAAlC,OAAAY,OAA0CnB,EAASI,SAEnD,IAH6BiN,EAIzBC,EADcrF,EAAKJ,QAAQlI,OAHF4N,EAAAC,GAMDxN,EAASY,eANR,QAAA6K,EAAA,eAMjB3K,EANiBuM,EAAA3K,MAOrBkG,EAASX,EAAKJ,QAAQnC,KAAM,SAAAkD,GAAM,OAAIA,EAAOrI,KAAOO,EAAaJ,WAClEkI,KRlPJ,SAAoB5I,EAAoBc,GAC7C,OAAOd,EAASK,QAAQoN,KAAM,SAAAxN,GAAM,OAAMA,EAAOM,KAAQO,EAAaH,UAAcV,EAAOE,UQkPrEuN,CAAW1N,EAAUc,GLlPtC,SAAgC2E,EAAoBO,EAAwBrF,EAAoB2M,GAGrG7H,EAAM3F,UAAY,EAClB2F,EAAMkH,YACNlH,EAAMK,OAASwH,EAGf,IAAMnH,EAAgBD,GAAuBT,EAAOO,GACpDG,EAAcL,OAASwH,EAGvB,IAAM1H,EAAcD,EAAqBQ,EAAexF,GACxDiF,EAAYC,SAAU,EACtBD,EAAYE,MAAQwH,EKwOZK,CAAuB/E,EAAOnD,MAAOzF,EAASO,GAAIO,EAAaH,UAAW2M,GLvQ7E,SAA8B7H,EAAoBO,EAAwBrF,EAAoB2M,GAGnG7H,EAAM3F,UAAY,EAClB2F,EAAMiH,YACNjH,EAAMK,OAASwH,EAGf,IAAMnH,EAAgBD,GAAuBT,EAAOO,GACpDG,EAAcL,OAASwH,EAGvB,IAAM1H,EAAcD,EAAqBQ,EAAexF,GACxDiF,EAAYC,SAAU,EACtBD,EAAYE,MAAQwH,EKuPZM,CAAqBhF,EAAOnD,MAAOzF,EAASO,GAAIO,EAAaH,SAAU2M,IAKtEA,EAAU,GACbA,KAXJ,IAAAC,EAAArC,MAAAmC,EAAAE,EAAApC,KAAAC,MAAqDK,IANxB,MAAAU,GAAAoB,EAAAnB,EAAAD,GAAA,QAAAoB,EAAAlB,IAAA,IAAA5B,ELxNGhF,EAAoBO,EKwNvBgF,EAAAwC,GAqBTvF,EAAKJ,SArBI,IAqB7B,IAAAmD,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAAmC,KAAAC,EAAzBzC,EAAyB6B,EAAA/H,MAC7BmL,GAAO,EADsBrC,EAAAgC,GAELxN,EAASY,eAFJ,IAEjC,IAAA4K,EAAAN,MAAAG,EAAAG,EAAAL,KAAAC,MAAqD,KAAzCtK,EAAyCuK,EAAA3I,MACnD,GAAKkG,EAAOrI,KAAOO,EAAaJ,SAAW,CACzCmN,GAAO,EACP,QAL6B,MAAA1B,GAAAX,EAAAY,EAAAD,GAAA,QAAAX,EAAAa,IAQ5BwB,ILrPyBpI,EKsPRmD,EAAOnD,MLtPqBO,EKsPdhG,EAASO,GLnPjDkF,EAAMmH,SACNnH,EAAMK,OAAS,EAGOI,GAAuBT,EAAOO,GACtCF,MAAQ,IKgNS,MAAAqG,GAAAnB,EAAAoB,EAAAD,GAAA,QAAAnB,EAAAqB,IAkC7B,OAAOpE,GA+CJ,SAAS6F,GAAW7F,GAezB,OAdAhH,QAAQC,IAAR,iBAAAC,OAA8B8G,EAAK1H,KAMnC0H,EAAKF,OAAQ,EAMbE,EAAKP,KAAOT,GAAS8G,OAEd9F,EE7XF,SAAS+F,GAAY/F,GAC1B,GAAKA,EACH,OAASA,EAAKP,MACZ,KAAKT,GAASU,SACZ,OAvBD,SAAyBM,GAC9B,eAAA9G,OAAgB8G,EAAK1H,GAArB,aAsBa0N,CAAgBhG,GACzB,KAAKhB,GAAS6F,QACZ,OArBD,SAAwB7E,GAC7B,eAAA9G,OAAgB8G,EAAK1H,GAArB,YAoBa2N,CAAejG,GACxB,KAAKhB,GAASkG,MACZ,OAnBD,SAAsBlF,GAC3B,OAAMA,EAAK+E,eAGX,SAAA7L,OAAgB8G,EAAK1H,GAArB,cAAAY,OAAoC8G,EAAK+E,gBAFvC,SAAA7L,OAAgB8G,EAAK1H,GAArB,UAiBW4N,CAAalG,GACtB,KAAKhB,GAAS8G,OACZ,OAdD,SAAuB9F,GAC5B,eAAA9G,OAAgB8G,EAAK1H,GAArB,WAaa6N,CAAcnG,GAG3B,MAnCA,+LC0PaoG,GAlOA,SAAEC,GAAkB,IACvB3H,EAAwE2H,EAAxE3H,MAAO0D,EAAiEiE,EAAjEjE,SAAUpC,EAAuDqG,EAAvDrG,KAAMsG,EAAiDD,EAAjDC,WAAYC,EAAqCF,EAArCE,aAAcC,EAAuBH,EAAvBG,WAAYC,EAAWJ,EAAXI,OAE/DC,EAAWC,cAYXC,OAA8BjP,IAAbyK,EACjByE,EAAqBzE,GAAYpD,GAASU,SAC1CoH,EAAoB1E,GAAYpD,GAAS6F,QACzCkC,EAAkB3E,GAAYpD,GAASkG,MACvC8B,EAAmB5E,GAAYpD,GAAS8G,OAIxCmB,GAAoC,IAAjBV,IAA2B,EAC9CW,GAAwC,IAAjBX,GHoK1B,SAAiCvG,GACtC,YAAkBrI,IAATqI,GAAwBA,EAAKF,OAASkC,GAAShC,GGrKEmH,CAAwBnH,GAC1EoH,GAAuC,IAAjBb,GHuKzB,SAAgCvG,GACrC,YAAkBrI,IAATqI,GAAwBA,EAAKF,QAAUkC,GAAShC,GGxKAqH,CAAuBrH,GACxEsH,GAAqC,IAAjBf,GH0KvB,SAA8BvG,GACnC,YAAkBrI,IAATqI,GAAwBA,EAAKF,QAAUkC,GAAShC,GG3KFuH,CAAqBvH,GACpEwH,GAAsC,IAAjBjB,GH6KxB,SAA+BvG,GACpC,YAAkBrI,IAATqI,IAAyBA,EAAKH,UAAYmC,GAAShC,GG9KJyH,CAAsBzH,GAItE0H,EAAiB,SAAEtF,GAChBpC,GAAQsG,GACTA,EAAYtG,EAAK1H,GAAI6J,GAAQC,KAM/BuF,EAAcf,OAAiEjP,EAAhDkE,EAAa,kBAAM6K,ED/D1D,OCgEQkB,EAAkBf,OAAgFlP,EAA3DkE,EAAa,kBAAM6L,EAAgB1I,GAASU,YACnFmI,EAAiBf,OAA8EnP,EAA1DkE,EAAa,kBAAM6L,EAAgB1I,GAAS6F,WACjFiD,EAAef,OAA0EpP,EAAxDkE,EAAa,kBAAM6L,EAAgB1I,GAASkG,SAC7E6C,EAAgBf,OAA4ErP,EAAzDkE,EAAa,kBAAM6L,EAAgB1I,GAAS8G,UAM3EkC,EAAiBC,IAAMC,YAAahM,EAAY,SAAEE,GACpD,OAASA,GACL,IAAK,YACD,GAAKoK,EAGD,OAFAxN,QAAQC,IAAR,mBAAAC,OAAgCkD,EAAhC,uBACAoK,KACO,EAEX,MACJ,IAAK,aACD,GAAKC,EAGD,OAFAzN,QAAQC,IAAR,mBAAAC,OAAgCkD,EAAhC,mBACAqK,KACO,EAInB,OAAO,IACN,CAAED,EAAYC,IAEnBwB,IAAME,UAAW,WAEb,OADAC,SAASC,iBAAkB,UAAWL,GAC/B,WACHI,SAASE,oBAAqB,UAAWN,KAE9C,CAAEA,IA1EsB,IAAAO,EA+ESN,IAAMO,SAAU,MA/EzBC,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAgI,EAAA,GA+EvBI,EA/EuBF,EAAA,GA+EVG,EA/EUH,EAAA,GAgFzBI,EAAOC,QAASH,GAUhBI,EAAarK,IACCkI,EApFF,OAqFEC,EApFE,WAqFFC,EApFC,UAqFDC,EApFD,QAqFCC,EApFA,SAoFiC,IAErD,OACIgC,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKC,UAAU,SAASC,GAAI,CAAEC,SAAU,GAAKC,MAAO,CAAEC,aAAc,SAChER,EAAAC,EAAAC,cAACO,GAAA,EAAD,CAAQC,SAAS,SAASlN,MAAM,eAC5BwM,EAAAC,EAAAC,cAACS,GAAA,EAAD,KACIX,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEK,MAAO,OAAQC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAIhFf,EAAAC,EAAAC,cAAA,WAEMlJ,GACEgJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KAIIhB,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACI3R,GAAG,cACH4R,aAAW,OACXC,gBAAgBtB,EAAO,kBAAelR,EACtCyS,gBAAgBvB,EAAO,YAASlR,EAChC0S,gBAAc,OACdd,MAAO,CAAEe,SAA0B,IAAjB/D,EAAwB,IAAM,IAAKgE,QAAyB,IAAjBhE,EAAwB,UAAY,WACjGiE,SAA0B,IAAjBjE,OAAwB5O,EAtClD,SAAEoE,GACjB6M,EAAgB7M,EAAM0O,iBAuCUzB,EAAAC,EAAAC,cAACwB,GAAAzB,EAAD,OAKJD,EAAAC,EAAAC,cAACyB,GAAA,EAAD,CACIrS,GAAG,aACHsS,SAAUjC,EACVE,KAAMA,EACNgC,QA9ChB,WAChBjC,EAAgB,OA8CgBkC,cAAe,CACfC,kBAAmB,iBAMnB/B,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAUlR,SAAU8M,EAAgBqE,SAAUhE,EAAgBuD,QAAS7C,GACnEqB,EAAAC,EAAAC,cAACgC,GAAA,EAAD,KACIlC,EAAAC,EAAAC,cAACiC,GAAA,EAAD,CAAMC,SAAS,WAEnBpC,EAAAC,EAAAC,cAACmC,GAAA,EAAD,KAvItB,SA4IkBrC,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAUlR,SAAU+M,EAAoBoE,SAAU/D,EAAoBsD,QAAS5C,GAC3EoB,EAAAC,EAAAC,cAACgC,GAAA,EAAD,KACIlC,EAAAC,EAAAC,cAACoC,GAAA,EAAD,CAAUF,SAAS,WAEvBpC,EAAAC,EAAAC,cAACmC,GAAA,EAAD,KA/IlB,aAoJcrC,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAUlR,SAAUgN,EAAmBmE,SAAU7D,EAAmBoD,QAAS3C,GACzEmB,EAAAC,EAAAC,cAACgC,GAAA,EAAD,KACIlC,EAAAC,EAAAC,cAACqC,GAAA,EAAD,CAAOH,SAAS,WAEpBpC,EAAAC,EAAAC,cAACmC,GAAA,EAAD,KAvJnB,YA4JerC,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAUlR,SAAUiN,EAAiBkE,SAAU3D,EAAiBkD,QAAS1C,GACrEkB,EAAAC,EAAAC,cAACgC,GAAA,EAAD,KACIlC,EAAAC,EAAAC,cAACsC,GAAA,EAAD,CAAWJ,SAAS,WAExBpC,EAAAC,EAAAC,cAACmC,GAAA,EAAD,KA/JrB,UAoKiBrC,EAAAC,EAAAC,cAAC8B,GAAA,EAAD,CAAUlR,SAAUkN,EAAkBiE,SAAUzD,EAAkBgD,QAASzC,GACvEiB,EAAAC,EAAAC,cAACgC,GAAA,EAAD,KACIlC,EAAAC,EAAAC,cAACuC,GAAA,EAAD,CAAcL,SAAS,WAE3BpC,EAAAC,EAAAC,cAACmC,GAAA,EAAD,KAvKpB,cAmLArC,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEmC,WAAY,OAAQC,cAAe,cAAgB5C,GAIjEC,EAAAC,EAAAC,cAAA,WAEM1C,GACEwC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIC,aAAW,WACX1N,MAAM,OACNgO,QAAShE,GAETwC,EAAAC,EAAAC,cAAC0C,GAAA3C,EAAD,OAINxC,GACEuC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIC,aAAW,OACX1N,MAAM,OACNgO,QAAS/D,GAETuC,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,aCrNrB6C,GAjBA,SAAEzF,GAEb,OACI2C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,OCYO+B,GAZF,SAAE1F,GAAkB,IACrB3H,EAA4B2H,EAA5B3H,MAAOsN,EAAqB3F,EAArB2F,SAAUvF,EAAWJ,EAAXI,OAEzB,OACIuC,EAAAC,EAAAC,cAAA,OAAKE,UAAS,QACVJ,EAAAC,EAAAC,cAAC+C,GAAD,CAAQvN,MAAOA,EAAO+H,OAAQA,IAC7BuF,EACDhD,EAAAC,EAAAC,cAACgD,GAAD,oICLNC,GAAYC,aAAY,iBAAQ,CAClCC,SAAU,CACNxC,QAAS,OACTyC,cAAe,SACfxC,WAAY,SACZC,eAAgB,gBAChBwC,QAAS,YACTC,aAAc,OACdC,OAAQ,iBACRC,UAAW,CACPD,OAAQ,iBACRE,gBAAiB,cAGzBC,SAAU,CACNhD,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,iBAEpB8C,SAAU,CACNhD,QAAS,OACTC,WAAY,SACZC,eAAgB,aA4ET+C,GAjEE,SAAEzG,GAAkB,IACzBrG,EAA4CqG,EAA5CrG,KAAM+M,EAAsC1G,EAAtC0G,UAAWC,EAA2B3G,EAA3B2G,WAAYC,EAAe5G,EAAf4G,WAC/BC,EAAUf,KAEhB,IAAMnM,EAAO,CAET,IAAMmN,EAAUJ,EAAYlR,EAAa,kBAAMkR,WAAgBpV,EAE/D,OACIqR,EAAAC,EAAAC,cAAA,OAAKxK,MAAM,iBAAiB0K,UAAS,GAAAlQ,OAAKgU,EAAQb,SAAb,eAAoC7B,QAAS2C,GAC9EnE,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQN,UACpB5D,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQL,UAAU7D,EAAAC,EAAAC,cAAA,4BAClCF,EAAAC,EAAAC,cAAA,iBAEJF,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQN,UACpB5D,EAAAC,EAAAC,cAAA,gBACAF,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,CAAcM,MAAO,CAAE6D,OAAQ,QAAU5Q,MAAM,YAC/CwM,EAAAC,EAAAC,cAAA,kBAQhB,IAAMmE,EAAWL,EAAanR,EAAa,kBAAMmR,EAAYhN,UAAWrI,EAClE2V,EAAWL,EAAapR,EAAa,kBAAMoR,EAAYjN,UAAWrI,EAElEsN,EAAWjF,EAAKF,MAAQ,IAAME,EAAKxC,MAAQwC,EAAKxC,MAAMyH,SAAW,EACzDjF,EAAKF,OAAkBE,EAAKxC,OAAL,GAAAtE,OAAgBgB,KAAKqT,MAAMvN,EAAKxC,MAAMyH,UAAtC,KAErC,OACI+D,EAAAC,EAAAC,cAAA,OAAKxK,MAAM,cAAc0K,UAAS,GAAAlQ,OAAKgU,EAAQb,SAAb,eAAoC7B,QAAS6C,GAC3ErE,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQN,UACpB5D,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQL,UAAU7D,EAAAC,EAAAC,cAAA,iBAASlJ,EAAK1H,KAEhD0Q,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACsE,GAAA,EAAD,CAAOC,UAAU,MAAMC,QAAS,EAAGnE,MAAO,CAAEe,QAAS,QAC/CtK,EAAKF,OAASkJ,EAAAC,EAAAC,cAACyE,GAAA,EAAD,CAAMC,MAAM,QAAQpR,MAAM,aACvCwD,EAAKF,OAASE,EAAKxC,OAASwL,EAAAC,EAAAC,cAACyE,GAAA,EAAD,CAAMC,MAAK,GAAA1U,OAAKgB,KAAKqT,MAAMvN,EAAKxC,MAAMyH,UAA3B,KAAyCzI,MAAM,aACtFwD,EAAKF,QAAUE,EAAKxC,OAASwL,EAAAC,EAAAC,cAACyE,GAAA,EAAD,CAAMC,MAAM,cAAcpR,MAAM,cAIxEwM,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAYvL,MAAM,cAAc8L,QAAS8C,GACrCtE,EAAAC,EAAAC,cAAC2E,GAAA5E,EAAD,QAIRD,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEuE,WAAY,KAAMlE,MAAO,QACnCZ,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQN,UACpB5D,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQL,UAAU7D,EAAAC,EAAAC,cAAC6E,GAAA9E,EAAD,CAAYM,MAAO,CAAEyE,YAAa,QAAUxR,MAAM,YAApF,IAAiGwD,EAAKL,SAASnI,SAA/G,YACAwR,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQL,UAAU7D,EAAAC,EAAAC,cAAC+E,GAAAhF,EAAD,CAAeM,MAAO,CAAEyE,YAAa,QAAUxR,MAAM,YAAvF,IAAoGwD,EAAKL,SAAS/H,WAAlH,cACAoR,EAAAC,EAAAC,cAAA,OAAKE,UAAW8D,EAAQL,UAAU7D,EAAAC,EAAAC,cAACgF,GAAAjF,EAAD,CAAmBM,MAAO,CAAEyE,YAAa,QAAUxR,MAAM,YAA3F,IAAwG5B,EAAiBoF,EAAKR,WAElIwJ,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAAI,CAAEO,MAAO,OAAQC,QAAS,OAAQC,WAAY,SAAUqE,UAAW,QACxEnF,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAAI,CAAE+E,OAAQ,OAAQxE,MAAO,OAAQC,QAAS,OAAQC,WAAY,WACnEd,EAAAC,EAAAC,cAACmF,GAAA,EAAD,CAAgBC,QAAQ,cAAc7T,MAAOwK,EAAUsJ,YAAa,WCjF7EC,GAfI,SAAEnI,GAAkB,IAC3B3H,EAAkB2H,EAAlB3H,MACF+P,EAAc/P,GAAkB,IAATA,EAAcA,EAAQ,OAI7C8L,EAAU3O,EALUwK,EAAXI,QAOf,OACIuC,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAYzN,MAAM,YAAYkC,MAAO+P,EAAajE,QAASA,GACvDxB,EAAAC,EAAAC,cAAC2C,GAAA5C,EAAD,ikCCCZ,ICVYyF,GD8IGC,GApIE,SAAEtI,GAAkB,IACzBvF,EAA4CuF,EAA5CvF,MAAO8N,EAAqCvI,EAArCuI,QAAStI,EAA4BD,EAA5BC,WAAYuI,EAAgBxI,EAAhBwI,YAE9BnI,EAAWC,cAIXoG,EAAY,WACd/T,QAAQC,IAAR,gBACA,IAAM+G,EAAOZ,KACbwP,EAAS5O,GACT0G,EAAUX,GAAY/F,KAGpBgN,EAAa,SAAEhN,GACjBhH,QAAQC,IAAR,iBAAAC,OAA8B8G,EAAK1H,KACnCgO,EAAYtG,EAAK1H,GAAI,SAAE0H,GAOnB,OANAA,EAAKR,QAAU1E,KAAKyE,MACfS,EAAKF,MACNE,EAAKP,KAAOT,GAAS8G,OACb9F,EAAKH,UACbG,EAAKP,KAAOT,GAASkG,OAElBlF,IAEX0G,EAAUX,GAAY/F,KAGpBiN,EAAa,SAAEjN,GACjB6O,EAAa,CAAE7O,EAAK1H,MAexB2P,IAAME,UAAW,WACb,IADmB3F,EACfsM,EAAuB,GADR/L,EAAAgM,GAECjO,GAFD,IAEnB,IAAAiC,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAA4B,KAAhBnD,EAAgBwC,EAAA/H,MACnBuF,EAAKF,OACQhF,KAAKyE,MAAQS,EAAKR,QACL,QACvBsP,EAAWvW,KAAMyH,EAAK1H,KANf,MAAA4L,GAAAnB,EAAAoB,EAAAD,GAAA,QAAAnB,EAAAqB,IAUd0K,EAAWpX,OAAS,GACrBmX,EAAaC,IAElB,IAMH,IAAME,EAAczO,OAAAQ,EAAA,EAAAR,CAAKO,GAAQE,KAAM,SAAEC,EAAYC,GACjD,OAAOA,EAAM1B,QAAUyB,EAAKzB,UAGhC,OACIwJ,EAAAC,EAAAC,cAAC+F,GAAD,CAAMvQ,MAAM,UAAU+H,OAAQsG,GAK1B/D,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUwC,QAAS,UACpFvD,EAAAC,EAAAC,cAACgG,GAAD,CAAYxQ,MAAM,WAAW+H,OAAQsG,KAKzC/D,EAAAC,EAAAC,cAACiG,GAAA,EAAD,KAEInG,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CAAkBC,WAAYrG,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,OAA9B,kBAIAD,EAAAC,EAAAC,cAACqG,GAAA,EAAD,KAEIvG,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAIb1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACKgF,EAAYtO,IAAK,SAAAV,GACd,OACIgJ,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAK4D,EAAK1H,GAAIoX,MAAI,EAACC,GAAI,GAAIC,UAAU,QACvC5G,EAAAC,EAAAC,cAAC2G,GAAD,CACI7P,KAAMA,EACNgN,WAAYA,EACZC,WAAYA,QASxCjE,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,SAIzB5G,EAAAC,EAAAC,cAACe,EAAA,EAAD,CACIvL,MAAM,mBACNlC,MAAM,UACNyO,SAA0B,GAAhBnK,EAAMpJ,OAChB8S,QAnFL,WACnB,IADyBpF,EACrB0K,EAAuB,GADFxK,EAAAyJ,GAELjO,GAFK,IAEzB,IAAAwE,EAAArC,MAAAmC,EAAAE,EAAApC,KAAAC,MAA4B,KAAhBnD,EAAgBoF,EAAA3K,MACxBqV,EAAWvX,KAAMyH,EAAK1H,KAHD,MAAA4L,GAAAoB,EAAAnB,EAAAD,GAAA,QAAAoB,EAAAlB,IAKzByK,EAAaiB,KAgFW9G,EAAAC,EAAAC,cAAC6G,EAAA9G,EAAD,4CE/FjB+G,GAxBE,SAAE3J,GAAkB,IACzB3H,EAAkF2H,EAAlF3H,MAAO0D,EAA2EiE,EAA3EjE,SAAUpC,EAAiEqG,EAAjErG,KAAMuG,EAA2DF,EAA3DE,aAAcD,EAA6CD,EAA7CC,WAAYE,EAAiCH,EAAjCG,WAAYC,EAAqBJ,EAArBI,OAAQuF,EAAa3F,EAAb2F,SAEvEtF,EAAWC,cASjB,OAPAsB,IAAME,UAAW,WACRnI,EAAKP,OAAS2C,IACfpJ,QAAQC,IAAR,+CAAAC,OAA2DkJ,EAA3D,iBAAAlJ,OAAmF8G,EAAKP,KAAxF,mBACAiH,EAAUX,GAAY/F,GAAQ,CAAEiQ,SAAS,MAE9C,CAAEjQ,IAGDgJ,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACIhB,EAAAC,EAAAC,cAAA,OAAKE,UAAS,aAAAlQ,OAAekJ,EAAS8N,gBAClClH,EAAAC,EAAAC,cAAC+C,GAAD,CAAQvN,MAAOA,EAAO0D,SAAUA,EAAUpC,KAAMA,EAAMuG,aAAcA,EAAcD,WAAYA,EAAYE,WAAYA,EAAYC,OAAQA,IACzIuF,EACDhD,EAAAC,EAAAC,cAACgD,GAAD,OAEHtV,GAASoS,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEkD,OAAQ,iBAAkB0D,WAAY,OAAQ5D,QAAS,SAAW/K,KAAKC,UAAUzB,OAAKrI,EAAU,MCsMrHyY,GAvNM,SAAE/J,GACWA,EAAtBvF,MAD6B,IACtBwF,EAAeD,EAAfC,WAETI,EAAWC,cAGX3G,EAAO6B,GAAYf,EADNuP,cAAXvO,QAUR,GAPAmG,IAAME,UAAW,WACPnI,IACFhH,QAAQC,IAAR,4CACAyN,ET5BV,OS8BK,CAAE1G,KAECA,EACF,OAAO,KAKX,IAAML,EAAWK,EAAKL,SAEhBnI,EAAWmI,EAASnI,SAEpB8Y,EAAqB9Y,GrBvCF,EqBwCnB+Y,EAAqB/Y,GrBvCF,GqByCnBI,EAAa+H,EAAS/H,WAEtB4Y,EAAuB5Y,GrBtCF,GqBuCrB6Y,EAAuB7Y,GrBtCF,IqBwCrBC,EAAW8H,EAAS9H,SAEpB6Y,EAAqB7Y,GrBrCW,EqBsChC8Y,EAAqB9Y,GrBrCW,EqByChC+Y,EAAiB,SAAEpZ,GACrB8O,EAAYtG,EAAK1H,GAAI+H,GAAgB,SAAEV,GAEnC,OADAA,EAASnI,SAAWA,EACbmI,MAITkR,EAAmB,SAAEjZ,GACvB0O,EAAYtG,EAAK1H,GAAI+H,GAAgB,SAAEV,GAEnC,OADAA,EAAS/H,WAAaA,EACf+H,MAITmR,EAAiB,SAAEjZ,GACrByO,EAAYtG,EAAK1H,GAAI+H,GAAgB,SAAEV,GAEnC,OADAA,EAAS9H,SAAWA,EACb8H,MAUToR,EAAaT,OAAqB3Y,EAAYkE,EAAa,kBAAM+U,EAAgB5Q,EAAKL,SAASnI,SrB/EtE,KqBgFzBwZ,EAAaT,OAAqB5Y,EAAYkE,EAAa,kBAAM+U,EAAgB5Q,EAAKL,SAASnI,SrBhFtE,KqBkFzByZ,EAAeT,OAAuB7Y,EAAYkE,EAAa,kBAAMgV,EAAkB7Q,EAAKL,SAAS/H,WrB5E1E,MqB6E3BsZ,EAAeT,OAAuB9Y,EAAYkE,EAAa,kBAAMgV,EAAkB7Q,EAAKL,SAAS/H,WrB7E1E,MqB+E3BuZ,EAAaT,OAAqB/Y,EAAYkE,EAAa,kBAAMiV,EAAgB9Q,EAAKL,SAAS9H,SrBzEzD,KqB0EtCuZ,EAAaT,OAAqBhZ,EAAYkE,EAAa,kBAAMiV,EAAgB9Q,EAAKL,SAAS9H,SrB1EzD,KqB4E5C,OACImR,EAAAC,EAAAC,cAACmI,GAAD,CAAUjP,SAAUpD,GAASU,SAAUM,KAAMA,EAAMsG,WAAYA,EAAYG,OAhBhE,WACXH,EAAYtG,EAAK1H,GAAI+J,MAiBjB2G,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAIrB1E,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAEhEf,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACI/H,MAAO,CAAEyE,YAAa,QACtBuD,KAAK,QACLjD,QAAQ,YACRrD,SAAUqF,EACV9F,QAASuG,GALb,KrBnGe,IqB8GnB/H,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTC,UAAU,SACVrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAEhEf,EAAAC,EAAAC,cAAC6E,GAAA9E,EAAD,CAAYM,MAAO,CAAEyE,YAAa,QAAUxR,MAAM,YACjDhF,EANL,IAMgBA,EAAW,EAAI,UAAY,UAG3CwR,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTC,UAAU,SACVrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAEhEf,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACI/H,MAAO,CAAEuE,WAAY,QACrByD,KAAK,QACLjD,QAAQ,YACRrD,SAAUsF,EACV/F,QAASwG,GALb,KrB5He,IqByInBhI,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAEhEf,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACI/H,MAAO,CAAEyE,YAAa,QACtBuD,KAAK,QACLjD,QAAQ,YACRrD,SAAUuF,EACVhG,QAASyG,GALb,KrBvIiB,KqBkJrBjI,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAEhEf,EAAAC,EAAAC,cAAC+E,GAAAhF,EAAD,CACIM,MAAO,CAAEyE,YAAa,QACtBxR,MAAM,YAET5E,EARL,cAWAoR,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAEhEf,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACI/H,MAAO,CAAEuE,WAAY,QACrByD,KAAK,QACLjD,QAAQ,YACRrD,SAAUwF,EACVjG,QAAS0G,GALb,KrBjKiB,KqB8KrBlI,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAEhEf,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACI/H,MAAO,CAAEyE,YAAa,QACtBuD,KAAK,QACLjD,QAAQ,YACRrD,SAAUyF,EACVlG,QAAS2G,GALb,KrB5K4B,IqBuLhCnI,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAEhEf,EAAAC,EAAAC,cAACsI,GAAAvI,EAAD,CACIM,MAAO,CAAEyE,YAAa,QACtBxR,MAAM,YAET3E,EARL,uBAWAmR,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CACIE,MAAI,EAACC,GAAI,EACTpG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAEhEf,EAAAC,EAAAC,cAACoI,GAAA,EAAD,CACI/H,MAAO,CAAEuE,WAAY,QACrByD,KAAK,QACLjD,QAAQ,YACRrD,SAAU0F,EACVnG,QAAS4G,GALb,KrBtM4B,qCsBLjCK,GAVE,SAAEpL,GAAkB,IACzB7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,yICKLC,GAVK,SAAExL,GAAkB,IAC5B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,4ECKLE,GAVI,SAAEzL,GAAkB,IAC3B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,iFCKLG,GAVG,SAAE1L,GAAkB,IAC1B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,0ECKLI,GAVG,SAAE3L,GAAkB,IAC1B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,oHCKLK,GAVI,SAAE5L,GAAkB,IAC3B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,kCCKLM,GAVE,SAAE7L,GAAkB,IACzB7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,+ICKLO,GAVM,SAAE9L,GAAkB,IAC7B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,6BCKLQ,GAVG,SAAE/L,GAAkB,IAC1B7J,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEf,OACIxB,EAAAC,EAAAC,cAAA,OAAKwI,MAAM,6BAA6BC,QAAQ,YAAYvI,UAAS,cAAAlQ,OAAgBsD,EAAM0T,eAAiB1F,QAASA,GACjHxB,EAAAC,EAAAC,cAAA,QAAM0I,EAAE,sECmCLS,GA5BS,SAAEhM,GAAkB,IAEhC/J,EAA2B+J,EAA3B/J,OAAQE,EAAmB6J,EAAnB7J,MAAOgO,EAAYnE,EAAZmE,QAEvB,OAASlO,GACL,KAAK7F,EAAWoG,KACZ,OAAOmM,EAAAC,EAAAC,cAACoJ,GAAD,CAAU9V,MAAOA,EAAOgO,QAASA,IAC5C,KAAK/T,EAAW8b,MACZ,OAAOvJ,EAAAC,EAAAC,cAACsJ,GAAD,CAAWhW,MAAOA,EAAOgO,QAASA,IAC7C,KAAK/T,EAAWkG,QACZ,OAAOqM,EAAAC,EAAAC,cAACuJ,GAAD,CAAajW,MAAOA,EAAOgO,QAASA,IAC/C,KAAK/T,EAAWuG,OACZ,OAAOgM,EAAAC,EAAAC,cAACwJ,GAAD,CAAYlW,MAAOA,EAAOgO,QAASA,IAC9C,KAAK/T,EAAW8F,MACZ,OAAOyM,EAAAC,EAAAC,cAACyJ,GAAD,CAAWnW,MAAOA,EAAOgO,QAASA,IAC7C,KAAK/T,EAAWsG,MACZ,OAAOiM,EAAAC,EAAAC,cAAC0J,GAAD,CAAWpW,MAAOA,EAAOgO,QAASA,IAC7C,KAAK/T,EAAWoc,OACZ,OAAO7J,EAAAC,EAAAC,cAAC4J,GAAD,CAAYtW,MAAOA,EAAOgO,QAASA,IAC9C,KAAK/T,EAAWsc,KACZ,OAAO/J,EAAAC,EAAAC,cAAC8J,GAAD,CAAUxW,MAAOA,EAAOgO,QAASA,IAC5C,KAAK/T,EAAW2G,SACZ,OAAO4L,EAAAC,EAAAC,cAAC+J,GAAD,CAAczW,MAAOA,EAAOgO,QAASA,IAChD,QACI,OAAO,OCkCJ0I,GA1DK,SAAE7M,GAAkB,IAC5B9B,EAAgD8B,EAAhD9B,KAAM4O,EAA0C9M,EAA1C8M,SAAUrZ,EAAgCuM,EAAhCvM,SAAUmR,EAAsB5E,EAAtB4E,SAAUT,EAAYnE,EAAZmE,QAE5C,QAAa7S,GAAR4M,EACD,OACIyE,EAAAC,EAAAC,cAAA,OAAKE,UAAS,aAAAlQ,OAAeia,EAAf,gBAAuC3I,QAASA,GAC1DxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,MAEJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAAf,KACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,MAEJJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBAAf,OAMhB,IAAIgK,EAAc,OAclB,OAbK7O,EAAKgN,OACN6B,EAAc,GAAAla,OAAMka,EAAN,UAAAla,OAA6BqL,EAAKgN,OAE/CtG,IACDmI,EAAc,GAAAla,OAAMka,EAAN,cAEbtZ,IACDsZ,EAAc,GAAAla,OAAMka,EAAN,cAEb5I,IACD4I,EAAc,GAAAla,OAAMka,EAAN,gBAIdpK,EAAAC,EAAAC,cAAA,OAAKE,UAAWgK,EAAgB5I,QAASA,GACrCxB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACmK,GAAD,CAAiB/W,OAAQiI,EAAKjI,OAAQE,MAAO+H,EAAK/H,UAG1DwM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,iBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eACV7E,EAAKpM,OAAL,GAAAe,OAAiBqL,EAAKpM,OAAS,IAAOoM,EAAK9J,OAEhDuO,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACmK,GAAD,CAAiB/W,OAAQiI,EAAKjI,OAAQE,MAAO+H,EAAK/H,UAG1DwM,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,gBACXJ,EAAAC,EAAAC,cAACmK,GAAD,CAAiB/W,OAAQiI,EAAKjI,OAAQE,MAAO+H,EAAK/H,sBb1D1DkS,6DAQZ,IAqBe4E,GArBM,SAAEjN,GAAkB,IAC7B/N,EAA0C+N,EAA1C/N,GAAIiZ,EAAsClL,EAAtCkL,KAAMtG,EAAgC5E,EAAhC4E,SAAUnR,EAAsBuM,EAAtBvM,SAAU0Q,EAAYnE,EAAZmE,QAElC+I,EAAgB,SAapB,OAZAA,EAAgB,GAAAra,OAAMqa,EAAN,YAAAra,OAAiCZ,GACjDib,EAAgB,GAAAra,OAAMqa,EAAN,YAAAra,OAAiCqY,GAC5CtG,IACDsI,EAAgB,GAAAra,OAAMqa,EAAN,cAEfzZ,IACDyZ,EAAgB,GAAAra,OAAMqa,EAAN,cAEf/I,IACD+I,EAAgB,GAAAra,OAAMqa,EAAN,gBAIhBvK,EAAAC,EAAAC,cAAA,OAAKE,UAAWmK,EAAkB/I,QAASA,yBc8HpCgJ,GAjJU,SAAEnN,GAAkB,IACjCwC,EAAwExC,EAAxEwC,KAAM4K,EAAkEpN,EAAlEoN,WAAYlP,EAAsD8B,EAAtD9B,KAAMmP,EAAgDrN,EAAhDqN,eAAgBC,EAAgCtN,EAAhCsN,cAAeC,EAAiBvN,EAAjBuN,aAc/D,OACI5K,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CACIhL,KAAMA,EACNgC,QAAS4I,EACT1I,kBAAgB,oBAChB+I,mBAAiB,2BAEjB9K,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAnBC,CACVK,SAAU,WACVqK,IAAK,MACL9S,KAAM,MACN+S,UAAW,wBACXpK,MAAO,IACPqK,QAAS,mBACTzH,aAAc,OACd0H,UAAW,GACX1d,EAAG,IAWKwS,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGnE,MAAO,CAAEO,WAAY,aAE7Cd,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,aAElGf,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAYC,aAAW,QAAQM,QAASiJ,GACpCzK,EAAAC,EAAAC,cAAC2E,GAAA5E,EAAD,SAOZD,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGnE,MAAO,CAAEO,WAAY,aAE7Cd,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGF,WAAS,EAAC/B,QAAS,EAAGkC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEvHf,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,UACzB5G,EAAAC,EAAAC,cAACiL,GAAA,EAAD,KACInL,EAAAC,EAAAC,cAAA,qBAKJ3I,OAAO9G,KAAK/C,GAAWoN,OAAQ,SAAA1H,GAAG,OAAIA,GAAoB1F,EAAU0d,OAAO1T,IAAK,SAAAtE,GAC5E,IAAMiY,EAAWjY,EACjB,OACI4M,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAKiY,EAAU3E,MAAI,EAACC,GAAI,GAC1B3G,EAAAC,EAAAC,cAAA,OACIK,MAAO,CAAEK,MAAO,MAAOC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAC9EX,UAAW7E,EAAK/H,OAAS6X,EAAW,WAAa,aACjD7J,QAAS,kBAAMmJ,EAAcU,KAE7BrL,EAAAC,EAAAC,cAACmK,GAAD,CACI/W,OAAQ7F,EAAWuG,OACnBR,MAAO6X,SAUnCrL,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUoE,UAAW,MAAO3E,aAAc,SAE3IR,EAAAC,EAAAC,cAACoL,GAAD,CAAa/P,KAAIhE,OAAAC,EAAA,EAAAD,CAAA,GACNgE,EADM,CAETgN,KAAM5a,EAAS4d,QAQ3BvL,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGF,WAAS,EAAC/B,QAAS,EAAGkC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEvHf,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,UACzB5G,EAAAC,EAAAC,cAACiL,GAAA,EAAD,KACInL,EAAAC,EAAAC,cAAA,sBAKJ3I,OAAO9G,KAAKhD,GAAYiK,IAAK,SAAAtE,GACzB,IAAMoY,EAAYpY,EAClB,OACI4M,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAKoY,EAAW9E,MAAI,EAACC,GAAI,GAC3B3G,EAAAC,EAAAC,cAAA,OACIK,MAAO,CAAEK,MAAO,MAAOC,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAC9EX,UAAW7E,EAAKjI,QAAUkY,EAAY,WAAa,aACnDhK,QAAS,kBAAMkJ,EAAec,KAE9BxL,EAAAC,EAAAC,cAACmK,GAAD,CACI/W,OAAQkY,EACRhY,MAAO9F,EAAU0d,YAY7CpL,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,WAClGf,EAAAC,EAAAC,cAACiL,GAAA,EAAD,KACInL,EAAAC,EAAAC,cAAA,0BAIRF,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAG9FnN,EAAa8D,IAAK,SAAA+T,GACd,OACIzL,EAAAC,EAAAC,cAACoL,GAAD,CACIlY,IAAG,cAAAlD,OAAgBub,EAAYnY,OAA5B,KAAApD,OAAsCub,EAAYjY,OACrD+H,KAAIhE,OAAAC,EAAA,EAAAD,CAAA,GACGkU,EADH,CAEAtc,OAAQoM,EAAKpM,OACbsC,MAAO8J,EAAK9J,MACZ8W,KAAM5a,EAAS+d,KAEnBlK,QAAS,kBAAMoJ,EAAaa,aChJvDE,GAAiBtb,ElCyBD,IkCzBwBqH,IAAK,SAAA1G,GAAC,OAAIA,EAAI,ICoFpD4a,GAzEK,SAAEvO,GAAkB,IAC5BwC,EAA+CxC,EAA/CwC,KAAM4K,EAAyCpN,EAAzCoN,WAAYjP,EAA6B6B,EAA7B7B,SAAUqQ,EAAmBxO,EAAnBwO,eAcpC,OACI7L,EAAAC,EAAAC,cAAC2K,GAAA,EAAD,CACIhL,KAAMA,EACNgC,QAAS4I,EACT1I,kBAAgB,oBAChB+I,mBAAiB,2BAEjB9K,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAnBC,CACVK,SAAU,WACVqK,IAAK,MACL9S,KAAM,MACN+S,UAAW,wBACXpK,MAAO,IACPqK,QAAS,mBACTzH,aAAc,OACd0H,UAAW,GACX1d,EAAG,IAWKwS,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGnE,MAAO,CAAEO,WAAY,WAE7Cd,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,aAElGf,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAYC,aAAW,QAAQM,QAASiJ,GACpCzK,EAAAC,EAAAC,cAAC2E,GAAA5E,EAAD,QAKRD,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUoE,UAAW,MAAO3E,aAAc,SAE3IR,EAAAC,EAAAC,cAAC4L,GAAD,CAAcxc,GAAIkM,EAAU+M,KAAM7C,GAAW6F,MAMjDvL,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGF,WAAS,EAAC/B,QAAS,EAAGkC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEvHf,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,UACzB5G,EAAAC,EAAAC,cAACiL,GAAA,EAAD,KACInL,EAAAC,EAAAC,cAAA,sBAKJyL,GAAejU,IAAK,SAAAqU,GAChB,OACI/L,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAK2Y,EAAarF,MAAI,EAACC,GAAI,GAC7B3G,EAAAC,EAAAC,cAAC4L,GAAD,CACIxc,GAAIyc,EACJxD,KAAM7C,GAAWsG,EACjBlb,SAAU0K,GAAYuQ,EACtBvK,QAAS,kBAAMqK,EAAeE,cCyG3DE,GAnJI,SAAE5O,GAAkB,IAC3B1F,EAAmD0F,EAAnD1F,OAAQuU,EAA2C7O,EAA3C6O,WAAY/B,EAA+B9M,EAA/B8M,SAAUnT,EAAqBqG,EAArBrG,KAAMsG,EAAeD,EAAfC,WADTiC,EAGTN,IAAMO,SAAU7H,EAAOpC,MAHdkK,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAgI,EAAA,GAG3BhK,EAH2BkK,EAAA,GAGrB0M,EAHqB1M,EAAA,GAI7B2M,OAAoBzd,IAATqI,QAAqCrI,IAAf2O,EAJJ+O,EAMepN,IAAMO,UAAU,GAN/B8M,EAAA/U,OAAAmI,EAAA,EAAAnI,CAAA8U,EAAA,GAM3BE,EAN2BD,EAAA,GAMTE,EANSF,EAAA,GAAAG,EAUKxN,IAAMO,UAAU,GAVrBkN,EAAAnV,OAAAmI,EAAA,EAAAnI,CAAAkV,EAAA,GAU3BE,EAV2BD,EAAA,GAUdE,EAVcF,EAAA,GAcnC,IAAM/U,EAAOxI,OACT,OAAO,KAOX,IAkBM0d,EAAmB,SAAEtR,GAClB6Q,GACD9O,EAAYtG,EAAK1H,GAAImI,GAAcE,EAAOrI,GAAI,SAAEqI,GAE5C,OADAA,EAAO4D,KAAOA,EACP5D,MA2CnB,OACIqI,EAAAC,EAAAC,cAAC4M,GAAA,EAAD,CAAMxH,QAAQ,YACVtF,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,KAEA/M,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAErB1E,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAClGf,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAAI,CAAEQ,QAAS,OAAQC,WAAY,aACpCd,EAAAC,EAAAC,cAAC4L,GAAD,CACIxc,GAAIqI,EAAO6D,SACX+M,KAAM2D,GAAcxG,GAAWsH,EAC/BxL,QAAS4K,EAvFT,kBAAMQ,GAAe,SAuFiBje,IAExCyd,GAAYpM,EAAAC,EAAAC,cAAC+M,GAAA,EAAD,CAAW3d,GAAG,iBAAiBiR,MAAO,CAAEuE,WAAY,QAAUF,MAAM,OAAOU,QAAQ,WAAW7T,MAAO8D,EAAM2X,SA/CxH,SAAE/R,GACnBgR,EAAShR,EAAEgS,OAAO1b,QA8C+I2b,OA3ClJ,YAnCM,SAAE7X,GAClB6W,GACD9O,EAAYtG,EAAK1H,GAAImI,GAAcE,EAAOrI,GAAI,SAAEqI,GAE5C,OADAA,EAAOpC,KAAOA,EACPoC,KAgCf0V,CAAkB9X,OA2CC6W,GACCpM,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQyC,cAAe,SAAUxC,WAAY,aAAcgE,WAAY,OAAQE,YAAa,SAC/GhF,EAAAC,EAAAC,cAACiL,GAAA,EAAD,KAAYnL,EAAAC,EAAAC,cAAA,kBAAZ,IAA0B3K,GAC1ByK,EAAAC,EAAAC,cAACiL,GAAA,EAAD,KAAYnL,EAAAC,EAAAC,cAAA,mBAAZ,IAA2BvI,EAAOnD,MAAMK,SAIpDmL,EAAAC,EAAAC,cAACoL,GAAD,CAAa/P,KAAIhE,OAAAC,EAAA,EAAAD,CAAA,GACNI,EAAO4D,KADD,CAETpM,OAAQwI,EAAOxI,OACfoZ,KAAM4B,GAAYxc,EAAS2f,IAE/B9L,QAAS4K,EA1GA,kBAAMI,GAAoB,SA0GQ7d,KAIjDyd,GACEpM,EAAAC,EAAAC,cAACqN,GAAD,CACI1N,KAAM0M,EACN9B,WAhHU,kBAAM+B,GAAoB,IAiHpCjR,KAAIhE,OAAAC,EAAA,EAAAD,CAAA,GACGI,EAAO4D,KADV,CAEA9J,MAAK,GAAAvB,OAAKyH,EAAOxI,OAAS,MAE9Bub,eAhEG,SAACpX,GACpBuZ,EAAiBtV,OAAAC,EAAA,EAAAD,CAAA,GACVI,EAAO4D,KADE,CAEZjI,OAAQA,MA8DIqX,cA1DE,SAACnX,GACnBqZ,EAAiBtV,OAAAC,EAAA,EAAAD,CAAA,GACVI,EAAO4D,KADE,CAEZ/H,MAAOA,MAwDKoX,aApDC,SAACrP,GAClBsR,EAAiBtV,OAAAC,EAAA,EAAAD,CAAA,GACVI,EAAO4D,KADE,CAEZ/H,MAAO+H,EAAK/H,MACZF,OAAQiI,EAAKjI,aAoDP8Y,GACEpM,EAAAC,EAAAC,cAACsN,GAAD,CACI3N,KAAM8M,EACNlC,WA1HK,kBAAMmC,GAAe,IA2H1BpR,SAAU7D,EAAO6D,SACjBqQ,eArDG,SAACrQ,IApDG,SAAEA,GACpB4Q,GACD9O,EAAYtG,EAAK1H,GAAImI,GAAcE,EAAOrI,GAAI,SAAEqI,GAE5C,OADAA,EAAO6D,SAAWA,EACX7D,KAiDf8V,CAAoBjS,UCxCbkS,GA1DK,SAAErQ,GACYA,EAAtBvF,MAD4B,IACrBwF,EAAeD,EAAfC,WAETI,EAAWC,cAGX3G,EAAO6B,GAAYf,EADNuP,cAAXvO,QAUR,GAPAmG,IAAME,UAAW,WACPnI,IACFhH,QAAQC,IAAR,4CACAyN,EzBtBV,OyBwBK,CAAE1G,KAECA,IAASA,EAAKJ,QAChB,OAAO,KAKX,IAAM4G,EAAaxG,EAAKH,QAAU,WAC9ByG,EAAYtG,EAAK1H,GAAI6J,GAAQnD,GAASkG,cACtCvN,EAEE8O,EAAUzG,EAAKH,aAEjBlI,EAF2B,WAC3B2O,EAAYtG,EAAK1H,GAAI6J,GAAQnD,GAASkG,SAG1C,OACI8D,EAAAC,EAAAC,cAACmI,GAAD,CAAUjP,SAAUpD,GAAS6F,QAAS7E,KAAMA,EAAMsG,WAAYA,EAAYE,WAAYA,EAAYC,OAAQA,GAEtGuC,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAIb1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACKhK,EAAKJ,QAAQc,IAAK,SAAAC,GACf,OACIqI,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAKuE,EAAOrI,GAAIoX,MAAI,EAACC,GAAI,EAAGC,UAAU,QACxC5G,EAAAC,EAAAC,cAACyN,GAAD,CACI3W,KAAMA,EACNW,OAAQA,EACR2F,WAAYA,WCVzCsQ,GAnCG,SAAEvQ,GACcA,EAAtBvF,MAD0B,IACnBwF,EAAeD,EAAfC,WAETI,EAAWC,cAGX3G,EAAO6B,GAAYf,EADNuP,cAAXvO,QAaR,GAVAmG,IAAME,UAAW,WACPnI,EAGMA,EAAK+E,iBACb/L,QAAQC,IAAR,kCAAAC,OAA8C8G,EAAK+E,iBACnD2B,EAAUX,GAAY/F,MAJtBhH,QAAQC,IAAR,4CACAyN,E1BpBV,O0ByBK,CAAE1G,KAECA,EACF,OAAO,KAGX,IAAMyG,EAAS,WACXH,EAAYtG,EAAK1H,GAAIwM,KAGzB,OACIkE,EAAAC,EAAAC,cAACmI,GAAD,CAAUjP,SAAUpD,GAASkG,MAAOlF,KAAMA,EAAMsG,WAAYA,EAAYG,OAAQA,GAC5EuC,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SAAUwC,QAAS,UACpFvD,EAAAC,EAAAC,cAACgG,GAAD,CAAYxQ,MAAM,aAAa+H,OAAQA,iIC4BxCoQ,GA1DG,SAAExQ,GAAkB,IAC1BpG,EAAUoG,EAAVpG,MAER,IAAMA,EACF,OAAO,KAGX,IAAM6W,EAAa7W,EAAMrB,QAAUqB,EAAMrB,OAAOJ,QAAUyB,EAAMrB,OAAOJ,QAAUyB,EAAMpB,OAASoB,EAAMpB,MAAML,QAAUyB,EAAMpB,MAAML,QAAUuY,KACtIC,EAAa/W,EAAMrB,QAAUqB,EAAMrB,OAAOL,KAAO0B,EAAMrB,OAAOL,KAAO,IACrE0Y,EAAYhX,EAAMpB,OAASoB,EAAMpB,MAAMH,MAAQuB,EAAMpB,MAAMH,MAAQ,IAEzE,OACIsK,EAAAC,EAAAC,cAAC4M,GAAA,EAAD,CAAMxH,QAAQ,YACVtF,EAAAC,EAAAC,cAAC6M,GAAA,EAAD,KAEI/M,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,KAAK9R,MAAM,eAAe0a,UAAU,MAAM3N,MAAO,CAAE6D,OAAQ,aAC1EnN,EAAMvB,OAGXsK,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAAI,CAAEQ,QAAS,OAAQC,WAAY,SAAUqN,GAAI,EAAGC,GAAI,IAEzDpO,EAAAC,EAAAC,cAACmO,GAAA,EAAD,CACIH,UAAU,MACV7N,GAAI,CAAEO,MAAO,GAAIwE,OAAQ,GAAIhB,OAAQ,YACrCkK,MAAOR,IAGX9N,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQyC,cAAe,SAAU0B,YAAa,SAEjEhF,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,YAAY9R,MAAM,iBAAiB0a,UAAU,OAAjE,UAIAlO,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,YAAY9R,MAAM,iBAAiB0a,UAAU,OAAjE,UAMJlO,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQyC,cAAe,SAAU0B,YAAa,SAEjEhF,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,YAAY9R,MAAM,eAAe0a,UAAU,OAC1DF,GAGLhO,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,YAAY9R,MAAM,eAAe0a,UAAU,OAC1DD,QCsQdM,GAjSK,SAAElR,GAAkB,IAC5BtI,EAAqIsI,EAArItI,WAAYkC,EAAyHoG,EAAzHpG,MAAOuX,EAAkHnR,EAAlHmR,QAASC,EAAyGpR,EAAzGoR,KAAM5X,EAAmGwG,EAAnGxG,QAAS6X,EAA0FrR,EAA1FqR,QAASzS,EAAiFoB,EAAjFpB,SAAU0S,EAAuEtR,EAAvEsR,OAAQC,EAA+DvR,EAA/DuR,cAAeC,EAAgDxR,EAAhDwR,eAAgBC,EAAgCzR,EAAhCyR,cAAeC,EAAiB1R,EAAjB0R,aAE5H,IAAMha,IAAekC,EACjB,OAAO,KAGX,IAAM+X,EAAW/P,IAAMgQ,OAA0B,IAAIC,MAAOjY,EAAMtB,QAkB5DwZ,EAAQ,WACVnf,QAAQC,IAAK,UA4BXmf,EAAc,WACXvY,IAAY8X,EACRD,GACD1e,QAAQC,IAAR,+CACA6e,MAEA9e,QAAQC,IAAR,oDACA4e,KAGJ7e,QAAQC,IAAR,4DAIRgP,IAAME,UAAW,WACR6P,EAAS3f,UACLqf,GACD1e,QAAQC,IAAR,4BACA+e,EAAS3f,QAAQggB,SAEjBrf,QAAQC,IAAR,8BACA+e,EAAS3f,QAAQigB,WAG1B,CAAEZ,IAEL,IAAMa,EAAa,WACfvf,QAAQC,IAAR,cACK+e,EAAS3f,UACV2f,EAAS3f,QAAQmgB,OAASte,KAAKue,IAAK,GAAKT,EAAS3f,QAAQmgB,OAAS,MAIrEE,EAAa,WACf1f,QAAQC,IAAR,cACK+e,EAAS3f,UACV2f,EAAS3f,QAAQmgB,OAASte,KAAKye,IAAK,EAAKX,EAAS3f,QAAQmgB,OAAS,MAa3EvQ,IAAME,UAAW,WAOb,GALK6P,EAAS3f,UACVW,QAAQC,IAAI,0BACZ+e,EAAS3f,QAAQigB,UAGfX,EAAS,CAENK,EAAS3f,QAAQugB,KAAO3Y,EAAMtB,QAC/B3F,QAAQC,IAAI,gBACZ+e,EAAS3f,QAAU,IAAI6f,MAAOjY,EAAMtB,OACpCqZ,EAAS3f,QAAQwgB,MAAO,EACxBb,EAAS3f,QAAQmgB,OAAS,EAC1BL,KAGJ,IAAMW,EAAc,WAChB9f,QAAQC,IAAR,mCAAAC,OAAgD8e,EAAS3f,QAAQ0gB,YAAjE,sBAAA7f,OAAiG8e,EAAS3f,QAAQ2gB,SAAlH,QAIEC,EAAe,WACjBjgB,QAAQC,IAAK,+BA5FrBD,QAAQC,IAAR,uDAAAC,OAAoE8e,EAAS3f,QAAQ2gB,SAArF,OAGApB,EAAeI,EAAS3f,QAAQ2gB,WAgGtBE,EAAa,WACflgB,QAAQC,IAAK,+BAvCrBD,QAAQC,IAAK,iCACb8e,KAmDI,OAPA/e,QAAQC,IAAI,mBACZ+e,EAAS3f,QAAQgQ,iBAAkB,aAAcyQ,GACjDd,EAAS3f,QAAQgQ,iBAAkB,iBAAkB4Q,GAErDjB,EAAS3f,QAAQgQ,iBAAkB,QAAS6Q,GAGrC,WACHlgB,QAAQC,IAAI,sBACZ+e,EAAS3f,QAAQiQ,oBAAqB,aAAcwQ,GACpDd,EAAS3f,QAAQiQ,oBAAqB,iBAAkB2Q,GAExDjB,EAAS3f,QAAQiQ,oBAAqB,QAAS4Q,GAC/Cf,KAIR,OAAOA,GAER,CAAER,EAAQ5Z,IAEb,IAGMob,GAAgBxB,GAAU9X,GAAW6X,EACrC0B,GAAgBzB,GAAU9X,IAAY6X,EAEtC2B,EAAUF,EAAetd,EAAa,WAvHnCgE,GAAW6X,IAAYC,IACxB3e,QAAQC,IAAR,8CACA6e,YAqH2DngB,EAC7D2hB,EAASF,EAAevd,EAAa,YA/HlCgE,GAAY6X,GAAYC,IACzB3e,QAAQC,IAAR,+CACA4e,YA6HyDlgB,EAQvDqQ,EAAiBC,IAAMC,YAAahM,EAAY,SAAEE,GACpD,OAASA,GACL,IAAK,IAGD,OAFApD,QAAQC,IAAR,yBAAAC,OAAsCkD,EAAtC,wBACAgc,KACO,EACX,IAAK,UAGD,OAFApf,QAAQC,IAAR,yBAAAC,OAAsCkD,EAAtC,uBACAsc,KACO,EACX,IAAK,YAGD,OAFA1f,QAAQC,IAAR,yBAAAC,OAAsCkD,EAAtC,uBACAmc,KACO,EAEf,OAAO,IACN,CAAEH,EAAaM,EAAYH,IAEhCtQ,IAAME,UAAW,WAEb,OADAC,SAASC,iBAAkB,UAAWL,GAC/B,WACHI,SAASE,oBAAqB,UAAWN,KAE9C,CAAEA,IAQT,IAAMuR,EAAeC,aAAY,SAAAC,GAAK,MAAM,CACxCC,QAAS,CACL/M,gBAAiB,cACjBnQ,MAAO,sBACP4O,SAAU,IAEduO,MAAO,CACHnd,MAAO,WAPMgd,CASbI,MAIFC,EAAOha,GAAWuZ,EACpBpQ,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,UAAU4I,UAAU,MAAM1a,MAAM,kBAChDwM,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAYC,aAAW,OAAOM,QAAS8O,GACnCtQ,EAAAC,EAAAC,cAAC4Q,GAAA7Q,EAAD,CAAeI,GAAI,CAAE+E,OAAQ,GAAIxE,MAAO,aAGhDjS,EAEE6S,EAAU3K,GAAWsZ,EAAeE,OAAU1hB,EAEpD,OACIqR,EAAAC,EAAAC,cAACqQ,EAAD,CAAc7a,QAAOiZ,GAAS3O,EAAAC,EAAAC,cAAC6Q,GAAD,CAAW9Z,MAAOA,KAC5C+I,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHK,MAAO,OACPwE,OAAQ,OACR7D,OAAQoN,EAAS,OAAS,OAC1B3J,YAAa,OACbvB,OAAQkL,EAAS,iBAAmB,OACpCnL,aAAc,OACdG,gBAAiBgL,EAAS,cAAgB,OAC1CxH,WAAYwH,EAAS1X,EAAMpB,MAAN,OAAA3F,OAAqB+G,EAAMpB,MAAML,QAAjC,YAAAtF,OAAqD6d,KAArD,KAA0E,OAC/FiD,eAAgB,cAIpBhR,EAAAC,EAAAC,cAACC,GAAA,EAAD,CACIE,GAAI,CACAO,MAAO,OACPwE,OAAQ,OACR1E,SAAU,WACVG,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChBQ,OAAQC,EAAU,UAAY,QAElCA,QAASA,IAKNmN,GAAUH,GAAWxO,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAkB3L,QAAQ,mBAC/CqJ,IAAWH,GAAW3X,GAAWmJ,EAAAC,EAAAC,cAAC+Q,GAAA,EAAD,CAAkB1I,KAAM,GAAIjD,QAAQ,cAAc7T,MAAOwK,EAAUuF,QAASA,IAIhHxB,EAAAC,EAAAC,cAACC,GAAA,EAAD,CACIE,GAAI,CACA0K,IAAK,EACL9S,KAAM,EACNiZ,OAAQ,EACRhZ,MAAO,EACPwI,SAAU,WACVG,QAAS,OACTC,WAAY,SACZC,eAAgB,UAEpBS,QAASA,GAEPqP,GAAcpC,OCsMzB0C,GAvdM,SAAE9T,GAAkB,IAC7BrG,EAAuDqG,EAAvDrG,KAAMjI,EAAiDsO,EAAjDtO,SAAUuO,EAAuCD,EAAvCC,WAAY8T,EAA2B/T,EAA3B+T,eAAgB3T,EAAWJ,EAAXI,OADf8B,EAGCN,IAAMO,SAAUzQ,EAASO,IAH1BmQ,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAgI,EAAA,GAG7BxK,EAH6B0K,EAAA,GAGjB4R,EAHiB5R,EAAA,GAAA4M,EAIKpN,IAAMO,UAAU,GAJrB8M,EAAA/U,OAAAmI,EAAA,EAAAnI,CAAA8U,EAAA,GAI7BiF,EAJ6BhF,EAAA,GAIfiF,EAJejF,EAAA,GAAAG,EAKSxN,IAAMO,SAAU,GALzBkN,EAAAnV,OAAAmI,EAAA,EAAAnI,CAAAkV,EAAA,GAK7B+E,EAL6B9E,EAAA,GAKb+E,EALa/E,EAAA,GAAAgF,EAMSzS,IAAMO,SAAU,GANzBmS,EAAApa,OAAAmI,EAAA,EAAAnI,CAAAma,EAAA,GAM7BE,EAN6BD,EAAA,GAMbE,EANaF,EAAA,GAAAG,EAOC7S,IAAMO,UAAU,GAPjBuS,EAAAxa,OAAAmI,EAAA,EAAAnI,CAAAua,EAAA,GAO7BE,EAP6BD,EAAA,GAOjBE,EAPiBF,EAAA,GAAAG,EAQDjT,IAAMO,SAAU,GARf2S,EAAA5a,OAAAmI,EAAA,EAAAnI,CAAA2a,EAAA,GAQ7BE,EAR6BD,EAAA,GAQlBE,EARkBF,EAAA,GAAAG,EASKrT,IAAMO,UAAU,GATrB+S,EAAAhb,OAAAmI,EAAA,EAAAnI,CAAA+a,EAAA,GAS7BE,EAT6BD,EAAA,GASfE,EATeF,EAAA,GAAAG,EAUKzT,IAAMO,UAAU,GAVrBmT,EAAApb,OAAAmI,EAAA,EAAAnI,CAAAmb,EAAA,GAU7BE,EAV6BD,EAAA,GAUfE,EAVeF,EAAA,GAAAG,EAWW7T,IAAMO,SAAU,GAX3BuT,EAAAxb,OAAAmI,EAAA,EAAAnI,CAAAub,EAAA,GAW7BE,GAX6BD,EAAA,GAWZE,GAXYF,EAAA,GAAAG,GAYCjU,IAAMO,UAAU,GAZjB2T,GAAA5b,OAAAmI,EAAA,EAAAnI,CAAA2b,GAAA,GAY7BE,GAZ6BD,GAAA,GAYjBE,GAZiBF,GAAA,GAcrC,IAAMnc,IAASjI,EACX,OAAO,KAGXkQ,IAAME,UAAW,WACRpK,GAAchG,EAASO,KACxBU,QAAQC,IAAR,mCAAAC,OAAgDnB,EAASO,GAAzD,iBACA+hB,EAAetiB,EAASO,IACxB6f,OAEL,CAAEpa,EAAYhG,EAASO,KAE1B,IAAMgkB,GAAgC,SAAnBvkB,EAASoB,OACtBojB,GAAcH,IAAiC,UAAnBrkB,EAASoB,QAAyC,aAAnBpB,EAASoB,OAUpErB,GAAY,SAAEW,EAAoBC,GACpC0hB,EAAgBpa,EAAK1H,GAAIP,EAASO,GAAI,SAAEP,GAAF,OvCzBvC,SAA0BA,EAAoBU,EAAoBC,GAOvE,OANMI,EAAiBf,EAAUU,EAAUC,IACzCX,EAASY,cAAcJ,KAAM,CAC3BE,SAAUA,EACVC,SAAUA,IAGPX,EuCkB+DykB,CAAiBzkB,EAAUU,EAAUC,MAGnG+jB,GAAe,SAAEhkB,EAAoBC,GACvC0hB,EAAgBpa,EAAK1H,GAAIP,EAASO,GAAI,SAAEP,GAAF,OvCXvC,SAA6BA,EAAoBU,EAAoBC,GAE1E,IADA,IAAIqL,EAAQvL,EAAsBT,EAAUU,EAAUC,GAC9CqL,GAAS,GACfhM,EAASY,cAAc+jB,OAAQ3Y,EAAO,GACtCA,EAAQvL,EAAsBT,EAAUU,EAAUC,GAEpD,OAAOX,EuCK+D4kB,CAAoB5kB,EAAUU,EAAUC,MAGtGkkB,GAAuB,WACzBxC,EAAgBpa,EAAK1H,GAAIP,EAASO,GAAI,SAAEP,GAAF,OvCiBvC,SAA0BA,GAK/B,OAJAiB,QAAQC,IAAR,iCAAAC,OAA8CnB,EAASO,KAEvDP,EAASoB,OAAS,QAEXpB,EuCtB+D8kB,CAAiB9kB,KACjFuO,EAAYtG,EAAK1H,G/ByQlB,SAAyB0H,EAAYjI,GAC1C,OAAO,SAAEiI,GACPhH,QAAQC,IAAR,uBAAAC,OAAoC8G,EAAK1H,GAAzC,OAAAY,OAAiDnB,EAASI,SAD7B,IAAA6L,EAAAC,EAAAsB,GAGPvF,EAAKJ,SAHE,IAG7B,IAAAqE,EAAAhB,MAAAe,EAAAC,EAAAf,KAAAC,MACE/E,GADmC4F,EAAAvJ,MACP+C,MAAOzF,EAASO,IAJjB,MAAA4L,GAAAD,EAAAE,EAAAD,GAAA,QAAAD,EAAAG,IAO7B,OAAOpE,G+BjRkB8c,CAAgB9c,EAAMjI,KAOzCglB,GAAgBxc,OAAAQ,EAAA,EAAAR,CAAKP,EAAKJ,SAAUoB,KAAM,SAAEC,EAAcC,GAC5D,OAAOA,EAAM1D,MAAMK,MAAQoD,EAAKzD,MAAMK,QAOpCmf,GAAa,SAAEviB,GACjB,GAAKA,EACD,OAAe,IAAVA,EACD,IACQA,EAAQ,EAChB,IAAAvB,OAAWuB,GAEX,GAAAvB,OAAUuB,IAMhBwiB,GAAa,SAAExiB,GACjB,GAAKA,EACD,OAAe,IAAVA,EACD,OACQA,EAAQ,EAChB,UAEA,WAMN8e,GAAeC,aAAY,SAAAC,GAAK,MAAM,CACxCC,QAAS,CACL/M,gBAAiB,cACjBnQ,MAAO,sBAEP4O,SAAU,IAEduO,MAAO,CACHnd,MAAO,WARMgd,CAUbI,MAMFzB,GAAQ,WACVoC,GAAiB,GACjBE,EAAmB,GACnBI,EAAmB,GACnBI,GAAe,GACfI,EAAc,GACdI,GAAiB,GACjBI,GAAiB,GACjBI,GAAoB,GACpBI,IAAe,IAQba,GAAgB,WAClBrC,EAAmB9iB,EAASK,QAAQV,SAalCylB,GAAgB,WAClBnkB,QAAQC,IAAR,uEACAshB,GAAiB,GACjBqC,MAqBE7E,GAAe,WACjB/e,QAAQC,IAAK,uCACbwN,IACA0R,MAGEiF,GAAiB,WACdxC,GAAkB7iB,EAASK,QAAQV,QACpCsB,QAAQC,IAAK,4CACbgiB,GAAe,IAGfJ,EAAmBD,EAAiB,IAItCyC,GAAgB,WACbjC,EAAY,EAEbC,EAAcD,EAAY,IAE1BpiB,QAAQC,IAAK,uEACboiB,EAAc,GACdI,GAAiB,GACjBI,GAAiB,KAInByB,GAAsB,WACnBtB,GAAkBxB,EAEnByB,GAAoBD,GAAkB,IAEtChjB,QAAQC,IAAK,kCACb4iB,GAAiB,GACjBQ,IAAe,GACftE,OAIR9P,IAAME,UAAW,WACb,IAAIoV,OAAe5lB,EA2BnB,OA1BK2kB,IApFL/B,GAAiB,GACjBM,EAAmB,GAqFf2C,cAAeD,GACfA,OAAU5lB,GACF4kB,IACRW,KACAM,cAAeD,GACfA,OAAU5lB,GACF2iB,EAERiD,EAAUE,YAAaN,GAAe/lB,EAAaC,GAC1C2jB,EAGAQ,EAGDI,EAER2B,EAAUE,YAAaH,GAAqBlmB,IAE5C8lB,KACAlkB,QAAQC,IAAK,0BACbukB,cAAeD,GACfA,OAAU5lB,GARV4lB,EAAUE,YAAaJ,GAAejmB,GAHtCmmB,EAAUE,YAAaL,GAAgBhmB,GAapC,WACHmmB,GAAWC,cAAeD,KAE/B,CAAEjD,EAAcgC,GAAYlB,EAAWR,EAAgBI,EAAYQ,EAAcI,EAAcI,GAAiBO,KAEnH,IAAMtX,GAAWsX,GAAc,IAAOf,EAAmBthB,KAAKwjB,KAAoD,IAA9CxjB,KAAKye,IAAKqD,GAAiBxB,GAAyBA,GAAnE,EAC/CmD,IAAepB,IAAef,IAAiBI,EAC/CgC,GAAY3Y,GAAW,GAGzB4Y,QAAkBlmB,EAuBtB,OArBIkmB,GADCvB,GAEGtT,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY9K,GAAI,CAAE+B,SAAU,GAAIM,WAAY,OAAQlP,MAAO,QAA3D,KAII8d,IAAiBU,GAAcuB,QACrB5kB,EACT6jB,EAQLxS,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY9K,GAAI,CAAE+B,SAAU,GAAIM,WAAY,OAAQlP,MAAO,UACtDge,EAAewB,GADpB,KANAhT,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY9K,GAAI,CAAE+B,SAAU,GAAIM,WAAY,OAAQlP,MAAO,SACtD4e,GAYTpS,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KAIKsS,IACGtT,EAAAC,EAAAC,cAAC4U,GAAA,EAAD,CACIC,SAAS,UACTxU,MAAO,CACHG,SAAU,WACVE,MAAO,QACPmK,IAAK,MACL9S,KAAM,sBACNiT,UAAW,6BACX1H,aAAc,SARtB,0DAkBAzU,EAASK,QAAQsI,IAAK,SAAE1I,EAAQ+L,GAE5B,IACMia,EAAS1B,MADDvY,EAAQ6W,GAGhBpe,GADexE,EAAOM,GACdikB,IAAcvkB,EAAOE,QAAU,UAAqB,QAC5DyU,EAAkB4P,IAAcvkB,EAAOE,QAAU,YAAwB,QAE/E,OACI8Q,EAAAC,EAAAC,cAAC+U,GAAA,EAAD,CAAO7hB,IAAKpE,EAAOM,GAAI8Q,UAAU,SAAS8U,UAAW,EAAG3U,MAAO,CAAE6D,OAAQ,MAAO9C,QAAS0T,EAAS,IAAM,IAAKla,OAAQ6Z,GAAc,YAAc,OAAQhR,gBAAiBA,IACtK3D,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHG,SAAU,WACVG,QAAS,cACTC,WAAY,SACZC,eAAgB,gBAChBH,MAAO,SAGXZ,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,SACjEf,EAAAC,EAAAC,cAACiV,GAAA,EAAD,CAAQ9U,GAAI,CAAE4K,QAASzX,GAAS+M,MAAO,CAAE6D,OAAQ,OAAQb,QAAS,MAAOnB,SAAU,OAAQM,WAAY,SAAW1T,EAAOG,QACzH6Q,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQyC,cAAc,SAAUxC,WAAY,aAAcC,eAAgB,SAC7Ff,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,KAAK/E,MAAO,CAAE6U,WAAY,IAAKhT,SAAU,OAAQM,WAAY,SAAW1T,EAAOA,QACnGgR,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY7F,QAAQ,YAAY/E,MAAO,CAAEuE,WAAY,OAAQtR,MAAO,OAAQ4hB,WAAY,IAAKhT,SAAU,SAAUd,QAASsT,GAAY,IAAM,MAAQ5lB,EAAOC,QAGnK+Q,EAAAC,EAAAC,cAAA,OACIK,MAAO,CACHwK,IAAK,EACL9S,KAAM,EACNiZ,OAAQ,EACRhZ,MAAO,EACPwI,SAAU,WACVG,QAAS,OACTC,WAAY,SACZC,eAAgB,aAGG,UAAnBhS,EAASoB,QACT6G,EAAKJ,QAAQc,IAAK,SAAEC,GAChB,IAnSpBlI,EAAoBC,EAmSMuS,GAnS1BxS,EAmSgDkI,EAAOrI,GAnSnCI,EAmSuCV,EAAOM,GAlS3EQ,EAAiBf,EAAUU,EAAUC,IAmSF8R,EAA6B,UAAnBzS,EAASoB,QAAuB8R,OAAqDtT,EAA1C,kBAAMG,GAAW6I,EAAOrI,GAAIN,EAAOM,KAC9F,OACI0Q,EAAAC,EAAAC,cAAA,OAAK9M,IAAG,UAAAlD,OAAYlB,EAAOM,GAAnB,KAAAY,OAAyByH,EAAOrI,IAAMiR,MAAO,CAAEuE,WAAY,QAC/D9E,EAAAC,EAAAC,cAACoL,GAAD,CACIlY,IAAG,GAAAlD,OAAKyH,EAAOrI,GAAZ,KAAAY,OAAkBlB,EAAOM,IAC5BiM,KAAIhE,OAAAC,EAAA,EAAAD,CAAA,GACGI,EAAO4D,KADV,CAEApM,OAAQH,EAAOG,OACfoZ,KAAM5a,EAAS+d,KAEnBzJ,SAAUA,EACVT,QAASA,YAarDxB,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAEjEf,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEK,MAAO,OAAQC,QAAS,OAAQC,WAAY,SAAUuU,aAAc,aAAclQ,UAAW,SAIvGnF,EAAAC,EAAAC,cAACoV,GAAD,CACIvgB,WAAYhG,EAASO,GACrB2H,MAAOlI,EAASkI,MAChBse,OAAQjC,GACR9E,QAAS8C,EACT7C,KAAMoG,GACNhe,QAAS2b,EACT9D,QAASkE,EACT3W,SAAUA,GACV0S,OAAQ4E,GACR3E,cAhPE,SAAE4G,GACpBxlB,QAAQC,IAAR,wEAAAC,OAAqFslB,EAArF,MAAAtlB,OAAmG5B,EAAnG,SACAijB,GAAiB,GACjBE,EAAmBvgB,KAAKye,IAAKze,KAAKwjB,KAAMc,GAAalnB,IACrDmkB,GAAiB,GACjBI,GAAiB,GACjBI,GAAoB,GACpBI,IAAe,IA0OCxE,eAjOG,WACd2D,IAAiBe,IAClBvjB,QAAQC,IAAK,8CACb4iB,GAAiB,IAEjB7iB,QAAQC,IAAR,mDAAAC,OAAgEsiB,EAAhE,mBAAAtiB,OAA8FqjB,GAA9F,QA6NYzE,cAzNE,WACb0D,IAAiBe,IAClBvjB,QAAQC,IAAK,8CACb4iB,GAAiB,IAEjB7iB,QAAQC,IAAR,kDAAAC,OAA+DsiB,EAA/D,mBAAAtiB,OAA6FqjB,GAA7F,QAqNYxE,aAAcA,KAKlB/O,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUuU,aAAc,aAActU,eAAgB,gBAAiB+D,WAAY,SAE1H/V,EAASY,cAAc+H,IAAK,SAAA7H,GACxB,IAAM8H,EAASX,EAAKJ,QAAQnC,KAAM,SAAAkD,GAAM,OAAIA,EAAOrI,KAAOO,EAAaJ,WACvE,IAAMkI,EACF,OAAO,KAEX,IAAM3I,EAASD,EAASK,QAAQqF,KAAM,SAAAzF,GAAM,OAAIA,EAAOM,KAAOO,EAAaH,WAC3E,IAAMV,EACF,OAAO,KAEwB,aAAnBD,EAASoB,QAAwBnB,EAAOE,QAAxD,IACMyF,EpC7X3B,SAAiCH,EAAoBO,EAAwBrF,GAClF,IAAMwF,EAAgBJ,EAAkBN,EAAOO,GAC/C,OAAOG,EAAgBX,EAAgBW,EAAexF,QAAaf,EoC2XrB8mB,CAAwB9d,EAAOnD,MAAOzF,EAASO,GAAIO,EAAaH,UAC9EmF,EAA2B,aAAnB9F,EAASoB,QAAyBwE,EAAcA,EAAYE,WAAQlG,EAC5E6S,EAA6B,UAAnBzS,EAASoB,OAAqB,kBAAMsjB,GAAc9b,EAAOrI,GAAIN,EAAOM,UAAOX,EAC3F,OACIqR,EAAAC,EAAAC,cAAA,OAAK9M,IAAG,YAAAlD,OAAclB,EAAOM,GAArB,KAAAY,OAA2ByH,EAAOrI,IAAMiR,MAAO,CAAEmV,WAAY,uDACjE1V,EAAAC,EAAAC,cAACyV,GAAA,EAAD,CAAOvV,UAAU,cAAcwV,aAAc5B,GAAWnf,GAAQrB,MAAOygB,GAAWpf,IAC9EmL,EAAAC,EAAAC,cAACoL,GAAD,CACIlY,IAAG,GAAAlD,OAAKyH,EAAOrI,GAAZ,KAAAY,OAAkBlB,EAAOM,IAC5BiM,KAAIhE,OAAAC,EAAA,EAAAD,CAAA,GACGI,EAAO4D,KADV,CAEApM,OAAQH,EAAOG,OACfoZ,KAAM5a,EAAS+d,KAEnBlK,QAASA,QAQ7BnR,EAAOa,KAAKue,IAAK,EAAGzY,EAAKL,SAASnI,SAAWO,EAASY,cAAcjB,SAAWgJ,IAAK,SAAA1G,GAChF,OACIgP,EAAAC,EAAAC,cAAA,OAAK9M,IAAG,YAAAlD,OAAcc,GAAKoP,UAAU,eACjCJ,EAAAC,EAAAC,cAACoL,GAAD,CAAanB,SAAUxc,EAAS+d,WAaxD1L,EAAAC,EAAAC,cAAA,OAAKE,UAAU,eAEX2T,GAAcrc,IAAK,SAAAC,GACf,IAAMke,EAAS,kBAAA3lB,OAAqByH,EAAOrI,IACrC4F,EAAgBJ,EAAkB6C,EAAOnD,MAAOzF,EAASO,IACzDuF,EAA2B,aAAnB9F,EAASoB,QAAyB+E,EAAgBA,EAAcL,WAAQlG,EAChFmnB,GAAkBvC,GACxB,OACIvT,EAAAC,EAAAC,cAACqQ,GAAD,CACInd,IAAKyiB,EACLngB,MAAOsK,EAAAC,EAAAC,cAACyN,GAAD,CAAYhW,OAAQA,EAAQuU,WAAYxG,GAAWsG,EAAG7B,SAAUxc,EAAS+d,KAChFqK,qBAAsBD,EACtBE,qBAAsBF,GAEtB9V,EAAAC,EAAAC,cAACyV,GAAA,EAAD,CAAOvV,UAAU,oBAAoBwV,aAAc5B,GAAWnf,GAAQrB,MAAOygB,GAAWpf,IACpFmL,EAAAC,EAAAC,cAAA,OAAKE,UAAU,aAAaG,MAAO,CAAEgB,OAAQgS,GAAc,OAAS,SAChEvT,EAAAC,EAAAC,cAAA,QAAME,UAAU,sBAAqBJ,EAAAC,EAAAC,cAAC4L,GAAD,CAAc1Y,IAAKuE,EAAOrI,GAAIA,GAAIqI,EAAO6D,SAAU+M,KAAM7C,GAAW4H,KACzGtN,EAAAC,EAAAC,cAAA,QAAME,UAAU,qBAAqBzI,EAAOnD,MAAMK,aAWzEjH,GAASoS,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEkD,OAAQ,iBAAkB0D,WAAY,UAAWtG,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAC5Hf,EAAAC,EAAAC,cAAA,YAAOoT,GAAW,QAAQ,MAC1BtT,EAAAC,EAAAC,cAAA,YAAOoR,EAAa,UAAU,MAC9BtR,EAAAC,EAAAC,cAAA,wBAAgB0R,EAAhB,IAAiC7iB,EAASK,QAAQV,QAClDsR,EAAAC,EAAAC,cAAA,YAAO8R,EAAW,QAAQ,MAC1BhS,EAAAC,EAAAC,cAAA,YAAOkS,EAAP,KACApS,EAAAC,EAAAC,cAAA,YAAOsS,EAAa,UAAU,MAC9BxS,EAAAC,EAAAC,cAAA,sBAAc8S,GAAd,OAAmCxB,EAAnC,KACAxR,EAAAC,EAAAC,cAAA,YAAOjE,GAAP,KACA+D,EAAAC,EAAAC,cAAA,YAAO0S,EAAa,UAAU,UAC9B5S,EAAAC,EAAAC,cAAA,YAAO0U,GAAU,QAAQ,MACzB5U,EAAAC,EAAAC,cAAA,YAAOkT,GAAW,QAAQ,MAC1BpT,EAAAC,EAAAC,cAAA,YAAOqT,GAAY,SAAS,OAG/B3lB,GAASoS,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEkD,OAAQ,iBAAkB0D,WAAY,UAAW5D,QAAS,SAAW/K,KAAKC,UAAU1J,OAASJ,EAAU,MChX5HsnB,GAlGM,SAAE5Y,GAC2BA,EAAtCvF,MAD6B,IACtBwF,EAA+BD,EAA/BC,WAAY8T,EAAmB/T,EAAnB+T,eAErB1T,EAAWC,cAHoBuY,EAKF7O,cAA3BvO,EAL6Bod,EAK7Bpd,OAAQiD,EALqBma,EAKrBna,eAEV/E,EAAO6B,GAAYf,EAAOgB,GAC1B/J,EhCmJH,SAAyBiI,EAAwBmf,GACtD,GAAMnf,GAASmf,EAAf,CAGA,IAAMpa,EAAyBqa,SAAUD,GACnCpnB,EAAWiI,EAAKhC,WAAa+G,EAAiB/E,EAAKhC,UAAUP,KAAM,SAAA1F,GAAQ,OAAIA,EAASI,QAAU4M,SAAmBpN,EAE3H,OADAqB,QAAQC,IAAR,sBAAAC,OAAkC6L,EAAlC,OAAA7L,YAAoEvB,IAAbI,EAAyB,KAAO,OAChFA,GgC1JYsnB,CAAgBrf,EAAM+E,GAevC,GAbAkD,IAAME,UAAW,WACPnI,EAGOjI,EAGDiI,EAAK+E,gBAAkBhN,EAASI,SACxCa,QAAQC,IAAR,mDAAAC,OAA+D8G,EAAK+E,iBACpE2B,EAAUX,GAAY/F,MAJtBhH,QAAQC,IAAR,mDACAyN,E9BhDV,O8B4CU1N,QAAQC,IAAR,+CACAyN,E9B7CV,O8BqDK,CAAE1G,KAECA,EACF,OAAO,KAIX,IAAMjI,EACF,OAAO,KAKX,IASMunB,EAAuB,SAAEva,GAC3BuB,EAAYtG,EAAK1H,GhCyRlB,SAA2ByM,GAChC,OAAO,SAAE/E,GAGP,GAFAhH,QAAQC,IAAR,iBAAAC,OAA8B8G,EAAK1H,GAAnC,OAAAY,OAA2C6L,KAErC/E,EAAKhC,UACT,MAAMuhB,MAAO,sBAEf,IAAMxnB,EAAWiI,EAAKhC,UAAUP,KAAM,SAAA1F,GAAQ,OAAIA,EAASI,SAAW4M,IACtE,IAAMhN,EACJ,MAAMwnB,MAAO,qBAkBf,OAXKvf,EAAKxC,QACRwC,EAAKxC,MAAMwH,cACXhF,EAAKxC,MAAMyH,SAAW/K,KAAKwjB,KAA+B,IAAzB1d,EAAKxC,MAAMwH,YAAoBhF,EAAKxC,MAAM5F,aAO7EoI,EAAK+E,eAAiBhN,EAASI,OAExB6H,GgCpTkBwf,CAAkBza,KASrCyB,EAAa5P,GAASmB,EAASqI,eAAiB,WAC7CrI,EAASqI,iBACVpH,QAAQC,IAAR,oCAAAC,OAAiDnB,EAASqI,eAA1D,OACAkf,EAAsBvnB,EAASqI,uBAEnCzI,EAEE8O,EAAS,WACX,OAAS1O,EAASoB,QACd,IAAK,aACDH,QAAQC,IAAK,4BA5BrBmhB,EAAgBpa,EAAK1H,GAAIP,EAASO,GAAIS,GA8B9B,MACJ,IAAK,SACDC,QAAQC,IAAK,8BA5BrBqN,EAAYtG,EAAK1H,GAAI6M,GAAWnF,EAAMjI,IACtCqiB,EAAgBpa,EAAK1H,GAAIP,EAASO,GAAIc,GA6B9B,MACJ,IAAK,QACL,IAAK,YACIrB,EAASoI,YACVnH,QAAQC,IAAR,oCAAAC,OAAiDnB,EAASoI,WAA1D,OACAmf,EAAsBvnB,EAASoI,cAE/BnH,QAAQC,IAAR,wBA5BZqN,EAAYtG,EAAK1H,GAAIuN,OAqCnBnH,EAAS9H,EAAK,IAAAsC,OAAOnB,EAASI,OAAhB,OAAAe,OAA4BnB,EAAS2G,MAArC,OAAAxF,OAAgDnB,EAASoB,QAAzD,IAAAD,OAAwEnB,EAASI,OAAjF,OAAAe,OAA6FnB,EAAS2G,OAIpH6H,EAAoC,cAAnBxO,EAASoB,OAEhC,OACI6P,EAAAC,EAAAC,cAACmI,GAAD,CAAU3S,MAAOA,EAAO0D,SAAUpD,GAASkG,MAAOlF,KAAMA,EAAMuG,aAAcA,EAAcD,WAAYA,EAAYE,WAAYA,EAAYC,OAAQA,GAC9IuC,EAAAC,EAAAC,cAACuW,GAAD,CAAczf,KAAMA,EAAMjI,SAAUA,EAAUuO,WAAYA,EAAY8T,eAAgBA,EAAgB3T,OAAQA,knCCpG1H,IAuJeiZ,GAvJS,SAAErZ,GACgCA,EAA9CrG,KADgC,IAC1BW,EAAwC0F,EAAxC1F,OAAQ+I,EAAgCrD,EAAhCqD,SAAUlN,EAAsB6J,EAAtB7J,MAAOmjB,EAAetZ,EAAfsZ,WAEvC,IAAMhf,EAAOxI,OACT,OAAO,KAGX,IAPwCiN,EAOlCwa,EAAe,SAAEnlB,GAEnB,OADAA,EAAQA,EAAQ,GAAKP,KAAKwjB,KAAM,GAAKjjB,GAAU,GAAKP,KAAKwjB,KAAMjjB,IAClD,EACT,KAAAvB,OAAYuB,EAAZ,QACQA,EAAQ,EAChB,KAAAvB,QAAauB,EAAb,QAEA,KAIFolB,EAAgB,SAAEplB,GAEpB,OADAA,EAAQA,EAAQ,GAAKP,KAAKwjB,KAAM,GAAKjjB,GAAU,GAAKP,KAAKwjB,KAAMjjB,IAClD,EACT,GAAAvB,OAAUuB,EAAV,MACQA,EAAQ,EAChB,IAAAvB,QAAYuB,EAAZ,MAEA,KAIFb,EAAU+G,EAAOnD,MAAM3F,SAAW8I,EAAOnD,MAAMmH,OAC/Cmb,EAAiBlmB,EAAU,EAA6B,IAAzB+G,EAAOnD,MAAMiH,UAAkB7K,EAAU,EACxEmmB,EAAiBnmB,EAAU,EAA6B,IAAzB+G,EAAOnD,MAAMkH,UAAkB9K,EAAU,EACxEomB,EAAcpmB,EAAU,EAA0B,IAAtB+G,EAAOnD,MAAMmH,OAAe/K,EAAU,EAEpEqmB,EAAqB,EACrBC,EAAqB,EACrBC,EAAkB,EAClBC,EAAkB,EArCkB9a,EAAA+a,GAsChB1f,EAAOnD,MAAMQ,WAtCG,IAsCxC,IAAAsH,EAAArC,MAAAmC,EAAAE,EAAApC,KAAAC,MAAiD,KAAAX,EAAAO,EAAAsd,GAAAjb,EAAA3K,MACdrC,SADc,IAC7C,IAAA2K,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAAyC,KAA7BnL,EAA6BwK,EAAA/H,MAChCzC,EAAO4F,SACRuiB,IACAF,GAAsBjoB,EAAO6F,QAE7BuiB,IACAF,GAAsBloB,EAAO6F,QAPQ,MAAAqG,GAAAnB,EAAAoB,EAAAD,GAAA,QAAAnB,EAAAqB,MAtCT,MAAAF,GAAAoB,EAAAnB,EAAAD,GAAA,QAAAoB,EAAAlB,IAiDxC,IAAMkc,EAAkBH,EAAkB,EAAIF,EAAqBE,EAAkB,EAC/EI,EAAkBH,EAAkB,EAAIF,EAAqBE,EAAkB,EAC/EI,EAAaL,EAAkBC,EAAoB,GAAMH,EAAqBC,IAAyBC,EAAkBC,GAAoB,EAEnJ,OAEIpX,EAAAC,EAAAC,cAACiG,GAAA,EAAD,KACInG,EAAAC,EAAAC,cAACkG,GAAA,EAAD,CACIC,WAAYrG,EAAAC,EAAAC,cAACoG,EAAArG,EAAD,OAGZD,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,EAAGkC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAC3Gf,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,IACX3G,EAAAC,EAAAC,cAACC,GAAA,EAAD,CAAKE,GAAI,CAAEQ,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAC9Df,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CAAEM,QAAS,cAAeC,WAAY,WAC9Cd,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CACRK,MAAO,OACP4C,aAAc,OACdC,OAAM,aAAAvT,OAAeymB,GAAc,WACnCnjB,MAAOmjB,GAAc,UAErBvU,SAAU,OACVM,WAAY,OACZ+U,YAAa,IACb5W,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBiE,YAAa,SAEZtE,GAELV,EAAAC,EAAAC,cAAC4L,GAAD,CAAcxc,GAAIqI,EAAO6D,SAAU+M,KAAM7C,GAAWsG,IACpDhM,EAAAC,EAAAC,cAACiL,GAAA,EAAD,CAAY5K,MAAO,CAAEuE,WAAY,SAAYnN,EAAOpC,MACpDyK,EAAAC,EAAAC,cAACwX,GAAAzX,EAAD,CAAkBM,MAAO,CAAEuE,WAAY,OAAQ1C,SAAU,QAAS5O,MAAOmjB,EAAYrV,QAASqV,EAAa,IAAM,QAErH3W,EAAAC,EAAAC,cAAA,OAAKK,MAAO,CACRK,MAAO,OACP4C,aAAc,OACdwB,YAAa,OACbrB,gBAAiBnQ,EACjB0X,UAAW,+BACX9I,SAAU,OACVM,WAAY,OACZ+U,YAAa,IACb5W,QAAS,OACTC,WAAY,SACZC,eAAgB,WAEfpJ,EAAOnD,MAAMK,WAQlCmL,EAAAC,EAAAC,cAACqG,GAAA,EAAD,KAEIvG,EAAAC,EAAAC,cAACyX,GAAA,EAAD,CAAgBzJ,UAAW+G,MACvBjV,EAAAC,EAAAC,cAAC0X,GAAA,EAAD,CAAO1W,aAAW,eAAeqH,KAAK,SAClCvI,EAAAC,EAAAC,cAAC2X,GAAA,EAAD,KACI7X,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,CAAUzX,GAAI,CAAEsD,gBAAiB,YAC7B3D,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,eAAmBpgB,EAAOnD,MAAMK,OAChCmL,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAAjB,QACAhY,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAAjB,MACAhY,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAAjB,OAGRhY,EAAAC,EAAAC,cAAC+X,GAAA,EAAD,KACIjY,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,KACI9X,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAW7J,UAAU,KAAKgK,MAAM,OAAhC,YACAlY,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASpB,EAAaY,IACvCxX,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASrgB,EAAOnD,MAAMiH,UAAU9D,EAAOnD,MAAMkH,WAC9DsE,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASnB,EAAcC,EAAeC,KAE3D/W,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,KACI9X,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAW7J,UAAU,KAAKgK,MAAM,OAAhC,cACAlY,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASpB,EAAaU,IACvCtX,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASrgB,EAAOnD,MAAMiH,WACvCuE,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASnB,EAAcC,KAE5C9W,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,KACI9X,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAW7J,UAAU,KAAKgK,MAAM,OAAhC,aACAlY,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASpB,EAAaW,IACvCvX,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASrgB,EAAOnD,MAAMkH,WACvCsE,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASnB,EAAcE,KAE5C/W,EAAAC,EAAAC,cAAC4X,GAAA,EAAD,KACI9X,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAW7J,UAAU,KAAKgK,MAAM,OAAhC,UACAlY,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASpB,EAAa,IACvC5W,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASrgB,EAAOnD,MAAMmH,QACvCqE,EAAAC,EAAAC,cAAC6X,GAAA,EAAD,CAAWC,MAAM,SAASnB,EAAcG,6DCXzDmB,GA1II,SAAE9a,GACsBA,EAA/BvF,MAD2B,IACpBwF,EAAwBD,EAAxBC,WAETI,GAFiCL,EAAZuI,QAEVjI,eAGX3G,EAAO6B,GAAYf,EADNuP,cAAXvO,QAUR,GAPAmG,IAAME,UAAW,WACPnI,IACFhH,QAAQC,IAAR,4CACAyN,EhC3BV,OgC6BK,CAAE1G,KAECA,EACF,OAAO,KAGX,IAMMwG,EAAcxG,EAAKF,WAErBnI,EAF6B,WAC7B2O,EAAYtG,EAAK1H,GAAI6J,GAAQnD,GAASkG,SAGpCuB,EAASzG,EAAKF,MAAQ,WACxB4G,EhC9CN,WgC+CM/O,EAMEolB,EAAgBxc,OAAAQ,EAAA,EAAAR,CAAKP,EAAKJ,SAAUoB,KAAM,SAAEC,EAAcC,GAC5D,OAAOA,EAAM1D,MAAMK,MAAQoD,EAAKzD,MAAMK,QAGtCujB,OAAuCzpB,EACvC0pB,OAAoC1pB,EAElC2pB,EAAuB,CACzB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WAEEC,EAA4B,CAC9B,OACA,OACA,SAGJ,OACIvY,EAAAC,EAAAC,cAACmI,GAAD,CAAUjP,SAAUpD,GAAS8G,OAAQ9F,KAAMA,EAAMsG,WAAYA,EAAYE,WAAYA,EAAYC,OAAQA,GAErGuC,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAMb1E,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACK+S,EAAcrc,IAAK,SAAEC,EAAQoD,GAE1B,IAAI2F,EAAW,EAWf,YAV0B/R,IAArBypB,QAAoDzpB,IAAlB0pB,IAE/B3X,EADC2X,EAAgB1gB,EAAOnD,MAAMK,MACnBujB,EAAmB,EAEnBA,GAGnBC,EAAgB1gB,EAAOnD,MAAMK,MAC7BujB,EAAmB1X,EAGfV,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAKuE,EAAOrI,GAAIoX,MAAI,EAACC,GAAI,GAAIC,UAAU,QACzC5G,EAAAC,EAAAC,cAACsY,GAAD,CACIxhB,KAAMA,EACNW,OAAQA,EACR+I,SAAUA,EACVlN,MAAO8kB,EAAWvd,EAAQud,EAAW5pB,QACrCioB,WAAYjW,EAAS,EAAI6X,EAAgB7pB,OAAS6pB,EAAgB7X,EAAS,QAAK/R,QAW5GqR,EAAAC,EAAAC,cAACuY,GAAA,EAAD,CAAcrT,OAAQ,KAEjB2O,EAAcrc,IAAK,SAAEC,EAAQoD,GAC1B,IAAM2d,EvCRvB,SAAuClkB,GAC5C,IAAMkkB,EAAqC,GAEvC3c,EAAiB,EACjB4c,EAAoB,EAExBD,EAAKnpB,KAAK,CACRqpB,EAAC,IACDC,EAAGF,EACHjI,QAAO,GAAAxgB,OAAMyoB,EAAN,cATuF,IAAAvc,EAAAE,EAAAwc,EAYxEtkB,EAAMQ,WAZkE,IAYhG,IAAAsH,EAAArC,MAAAmC,EAAAE,EAAApC,KAAAC,MAA0C,KAA9BpL,EAA8BqN,EAAA3K,MACxCsK,IACA4c,GAAqB5pB,EAAS8F,MAE9B,IAAI6b,EAAU,GAEZA,EADG3hB,EAASoG,MACL,GAAAjF,OAAMyoB,EAAN,YAC8B,GAA3B5pB,EAASK,QAAQV,OACpB,GAAAwB,OAAMyoB,EAAN,WACG5pB,EAAS8F,OAAS,EACrB,GAAA3E,OAAMyoB,EAAN,OAAAzoB,OAA6BnB,EAAS8F,MAAtC,KAEA,GAAA3E,OAAMyoB,EAAN,MAAAzoB,OAA4BnB,EAAS8F,MAArC,KAGT6jB,EAAKnpB,KAAK,CACRqpB,EAAC,IAAA1oB,OAAM6L,GACP8c,EAAGF,EACHjI,QAAUA,KA9BkF,MAAAxV,GAAAoB,EAAAnB,EAAAD,GAAA,QAAAoB,EAAAlB,IAiChG,OAAOsd,EuCzB4BK,CAA8BphB,EAAOnD,OAC5ChB,EAAQ8kB,EAAWvd,EAAQud,EAAW5pB,QAC5C,OAEIsR,EAAAC,EAAAC,cAAC8Y,GAAA,EAAD,CACI5lB,IAAG,gBAAAlD,OAAkByH,EAAOrI,IAC5BkE,MAAOA,EACPylB,OAAQ,SAAA1nB,GAAA,IAAG2nB,EAAH3nB,EAAG2nB,MAAH,UAAAhpB,OAAmB6K,EAAM,EAAzB,OAAA7K,OAAgCyH,EAAOpC,KAAvC,MAAArF,OAAgDgpB,EAAMxI,UAC9DyI,eACInZ,EAAAC,EAAAC,cAACkZ,GAAA,EAAD,CACI7Y,MAAO,CAAE6B,SAAU,MAG3BsW,KAAMA,GAEN1Y,EAAAC,EAAAC,cAACmZ,GAAA,EAAD,MACArZ,EAAAC,EAAAC,cAACoZ,GAAA,EAAD,CACI/Q,KAAM,EACNhI,MAAO,CAAEmY,KAAM,CAAEa,KAAM/lB,aC5G5CgmB,GA5BK,SAAEnc,GAElB,OACI2C,EAAAC,EAAAC,cAAC+F,GAAD,CAAMvQ,MAAM,WAERsK,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAEnB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAIhN,IAAI,SAAAvI,GAEvD,OACI6Q,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAKjE,EAAQuX,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,eAAgB4C,gBAAiB,SAE5IpM,OAAO9G,KAAMiV,IAAahO,IAAI,SAAA6Q,GAC1B,OACIvI,EAAAC,EAAAC,cAAC4L,GAAD,CAAc1Y,IAAG,GAAAlD,OAAKf,EAAL,KAAAe,OAAeqY,GAAQpZ,OAAQA,EAAQoZ,KAAMA,YCkCvFkR,WA/CU,SAAEpc,GAEvB,OACI2C,EAAAC,EAAAC,cAAC+F,GAAD,KAEIjG,EAAAC,EAAAC,cAAA,2BAEAF,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMC,WAAS,EAAC/B,QAAS,GAEnBnN,OAAO9G,KAAMhD,GAAaiK,IAAI,SAAApE,GAE5B,OACI0M,EAAAC,EAAAC,cAACsG,EAAA,EAAD,CAAMpT,IAAKE,EAAQoT,MAAI,EAACC,GAAI,GAAIC,UAAU,SAASrG,MAAO,CAAEM,QAAS,OAAQC,WAAY,SAAUC,eAAgB,kBAE3GxJ,OAAO9G,KAAM9C,GAAW+J,IAAI,SAAA6Q,GACxB,OACIvI,EAAAC,EAAAC,cAAAF,EAAAC,EAAAe,SAAA,KACIhB,EAAAC,EAAAC,cAACoL,GAAD,CAAalY,IAAG,GAAAlD,OAAKoD,EAAL,KAAApD,OAAeqY,EAAf,UAA6BhN,KAAM,CAC3CjI,OAAQA,EACRE,MAAO9F,EAAUoG,MACjByU,KAAMA,EACNpZ,OAAQ,GAEZqS,QAAS,eAEbxB,EAAAC,EAAAC,cAACoL,GAAD,CAAalY,IAAG,GAAAlD,OAAKoD,EAAL,KAAApD,OAAeqY,EAAf,QAA2BhN,KAAM,CACzCjI,OAAQA,EACRE,MAAO9F,EAAU+F,IACjB8U,KAAMA,EACNpZ,OAAQ,GAEZqS,QAAS,ojCC6D1CkY,OArFf,WAAe,IAAAna,EAMeN,IAAMO,SAAU9G,MAN/B+G,EAAAlI,OAAAmI,EAAA,EAAAnI,CAAAgI,EAAA,GAMLzH,EANK2H,EAAA,GAMEka,EANFla,EAAA,GAQb,SAASmG,EAAS5O,GACdhH,QAAQC,IAAR,cAAAC,OAA2B8G,EAAK1H,KAChCqqB,EAAU,SAAAC,GAER,OAAOzhB,GADO,CAAKnB,GAAL9G,OAAAqH,OAAAQ,EAAA,EAAAR,CAAcqiB,OA8BlC,SAAStc,EAAYxE,EAAgBxB,GACnCtH,QAAQC,IAAR,iBAAAC,OAA8B4I,IAC9B6gB,EAAU,SAAAC,GAER,OAAOzhB,GADUyhB,EAAKliB,IAAK,SAAAV,GAAI,OAAIA,EAAK1H,KAAOwJ,EAASxB,EAAQN,GAASA,OAqB7E,OACEgJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,mBAEbJ,EAAAC,EAAAC,cAAC2Z,EAAA,EAAD,KACE7Z,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,KACE9Z,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,IAAIC,QAASha,EAAAC,EAAAC,cAAC+Z,GAAD,CAAUniB,MAAOA,EAAO8N,QAASA,EAAStI,WAAYA,EAAYuI,YA9CnG,SAAsBqU,GAClBlqB,QAAQC,IAAR,kBACA0pB,EAAU,SAAAC,GAAQ,IAAAxd,EAAAE,EAAA6d,GACMD,GADN,IAChB,IAAA5d,EAAArC,MAAAmC,EAAAE,EAAApC,KAAAC,MAAgC,KAApBrB,EAAoBsD,EAAA3K,MAC9BzB,QAAQC,IAAR,UAAAC,OAAuB4I,KAFT,MAAAoC,GAAAoB,EAAAnB,EAAAD,GAAA,QAAAoB,EAAAlB,IAAA,IAAA5B,EAAAO,EAAAogB,GAIIP,GAJJ,IAIhB,IAAA7f,EAAAE,MAAAT,EAAAO,EAAAG,KAAAC,MAA2B,KAAfnD,EAAewC,EAAA/H,MACzBzB,QAAQC,IAAR,YAAAC,OAAyB8G,EAAK1H,MALhB,MAAA4L,GAAAnB,EAAAoB,EAAAD,GAAA,QAAAnB,EAAAqB,IAOhB,IAPgBhB,EAOVggB,EAAWR,EAAK9e,OAAQ,SAAA9D,GAAI,OAAoC,IAAhCkjB,EAAQG,QAASrjB,EAAK1H,MAP5CiL,EAAA4f,GAQIC,GARJ,IAQhB,IAAA7f,EAAAN,MAAAG,EAAAG,EAAAL,KAAAC,MAA+B,KAAnBnD,EAAmBoD,EAAA3I,MAC7BzB,QAAQC,IAAR,WAAAC,OAAwB8G,EAAK1H,MATf,MAAA4L,GAAAX,EAAAY,EAAAD,GAAA,QAAAX,EAAAa,IAWhB,OAAOjD,GAAYiiB,UAkCjBpa,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,yBAAyBC,QAASha,EAAAC,EAAAC,cAACoa,GAAD,CAAcxiB,MAAOA,EAAOwF,WAAYA,MACtF0C,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,wBAAwBC,QAASha,EAAAC,EAAAC,cAACqa,GAAD,CAAaziB,MAAOA,EAAOwF,WAAYA,MACpF0C,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,sBAAsBC,QAASha,EAAAC,EAAAC,cAACsa,GAAD,CAAW1iB,MAAOA,EAAOwF,WAAYA,MAChF0C,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,yCAAyCC,QAASha,EAAAC,EAAAC,cAACua,GAAD,CAAc3iB,MAAOA,EAAOwF,WAAYA,EAAY8T,eAzB1H,SAAyBtY,EAAgB/D,EAAwBuC,GAC/DtH,QAAQC,IAAR,qBAAAC,OAAkC4I,EAAlC,OAAA5I,OAA8C6E,IAC9C4kB,EAAU,SAAAC,GAQR,OAAOzhB,GAPUyhB,EAAKliB,IAAK,SAAAV,GACzB,OAAKA,EAAK1H,IAAMwJ,EACP9B,GAETA,EAAKhC,UAAYgC,EAAKhC,UAAU0C,IAAK,SAAA3I,GAAQ,OAAIA,EAASO,KAAOyF,EAAauC,EAAQvI,GAAaA,IAC5FiI,aAkBLgJ,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,uBAAuBC,QAASha,EAAAC,EAAAC,cAACwa,GAAD,CAAY5iB,MAAOA,EAAOwF,WAAYA,EAAYsI,QAASA,MACvG5F,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,WAAWC,QAASha,EAAAC,EAAAC,cAACya,GAAD,QAChC3a,EAAAC,EAAAC,cAAC4Z,EAAA,EAAD,CAAOC,KAAK,SAASC,QAASha,EAAAC,EAAAC,cAAC0a,GAAD,mBCxFxCC,IAASC,OACP9a,EAAAC,EAAAC,cAACF,EAAAC,EAAM8a,WAAP,KACE/a,EAAAC,EAAAC,cAAC8a,GAAD,OAEF5b,SAAS6b,eAAe","file":"static/js/main.6bb3721b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/music.45a44973.png\";","\nexport enum CardSymbol {\n  HEART = 'HEART',\n  DIAMOND = 'DIAMOND',\n  CLUB = 'CLUB',\n  SPADE = 'SPADE',\n  STAR = 'STAR',\n  CIRCLE = 'CIRCLE',\n  SQUARE = 'SQUARE',\n  TRIANGLE = 'TRIANGLE',\n  CROSS = 'CROSS',\n}  \n\nexport enum CardColor {\n  BLACK = 'BLACK',\n  RED = 'RED',\n  BLUE = 'BLUE',\n  GREEN = 'GREEN',\n  PURPLE = 'PURPLE',\n  YELLOW = 'YELLOW',\n  ORANGE = 'ORANGE',\n  PINK = 'PINK',\n  BROWN = 'BROWN',\n  GRAY = 'GRAY',\n}\n\nexport enum CardSize {\n  XS = 'XS',\n  S = 'S',\n  M = 'M',\n  L = 'L',\n  XL = 'XL',\n}\n\nexport interface Card {\n  readonly symbol: CardSymbol\n  readonly color: CardColor\n  size?: CardSize\n  number?: number\n  value?: string\n}\n\nexport const HeartCard: Card = { symbol: CardSymbol.HEART, color: CardColor.RED }\nexport const DiamondCard: Card = { symbol: CardSymbol.DIAMOND, color: CardColor.RED }\nexport const ClubCard: Card = { symbol: CardSymbol.CLUB, color: CardColor.BLACK }\nexport const SpadeCard: Card = { symbol: CardSymbol.SPADE, color: CardColor.BLACK }\n\nexport const BlueCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.BLUE }\nexport const YellowCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.YELLOW }\nexport const RedCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.RED }\nexport const GreenCircleCard: Card = { symbol: CardSymbol.CIRCLE, color: CardColor.GREEN }\n\nexport const OrangeTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.ORANGE }\nexport const PurpleTriangleCard: Card = { symbol: CardSymbol.TRIANGLE, color: CardColor.PURPLE }\n\nexport const DefaultCards: Card[] = [ \n  ClubCard, \n  DiamondCard, \n  HeartCard, \n  SpadeCard,\n\n  BlueCircleCard, \n  YellowCircleCard, \n  RedCircleCard, \n  GreenCircleCard,\n  \n  OrangeTriangleCard,\n  PurpleTriangleCard \n]","\r\nexport const DEBUG = false\r\n\r\nexport const HEADER_KEYBOARD_SHORTCUTS = true\r\nexport const MUSIC_PLAYER_KEYBOARD_SHORTCUTS = true\r\n\r\nexport const MAX_NB_GAME = 4\r\n\r\nexport const DEFAULT_NB_PLAYER = 2\r\nexport const MIN_NB_PLAYER = 2\r\nexport const MAX_NB_PLAYER = 10\r\nexport const INCREMENT_NB_PLAYER = 1\r\nexport const PLAYER_ID_SUFFIX = 9000\r\n\r\nexport const DEFAULT_NB_QUESTION = 50\r\nexport const MIN_NB_QUESTION = 10\r\nexport const MAX_NB_QUESTION = 200\r\nexport const INCREMENT_NB_QUESTION = 10\r\nexport const QUESTION_ID_SUFFIX = 0\r\n\r\nexport const DEFAULT_NB_ANSWER_PER_QUESTION = 6\r\nexport const MIN_NB_ANSWER_PER_QUESTION = 3\r\nexport const MAX_NB_ANSWER_PER_QUESTION = 6\r\nexport const INCREMENT_NB_ANSWER_PER_QUESTION = 1\r\nexport const ANSWER_ID_SUFFIX = 100\r\n\r\nexport const ONE_SECOND = DEBUG ? 300 : 1000\r\nexport const MAX_NB_SECONDS_LOADING = DEBUG ? 10 : 15\r\nexport const MAX_NB_SECONDS_PLAYING = DEBUG ? 20 : 30\r\n\r\nexport const MAX_NB_AVATAR = 20","// //////////////////////////////////////////////////\n// model\n\nimport { DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION } from \"./Constants\"\n\nexport interface Settings {\n  nbPlayer: number\n  nbQuestion: number\n  nbAnswer: number\n}\n\nexport type SettingsUpdater = ( settings: Settings ) => Settings\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newSettings( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Settings {\n  return {\n    nbPlayer: nbPlayer,\n    nbQuestion: nbQuestion,\n    nbAnswer: nbAnswer,\n  }\n}","import { Answer, AnswerId } from './Answer'\nimport { GameId } from './Game'\nimport { Media } from './Media'\nimport { PlayerId } from './Player'\nimport { PlayerAnswer } from './PlayerAnswer'\nimport { toZeroPadString } from './Util'\n\n// //////////////////////////////////////////////////\n// status\n\nexport type QuestionStatus = \n  | 'not-played' \n  | 'played'\n  | 'completed'\n  | 'error'\n\n// //////////////////////////////////////////////////\n// model\n\nexport type QuestionId = number\n\nexport interface Question {\n  id: QuestionId\n  number: number\n  status: QuestionStatus\n  title: string\n  media: Media\n  answers: Answer[] \n  playerAnswers: PlayerAnswer[] \n  previousNumber?: number\n  nextNumber?: number\n}\n\nexport type QuestionUpdater = ( question: Question ) => Question\nexport type OnQuestionUpdate = ( gameId: GameId, questionId: QuestionId, questionUpdater: QuestionUpdater ) => void\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addAnswer( question: Question, answer: string, hint: string = \"\", correct: boolean = false ): Answer {\n  const number = question.answers.length + 1\n  const current: Answer = {\n    id: question.id + number, \n    number: number,\n    answer: answer,\n    hint: hint,\n    correct: correct,\n  }\n  question.answers.push( current )\n  return current\n}\n\nexport function addPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  if ( !hasPlayerAnswer( question, playerId, answerId ) ) {\n    question.playerAnswers.push( {\n      playerId: playerId, \n      answerId: answerId,\n    } )\n  }\n  return question\n}\n\nexport function getPlayerAnswerIndex( question: Question, playerId: PlayerId, answerId: AnswerId ): number {\n  return question.playerAnswers.findIndex( playerAnswer => ( playerAnswer.playerId === playerId ) && ( playerAnswer.answerId === answerId ) )\n}\n\nexport function hasPlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): boolean {\n  return getPlayerAnswerIndex( question, playerId, answerId ) > -1\n}\n\nexport function removePlayerAnswer( question: Question, playerId: PlayerId, answerId: AnswerId ): Question {\n  let index = getPlayerAnswerIndex( question, playerId, answerId )\n  while ( index > -1 ) {\n    question.playerAnswers.splice( index, 1 )\n    index = getPlayerAnswerIndex( question, playerId, answerId )\n  }\n  return question\n}\n\nexport function isCorrect( question: Question, playerAnswer: PlayerAnswer ): boolean {\n  return question.answers.some( answer => ( answer.id ===  playerAnswer.answerId ) && answer.correct )\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function onQuestionPlayed( question: Question ): Question {\n  console.log( `[on-question-played] question: ${question.id}` )\n\n  question.status = 'played'\n  \n  return question\n}\n\nexport function onQuestionCompleted( question: Question ): Question {\n  console.log( `[on-question-completed] question: ${question.id}` )\n\n  question.status = 'completed'\n  \n  return question\n}\n\nexport function onQuestionError( question: Question ): Question {\n  console.log( `[on-question-error] question: ${question.id}` )\n\n  question.status = 'error'\n  \n  return question\n}","\r\n// //////////////////////////////////////////////////\r\n// range\r\n\r\nexport function range( nb: number ): number[] {\r\n    return Array.from( Array( nb ).keys() )\r\n}\r\n\r\nexport function pickIndexes( nbSelected: number, nbTotal: number ): number[] {    \r\n\r\n    if ( nbTotal <= nbSelected ) {\r\n        return shuffle( range( nbTotal ) )\r\n    }\r\n\r\n    var selected = new Set<number>();\r\n    for( var i = 0; i < nbSelected; i++ ) {\r\n        var j = Math.random() * nbTotal | 0;\r\n        while(selected.has(j)){\r\n            j = Math.random() * nbTotal | 0;\r\n        }\r\n        selected.add( j );\r\n    }\r\n    return Array.from( selected )\r\n}\r\n\r\nexport function pick<T>( values: T[] ): T {\r\n    return values[ Math.random() * values.length | 0 ];\r\n}\r\n\r\nexport function shuffle<T>( values: T[] ) {\r\n    for ( let i = values.length - 1; i > 0; i-- ) {\r\n        let j = Math.random() * ( i + 1 ) | 0;\r\n        [ values[ i ], values[ j ] ] = [ values[ j ], values[ i ] ];\r\n    }\r\n    return values\r\n}\r\n\r\n// //////////////////////////////////////////////////\r\n// format\r\n\r\nexport function toZeroPadString( value: number, padSize: number ): string {\r\n    return `${value}`.padStart( padSize, '0' )\r\n}\r\n\r\nexport function toDateString( value: number ): string {\r\n    if ( value <= 0 ) {\r\n        return '-'\r\n    }\r\n    const date = new Date( value )\r\n    const year = date.getFullYear()\r\n    const month = toZeroPadString( date.getMonth() + 1, 2 )\r\n    const day = toZeroPadString( date.getDate(), 2 )\r\n    return `${year}-${month}-${day}`\r\n}\r\n\r\nexport function toTimeString( value: number ): string {\r\n    if ( value <= 0 ) {\r\n        return '-'\r\n    }\r\n    const date = new Date( value )\r\n    const hours = toZeroPadString( date.getHours(), 2 )\r\n    const minutes = toZeroPadString( date.getMinutes(), 2 )\r\n    const seconds = toZeroPadString( date.getSeconds(), 2 )\r\n    return `${hours}:${minutes}:${seconds}`\r\n}\r\n\r\nexport function toDateTimeString( value: number ): string {\r\n    if ( value <= 0 ) {\r\n        return '-'\r\n    }\r\n    return `${toDateString(value)} ${toTimeString(value)}`\r\n}\r\n\r\n// //////////////////////////////////////////////////\r\n// user event\r\n\r\nexport type Callback = () => void\r\nexport type EventCallback = ( event: any ) => void\r\n\r\nexport function onUserEvent( callback: Callback ): EventCallback {\r\n    return ( event: any ) => {\r\n        callback()\r\n        event.stopPropagation()\r\n        event.preventDefault()\r\n    }\r\n}\r\n\r\n// //////////////////////////////////////////////////\r\n// key event\r\n\r\nexport type KeyCallback = ( key: string ) => boolean\r\nexport type KeyEventCallback = ( event: any ) => void\r\n\r\nexport function onKeyEvent( keyCallback: KeyCallback ): EventCallback {\r\n    return ( event: any ) => {\r\n        if ( keyCallback( event.key ) ) {\r\n            console.log( `key-event [${event.key}] >>> handled! >>> stop propagation!` )    \r\n            event.stopPropagation()\r\n            event.preventDefault()\r\n        } else {\r\n            console.log( `key-event [${event.key}] >>> propagate...` )    \r\n        }\r\n    }\r\n}\r\n","\n// //////////////////////////////////////////////////\n// model\n\nimport { AnswerId } from \"./Answer\"\nimport { AnswerStats } from \"./AnswerStats\"\nimport { QuestionId } from \"./Question\"\n\nexport interface QuestionStats {\n  id: QuestionId\n  score: number\n  answers: AnswerStats[]\n  error: boolean\n}\n\nexport function getAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats | undefined {  \n  return stats.answers.find( answer => answer.id === answerId )\n}\n\nexport function getOrSetAnswerStats( stats: QuestionStats, answerId: AnswerId ): AnswerStats {  \n  const current = getAnswerStats( stats, answerId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const answerStats: AnswerStats = {\n    id: answerId,\n    success: false,\n    score: 0\n  }\n  stats.answers.push( answerStats )\n  return answerStats\n}\n\n\n","import { AnswerId } from './Answer'\nimport { AnswerStats } from './AnswerStats'\nimport { QuestionId } from './Question'\nimport { getAnswerStats, getOrSetAnswerStats, QuestionStats } from './QuestionStats'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface PlayerStats {\n  score: number\n  nbAnswer: number\n  nbSuccess: number\n  nbFailure: number\n  nbMiss: number,\n  nbError: number,\n  questions: QuestionStats[]\n}\n\nexport interface PlayerVizualiationScoreData {\n  x: string // question number\n  y: number // player score\n  tooltip: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newPlayerStats(): PlayerStats {\n  return {\n    score: 0,\n    nbAnswer: 0,\n    nbSuccess: 0,\n    nbFailure: 0,\n    nbMiss: 0,\n    nbError: 0,\n    questions: [],\n  }\n}\n\nexport function getQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats | undefined {  \n  return stats.questions.find( question => question.id === questionId )\n}\n\nexport function getQuestionAnswerStats( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId ): AnswerStats | undefined {  \n  const questionStats = getQuestionStats( stats, questionId )\n  return questionStats ? getAnswerStats( questionStats, answerId ) : undefined\n}\n\nexport function getOrSetQuestionStats( stats: PlayerStats, questionId: QuestionId ): QuestionStats {  \n  const current = getQuestionStats( stats, questionId )\n  if ( current !== undefined ) {\n    return current\n  }\n  const questionStats: QuestionStats = {\n    id: questionId,\n    score: 0,\n    answers: [],\n    error: false\n  }\n  stats.questions.push( questionStats )\n  return questionStats\n}\n\nexport function flagAnswerAsCorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbSuccess++\n  stats.score += nbPoint\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = true\n  answerStats.score = nbPoint\n}\n\nexport function flagAnswerAsIncorrect( stats: PlayerStats, questionId: QuestionId, answerId: AnswerId, nbPoint: number ) {\n  \n  // global\n  stats.nbAnswer += 1\n  stats.nbFailure++\n  stats.score += nbPoint // should be negative\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score += nbPoint // should be negative\n\n  // per asnwer\n  const answerStats = getOrSetAnswerStats( questionStats, answerId )\n  answerStats.success = false\n  answerStats.score = nbPoint // should be negative\n}\n\nexport function flagQuestionAsMiss( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbMiss++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n}\n\nexport function flagQuestionAsError( stats: PlayerStats, questionId: QuestionId ) {\n  \n  // global\n  stats.nbError++\n  stats.score += 0\n  \n  // per question\n  const questionStats = getOrSetQuestionStats( stats, questionId )\n  questionStats.score = 0\n  questionStats.error = true\n}\n\nexport function computeVizualiationScoreData( stats: PlayerStats ): PlayerVizualiationScoreData[] {\n  const data:PlayerVizualiationScoreData[] = []\n  \n  let questionNumber = 0\n  let intermediateScore = 0\n\n  data.push({\n    x: ` `,\n    y: intermediateScore,\n    tooltip : `${intermediateScore} (start)`\n  })\n\n  for ( const question of stats.questions ) {\n    questionNumber++\n    intermediateScore += question.score\n    \n    let tooltip = ''\n    if ( question.error ) {\n      tooltip = `${intermediateScore} (error)`\n    } else if ( question.answers.length == 0 ) {\n      tooltip = `${intermediateScore} (miss)`\n    } else if ( question.score >= 0 ) {\n      tooltip = `${intermediateScore} (+${question.score})`\n    } else {\n      tooltip = `${intermediateScore} (${question.score})`\n    }\n    \n    data.push({\n      x: `Q${questionNumber}`,\n      y: intermediateScore,\n      tooltip : tooltip\n    })\n  }\n  return data\n}\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Artist {\n  name: string\n  picture: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newArtist( name: string, picture: string = \"\" ): Artist {\n  return {\n    name: name,\n    picture: picture,\n  }\n}","import { Album } from './Album'\nimport { Artist } from './Artist'\n\n// //////////////////////////////////////////////////\n// model\n\nexport interface Media {\n  title: string\n  music: string \n  artist: Artist\n  album?: Album  \n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newMedia( title: string, music: string, artist: Artist, album?: Album ): Media {\n  return {\n    title: title,\n    music: music,\n    artist: artist,\n    album: album,\n  }\n}","// //////////////////////////////////////////////////\r\n// import\r\n\r\nimport { newAlbum } from \"./Album\"\r\nimport { newArtist } from \"./Artist\"\r\nimport { addQuestion, Game } from \"./Game\"\r\nimport { newMedia } from \"./Media\"\r\nimport { addAnswer, Question } from \"./Question\"\r\nimport { Settings } from \"./Settings\"\r\nimport { pick, pickIndexes, range, shuffle } from \"./Util\"\r\nimport legacyJson from '../static/legacy.json';\r\nimport { Shuffle } from \"@mui/icons-material\"\r\n\r\n// //////////////////////////////////////////////////\r\n// dummy game\r\n\r\nconst fullMusic = newMedia(\r\n    \"Harder, Better, Faster, Stronger & Pêcheur\", \r\n    \"https://cdns-preview-d.dzcdn.net/stream/c-deda7fa9316d9e9e880d2c6207e92260-8.mp3\", \r\n    newArtist( \r\n        \"Daft Punk & Pêcheur\", \r\n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\r\n    ), \r\n    newAlbum( \r\n        \"Discovery & Pêcheur\", \r\n        \"https://e-cdns-images.dzcdn.net/images/cover/2e018122cb56986277102d2041a592c8/56x56-000000-80-0-0.jpg\"\r\n    )\r\n)\r\n\r\nconst noAlbumMusic = newMedia(\r\n    \"Crescendolls\", \r\n    \"https://cdns-preview-0.dzcdn.net/stream/c-02585dc790f2904c4e870cb3bcecfcf3-8.mp3\", \r\n    newArtist( \r\n        \"Daft Punk\", \r\n        \"https://e-cdns-images.dzcdn.net/images/artist/f2bc007e9133c946ac3c3907ddc5d2ea/56x56-000000-80-0-0.jpg\"\r\n    ), \r\n    undefined\r\n) \r\n\r\nconst noPictureMusic = newMedia(\r\n    \"Superheroes\", \r\n    \"https://cdns-preview-3.dzcdn.net/stream/c-3d8caae0a1c59f417f31bb747c43818b-7.mp3\", \r\n    newArtist( \r\n        \"Daft Punk\", \r\n        undefined\r\n    ), \r\n    undefined\r\n)\r\n\r\nconst shortMusic = newMedia(\r\n    \"Short\", \r\n    \"http://cache.amnezic.com/Rem2-14-10.mp3\", \r\n    newArtist( \r\n        \"Short\", \r\n        undefined\r\n    ), \r\n    undefined\r\n) \r\n\r\nconst failedMusic = newMedia(\r\n    \"Failed\",\r\n    \"http://cache.amnezic.com/Clash%20-%20Should%20I%20Stay%20Or%20Go.mp3\",\r\n    newArtist( \r\n        \"Failed\", \r\n        undefined\r\n    ), \r\n    undefined\r\n)\r\n\r\nconst dummyMusics = [ fullMusic, noAlbumMusic, noPictureMusic, shortMusic, failedMusic ]\r\n\r\nexport function buildDummyQuestions( game: Game ): Game {\r\n\r\n    const nbQuestion = game.settings.nbQuestion\r\n    const nbAnswer = game.settings.nbAnswer\r\n    range( nbQuestion ).forEach( i => {\r\n        const media = dummyMusics[ i % dummyMusics.length ]\r\n        const question: Question = addQuestion( game, media.artist.name, media )\r\n\r\n        for ( let j = 0 ; j < nbAnswer ; j++ ) {\r\n        if ( i % nbAnswer == j ) {\r\n            addAnswer( question, media.artist.name, media.title, true )\r\n        } else {\r\n            addAnswer( question, `artist ${j+1}`, `hint ${j+1}`, false )\r\n        }\r\n        }\r\n    } )\r\n\r\n    return game\r\n}\r\n\r\n// //////////////////////////////////////////////////\r\n// test game\r\n\r\nexport function buildTestQuestions( game: Game ): Game {\r\n\r\n    const genre = legacyJson.genres.find( genre => genre.genre === \"Bruitages\" );\r\n    if ( genre ) {\r\n        const musics = genre.media || []\r\n\r\n        const nbQuestion = game.settings.nbQuestion\r\n        const nbAnswer = game.settings.nbAnswer\r\n        range( nbQuestion ).map( i => i+1 ).forEach( i => {\r\n\r\n            const indexes = pickIndexes( nbAnswer, musics.length )\r\n            const correctIndex = pick( indexes )\r\n            const correctMusic = musics[ correctIndex ]\r\n            const artist = newArtist( correctMusic.artist.name )\r\n            const media = newMedia( correctMusic.title, correctMusic.music, artist, undefined )\r\n            const question: Question = addQuestion( game, genre.genre, media )\r\n\r\n            for ( const index of indexes ) {\r\n                const music = musics[ index ]\r\n                addAnswer( question, music.artist.name, music.title, index === correctIndex )\r\n            }\r\n        } )\r\n    }\r\n\r\n    return game\r\n}\r\n\r\n// //////////////////////////////////////////////////\r\n// legacy game\r\n\r\nexport function buildLegacyQuestions( game: Game ): Game {\r\n    \r\n    const nbQuestion = game.settings.nbQuestion\r\n    const nbAnswer = game.settings.nbAnswer\r\n\r\n    const nbMusic = legacyJson.genres.map( genre => genre.media.length ).reduce( ( previous, current ) => previous + current, 0 )\r\n    const questionIndexes = pickIndexes( nbQuestion, nbMusic )\r\n\r\n    for ( const questionIndex of questionIndexes ) {\r\n\r\n        let startIndex = 0\r\n        for ( const genre of legacyJson.genres ) {\r\n            const endIndex = startIndex + genre.media.length - 1\r\n            if ( endIndex < questionIndex ) {\r\n                startIndex = endIndex + 1\r\n                continue\r\n            }\r\n\r\n            const musics = genre.media || []        \r\n            const correctIndex = questionIndex - startIndex\r\n            const correctMusic = musics[ correctIndex ]\r\n            if ( correctMusic == undefined ) {                \r\n                console.log( `nbMusic: ${nbMusic}` )\r\n                console.log( `questionIndexes: ${questionIndexes}` )\r\n                console.log( `questionIndex: ${questionIndex}` )\r\n                console.log( `genre.genre: ${genre.genre} - ${startIndex} - ${endIndex}` )\r\n                console.log( `correctIndex: ${correctIndex}` )\r\n                console.log( `nbMusic: ${musics.length}` )\r\n                console.log( `correctMusic: ${correctMusic}` )\r\n            }            \r\n            const artist = newArtist( correctMusic.artist && correctMusic.artist.name ? correctMusic.artist.name : '???' )\r\n            const media = newMedia( correctMusic.title || '???', correctMusic.music, artist, undefined )\r\n            const question: Question = addQuestion( game, genre.genre, media )\r\n\r\n            const indexes = pickIndexes( nbAnswer, musics.length ).filter( index => index != correctIndex ).slice( 0, nbAnswer - 1 )\r\n            indexes.push( correctIndex )\r\n            shuffle( indexes )\r\n\r\n            for ( const index of indexes ) {\r\n                const music = musics[ index ]\r\n                addAnswer( question, music.artist && music.artist.name ? music.artist.name : '???', music.title || '???', index === correctIndex )\r\n            }\r\n\r\n            break\r\n        }\r\n        \r\n    }\r\n\r\n    return game\r\n}","\n// //////////////////////////////////////////////////\n// model\n\nexport interface Album {\n  title: string\n  picture: string\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newAlbum( title: string, picture: string = \"\" ): Album {\n  return {\n    title: title,\n    picture: picture,\n  }\n}","import { customAlphabet } from 'nanoid'\n\nimport { newSettings, Settings, SettingsUpdater } from './Settings'\nimport { Player, PlayerId, PlayerUpdater } from './Player'\nimport { addAnswer, isCorrect, Question, QuestionId, QuestionUpdater } from './Question'\nimport { newArtist } from './Artist'\nimport { newAlbum } from './Album'\nimport { range, toTimeString, toZeroPadString } from './Util'\nimport { Media, newMedia } from './Media'\nimport { GameStats, newGameStats } from './GameStats'\nimport { Card, DefaultCards } from './Card'\nimport { flagAnswerAsCorrect, flagAnswerAsIncorrect, flagQuestionAsError, flagQuestionAsMiss, newPlayerStats } from './PlayerStats'\nimport { ANSWER_ID_SUFFIX, DEBUG, DEFAULT_NB_ANSWER_PER_QUESTION, DEFAULT_NB_PLAYER, DEFAULT_NB_QUESTION, MAX_NB_GAME, PLAYER_ID_SUFFIX, QUESTION_ID_SUFFIX } from './Constants'\nimport { buildDummyQuestions, buildLegacyQuestions, buildTestQuestions } from './Quizz'\nimport { AvatarId } from './Avatar'\n\n// //////////////////////////////////////////////////\n// model\n\nexport const newGameId = customAlphabet( 'ABCDEFGHIJKLMNPQRSTUVWXYZ', 4 )\nexport const newGameCode = customAlphabet( '0123456789', 4 )\n\nexport enum GameStep {\n  SETTINGS = 'SETTINGS',\n  PLAYERS = 'PLAYERS',\n  QUIZZ = 'QUIZZ',\n  SCORES = 'SCORES',\n}\n\nexport type GameId = string\n\nexport interface Game {\n  readonly id: string\n  readonly code: string\n  readonly created: number\n  updated: number\n  step: GameStep\n  settings: Settings\n  players: Player[]\n  questions: Question[]\n  started: boolean\n  questionNumber?: number\n  ended: boolean\n  stats?: GameStats\n}\n\nexport type GameUpdater = ( game: Game ) => Game\nexport type OnGameUpdate = ( gameId: GameId, gameUpdater: GameUpdater ) => void\nexport type OnPlayerUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n// export type OnQuestionUpdate = ( gameId: GameId, playerId: PlayerId, gameUpdater: GameUpdater ) => void\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGame( nbPlayer: number = DEFAULT_NB_PLAYER, nbQuestion: number = DEFAULT_NB_QUESTION, nbAnswer: number = DEFAULT_NB_ANSWER_PER_QUESTION ): Game {\n  return {\n    id: newGameId(),  \n    code: newGameCode(),  \n    created: Date.now(),  \n    updated: Date.now(),\n    step: GameStep.SETTINGS,\n    settings: newSettings( nbPlayer, nbQuestion, nbAnswer ),\n    players: [],\n    questions: [],\n    started: false,\n    ended: false,\n  }\n}\n\n// //////////////////////////////////////////////////\n// add\n\nexport function addPlayer( game: Game, card: Card ): Player {\n  const number = game.players.length + 1\n  const current: Player = {\n    id: PLAYER_ID_SUFFIX + number, \n    number: number,\n    avatarId: number as AvatarId,\n    name: `Player ${toZeroPadString( number, 2 )}`,\n    status: 'active',\n    card: card,\n    stats: newPlayerStats(),\n  }\n  DEBUG && console.log( `(+) player: ${current}` )\n  game.players.push( current )\n  return current\n}\n\nexport function addQuestion( game: Game, title: string, media: Media ): Question {\n  const number = game.questions.length + 1\n  const current: Question = {\n    id: ( QUESTION_ID_SUFFIX + number ) * ANSWER_ID_SUFFIX,\n    number: number, \n    status: 'not-played',\n    title: title,\n    media: media,\n    answers: [],\n    playerAnswers: [],\n  }\n  if ( game.questions.length > 0 ) {\n    const previous: Question = game.questions[ game.questions.length - 1 ]\n    previous.nextNumber = current.number\n    current.previousNumber = previous.number\n  }\n  DEBUG && console.log( `(+) question: ${current}` )\n  game.questions.push( current )\n  return current\n}\n\n// //////////////////////////////////////////////////\n// update\n\nexport function updateSettings( update: SettingsUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    return {\n      ...game,\n      settings: update( game.settings ),\n    }\n  }\n}\n\nexport function updatePlayer( playerId: PlayerId, update: PlayerUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.players ) {\n      return game\n    }\n    return {\n      ...game,\n      players: game.players.map( player => player.id == playerId ? update( player ) : player ),\n    }\n  }\n}\n\nexport function updateQuestion( questionId: QuestionId, update: QuestionUpdater ): GameUpdater {\n  return ( game: Game ) => {\n    if ( !game.questions ) {\n      return game\n    }\n    return {\n      ...game,\n      questions: game.questions.map( question => question.id == questionId ? update( question ) : question ),\n    }\n  }\n}\n\n// //////////////////////////////////////////////////\n// store\n\nconst GAMES = 'games'\n\nexport function clearGames() {\n  localStorage.removeItem( GAMES )\n}\n\nexport function sortGames( games: Game[] ): Game[] {\n  const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\n    return right.updated - left.updated\n  } )\n  return sortedGames\n}\n\nexport function sliceGames( games: Game[] ): Game[] {\n  const slicedGames = games.slice( 0, MAX_NB_GAME )\n  return slicedGames\n}\n\nexport function sanitizeGames( games: Game[] ): Game[] {\n  return sliceGames( sortGames( games ) )\n}\n\nexport function storeGames( games: Game[] ): Game[] {\n  const sanitizedGames = games.slice( 0, MAX_NB_GAME )\n  localStorage.setItem( GAMES, JSON.stringify( sanitizedGames ) )\n  return sanitizedGames\n}\n\nexport function loadGames(): Game[] {\n  const games: Game[] = JSON.parse( localStorage.getItem( GAMES ) || '[]' ) || []  \n  return sortGames( games )\n}\n\n// //////////////////////////////////////////////////\n// select\n\nexport function selectGame( games: Game[], gameId: string | undefined ): Game | undefined {\n  if ( !gameId ) {\n    return undefined\n  }\n  const game = gameId ? loadGames().find( g => g.id == gameId ) : undefined\n  console.log(`[select] game #${gameId} : ${ game !== undefined ? 'OK' : 'KO' }`)\n  return game\n}\n\nexport function selectQuestion( game: Game | undefined, questionParam: string | undefined ): Question | undefined {\n  if ( !game || !questionParam ) {\n    return undefined\n  }\n  const questionNumber: number = parseInt( questionParam )\n  const question = game.questions && questionNumber ? game.questions.find( question => question.number == questionNumber ) : undefined\n  console.log(`[select] question #${questionNumber} : ${ question !== undefined ? 'OK' : 'KO' }`)\n  return question\n}\n\n// //////////////////////////////////////////////////\n// state\n\nexport function hasPlayers( game: Game ): boolean {\n  return ( game !== undefined && game.players !== undefined && game.players.length > 0 )\n}\n\nexport function hasQuestions( game: Game ): boolean {\n  return ( game !== undefined && game.questions !== undefined && game.questions.length > 0 )\n}\n\nexport function isSetUp( game: Game ): boolean {\n  return hasPlayers( game ) && hasQuestions( game )\n}\n\nexport function isSettingsPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || isSetUp( game ) \n}\n\nexport function isPlayersPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isQuizzPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || game.ended || !isSetUp( game ) \n}\n\nexport function isScoresPageDisabled( game: Game | undefined ): boolean {\n  return ( game === undefined ) || !game.started || !isSetUp( game )\n}\n\nexport function OnStep( gameStep: GameStep ): GameUpdater {\n  return ( game: Game ): Game => {\n      console.log( `[on-step] ${game.id} - ${gameStep}` )\n      \n      //\n      // move to new step\n      //\n    \n      game.step = gameStep\n    \n      return game\n  }\n}\n\nexport function onSetUp( game: Game ): Game {\n  console.log( `[on-set-up] ${game.id}` )\n\n  //\n  // build questions\n  //\n\n  if ( DEBUG ) {\n    game = buildDummyQuestions( game )\n    // game = buildTestQuestions( game )\n  } else {\n    game = buildLegacyQuestions( game )\n  }\n\n  //\n  // create default players\n  //\n\n  const nbPlayer = game.settings.nbPlayer\n  range( nbPlayer ).forEach( index => addPlayer( game, DefaultCards[ index % DefaultCards.length ] ) )  \n  \n  //\n  // finally move to players step\n  //\n\n  game.step = GameStep.PLAYERS\n\n  return game\n}\n\nexport function onStartGame( game: Game ): Game {\n  console.log( `[on-start-game] ${game.id}` )\n\n  if ( !game.questions || game.questions.length == 0 ) {\n    return game\n  }\n\n  //\n  // flag game as started\n  //\n\n  game.started = true\n\n  //\n  // select first question\n  //\n\n  game.questionNumber = game.questions[0].number\n\n  //\n  // prepare game stats\n  //\n\n  game.stats = newGameStats( game.settings.nbQuestion ) \n  \n  //\n  // finally move to quizz step\n  //\n\n  game.step = GameStep.QUIZZ\n\n  return game\n}\n\nexport function onAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-answers] ${game.id} - ${question.number}` )\n\n    const nbPlayers = game.players.length\n    let nbPoint = nbPlayers\n\n    for ( const playerAnswer of question.playerAnswers ) {\n      const player = game.players.find( player => player.id === playerAnswer.playerId )\n      if ( player ) {\n        const correct = isCorrect( question, playerAnswer )\n        if ( correct ) {\n          flagAnswerAsCorrect( player.stats, question.id, playerAnswer.answerId, nbPoint )\n        } else {\n          flagAnswerAsIncorrect( player.stats, question.id, playerAnswer.answerId, -nbPoint )\n        }\n      }\n      if ( nbPoint > 1 ) {\n        nbPoint--\n      }\n    }\n\n    for ( let player of game.players ) {\n      let miss = true\n      for ( const playerAnswer of question.playerAnswers ) {\n        if ( player.id === playerAnswer.playerId ) {\n          miss = false\n          break\n        }\n      }\n      if ( miss ) {\n        flagQuestionAsMiss( player.stats, question.id )\n      }\n    }\n\n    return game\n  }\n}\n\nexport function onErrorAnswers( game: Game, question: Question ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question-error] ${game.id} - ${question.number}` )\n\n    for ( const player of game.players ) {\n      flagQuestionAsError( player.stats, question.id )\n    }\n\n    return game\n  }\n}\n\nexport function onQuestionNumber( questionNumber: number ): GameUpdater {\n  return ( game: Game ): Game => {\n    console.log( `[on-question] ${game.id} - ${questionNumber}` )\n\n    if ( !game.questions ) {\n      throw Error( \"missing questions!\" )\n    }\n    const question = game.questions.find( question => question.number === questionNumber )\n    if ( !question ) {\n      throw Error( \"unknwon question!\" )\n    }\n\n    //\n    // update stats\n    //\n\n    if ( game.stats ) {\n      game.stats.nbCompleted++\n      game.stats.progress = Math.ceil( game.stats.nbCompleted * 100 / game.stats.nbQuestion )\n    }\n\n    //\n    // move to next question\n    //\n\n    game.questionNumber = question.number\n\n    return game\n  }\n}\n\nexport function onEndGame( game: Game ): Game {\n  console.log( `[on-end-game] ${game.id}` )\n\n  //\n  // flag game as ended\n  //\n\n  game.ended = true\n  \n  //\n  // finally move to scores step\n  //\n\n  game.step = GameStep.SCORES\n\n  return game\n}\n\n","\n// //////////////////////////////////////////////////\n// model\n\nexport interface GameStats {\n  readonly nbQuestion: number\n  nbCompleted: number\n  progress: number\n}\n\n// //////////////////////////////////////////////////\n// create\n\nexport function newGameStats( nbQuestion: number ): GameStats {\n  return {\n    nbQuestion: nbQuestion,\n    nbCompleted: 0,  \n    progress: 0,\n  }\n}\n","import { Game, GameStep } from './Game'\n\n// //////////////////////////////////////////////////\n// navigate\n\nexport function toHomePage(): string {\n  return `/`\n}\n\nexport function toSettingsPage( game: Game ): string {\n  return `/game/${game.id}/settings`\n}\n\nexport function toPlayersPage( game: Game ): string {\n  return `/game/${game.id}/players`\n}\n\nexport function toQuizzPage( game: Game ): string {\n  if ( !game.questionNumber ) {\n    return `/game/${game.id}/start`    \n  }\n  return `/game/${game.id}/question/${game.questionNumber}`\n}\n\nexport function toScoresPage( game: Game ): string {\n  return `/game/${game.id}/scores`\n}\n\nexport function toGamePage( game: Game | undefined ): string {\n  if ( game ) {\n    switch ( game.step ) {\n      case GameStep.SETTINGS:\n        return toSettingsPage( game )\n      case GameStep.PLAYERS:\n        return toPlayersPage( game )\n      case GameStep.QUIZZ:\n        return toQuizzPage( game )\n      case GameStep.SCORES:\n        return toScoresPage( game )\n    }  \n  }\n  return toHomePage()\n}","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport AppBar from '@mui/material/AppBar'\r\nimport Box from '@mui/material/Box'\r\nimport Toolbar from '@mui/material/Toolbar'\r\nimport IconButton from '@mui/material/IconButton'\r\n\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\r\nimport MenuIcon from '@mui/icons-material/Menu'\r\n\r\nimport { Game, GameStep, OnGameUpdate, OnStep } from '../data/Game'\r\nimport { isSettingsPageDisabled, isPlayersPageDisabled, isQuizzPageDisabled, isScoresPageDisabled } from '../data/Game'\r\nimport { toHomePage } from '../data/Navigate'\r\nimport { onKeyEvent, onUserEvent } from '../data/Util'\r\nimport {  Group, Home, MilitaryTech, MusicNote, Settings } from '@mui/icons-material'\r\nimport { ListItemIcon, ListItemText, Menu, MenuItem } from '@mui/material'\r\nimport { HEADER_KEYBOARD_SHORTCUTS } from '../data/Constants'\r\n\r\ninterface Props {\r\n    title?: string\r\n    gameStep?: GameStep\r\n    game?: Game\r\n    updateGame?: OnGameUpdate\r\n    menuDisabled?: boolean\r\n    onPrevious?: () => void\r\n    onNext?: () => void\r\n}\r\n\r\nconst Header = ( props: Props ) => {\r\n    const { title, gameStep, game, updateGame, menuDisabled, onPrevious, onNext } = props\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // title helpers\r\n\r\n    const homeTitle = 'Home'\r\n    const settingsTitle = 'Settings'\r\n    const playersTitle = 'Players'\r\n    const quizzTitle = 'Quizz'\r\n    const scoresTitle = 'Scores'\r\n\r\n    // selected helpers\r\n\r\n    const isHomeSelected = gameStep === undefined\r\n    const isSettingsSelected = gameStep == GameStep.SETTINGS\r\n    const isPlayersSelected = gameStep == GameStep.PLAYERS\r\n    const isQuizzSelected = gameStep == GameStep.QUIZZ\r\n    const isScoresSelected = gameStep == GameStep.SCORES\r\n\r\n    // disabled helpers\r\n\r\n    const isHomeDisabled = ( menuDisabled === true ) || false\r\n    const isSettingsDisabled = ( menuDisabled === true ) || isSettingsPageDisabled( game )\r\n    const isPlayersDisabled = ( menuDisabled === true ) || isPlayersPageDisabled( game )\r\n    const isQuizzDisabled = ( menuDisabled === true ) || isQuizzPageDisabled( game )\r\n    const isScoresDisabled = ( menuDisabled === true ) || isScoresPageDisabled( game )\r\n\r\n    // update helpers\r\n\r\n    const updateGameStep = ( gameStep: GameStep ) => {\r\n        if ( game && updateGame ) {\r\n            updateGame( game.id, OnStep( gameStep ) )\r\n        }\r\n    }\r\n\r\n    // user events\r\n\r\n    const onHomePage = !isHomeSelected ? onUserEvent( () => navigate( toHomePage() ) ) : undefined\r\n    const onSettingsPage = !isSettingsSelected ? onUserEvent( () => updateGameStep( GameStep.SETTINGS ) ) : undefined\r\n    const onPlayersPage = !isPlayersSelected ? onUserEvent( () => updateGameStep( GameStep.PLAYERS ) ) : undefined\r\n    const onQuizzPage = !isQuizzSelected ? onUserEvent( () => updateGameStep( GameStep.QUIZZ ) ) : undefined\r\n    const onScoresPage = !isScoresSelected ? onUserEvent( () => updateGameStep( GameStep.SCORES ) ) : undefined\r\n\r\n    // keyboard shortcuts\r\n\r\n    if ( HEADER_KEYBOARD_SHORTCUTS ) {\r\n\r\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\r\n            switch ( key ) {\r\n                case 'ArrowLeft':\r\n                    if ( onPrevious ) {\r\n                        console.log( `header >>> key \"${key}\" >>> onPrevious()`);\r\n                        onPrevious();\r\n                        return true;\r\n                    }\r\n                    break;\r\n                case 'ArrowRight':\r\n                    if ( onNext ) {\r\n                        console.log( `header >>> key \"${key}\" >>> onNext()`);\r\n                        onNext();\r\n                        return true;\r\n                    }\r\n                    break;\r\n            } \r\n            return false;\r\n        } ), [ onPrevious, onNext ] );\r\n        \r\n        React.useEffect( () => {\r\n            document.addEventListener( 'keydown', handleKeyPress );\r\n            return () => {\r\n                document.removeEventListener( 'keydown', handleKeyPress );\r\n            };\r\n        }, [ handleKeyPress ] );\r\n    }\r\n\r\n    // menu \r\n\r\n    const [ menuElement, setMenuElement ] = React.useState( null );\r\n    const open = Boolean( menuElement );\r\n    const onMenuOpen = ( event: any ) => {\r\n        setMenuElement( event.currentTarget );\r\n    };\r\n    const onMenuClose = () => {\r\n        setMenuElement( null );\r\n    };\r\n\r\n    // title \r\n\r\n    const finalTitle = title ? title : \r\n                        isHomeSelected ? homeTitle : \r\n                        isSettingsSelected ? settingsTitle : \r\n                        isPlayersSelected ? playersTitle : \r\n                        isQuizzSelected ? quizzTitle : \r\n                        isScoresSelected ? scoresTitle : ''\r\n\r\n    return (\r\n        <Box className=\"header\" sx={{ flexGrow: 1 }} style={{ marginBottom: '20px' }}>\r\n            <AppBar position=\"static\" color=\"transparent\">\r\n                <Toolbar>\r\n                    <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n\r\n                        {/* menu */}\r\n\r\n                        <div>\r\n\r\n                            { game && (\r\n                                <>\r\n\r\n                                    {/* icon */}\r\n        \r\n                                    <IconButton\r\n                                        id=\"menu-button\"\r\n                                        aria-label=\"menu\"\r\n                                        aria-controls={ open ? 'basic-menu' : undefined }\r\n                                        aria-expanded={ open ? 'true' : undefined }\r\n                                        aria-haspopup=\"true\"\r\n                                        style={{ opacity: menuDisabled === true ? '0' : '1', cursor: menuDisabled === true ? 'default' : 'pointer' }}\r\n                                        onClick={menuDisabled === true ? undefined : onMenuOpen}\r\n                                    >\r\n                                        <MenuIcon />\r\n                                    </IconButton>\r\n        \r\n                                    {/* menu items */}\r\n        \r\n                                    <Menu\r\n                                        id=\"basic-menu\"\r\n                                        anchorEl={menuElement}\r\n                                        open={open}\r\n                                        onClose={onMenuClose}\r\n                                        MenuListProps={{\r\n                                        'aria-labelledby': 'basic-button',\r\n                                        }}\r\n                                    >\r\n        \r\n                                        {/* home */}\r\n        \r\n                                        <MenuItem selected={isHomeSelected} disabled={isHomeDisabled} onClick={onHomePage}>\r\n                                            <ListItemIcon>\r\n                                                <Home fontSize=\"small\" />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{homeTitle}</ListItemText>\r\n                                        </MenuItem>\r\n        \r\n                                        {/* settings */}\r\n        \r\n                                        <MenuItem selected={isSettingsSelected} disabled={isSettingsDisabled} onClick={onSettingsPage}>\r\n                                            <ListItemIcon>\r\n                                                <Settings fontSize=\"small\" />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{settingsTitle}</ListItemText>\r\n                                        </MenuItem>\r\n        \r\n                                        {/* players */}\r\n        \r\n                                        <MenuItem selected={isPlayersSelected} disabled={isPlayersDisabled} onClick={onPlayersPage}>\r\n                                            <ListItemIcon>\r\n                                                <Group fontSize=\"small\" />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{playersTitle}</ListItemText>\r\n                                        </MenuItem>\r\n        \r\n                                        {/* quizz */}\r\n        \r\n                                        <MenuItem selected={isQuizzSelected} disabled={isQuizzDisabled} onClick={onQuizzPage}>\r\n                                            <ListItemIcon>\r\n                                                <MusicNote fontSize=\"small\" />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{quizzTitle}</ListItemText>\r\n                                        </MenuItem>\r\n        \r\n                                        {/* scores */}\r\n        \r\n                                        <MenuItem selected={isScoresSelected} disabled={isScoresDisabled} onClick={onScoresPage}>\r\n                                            <ListItemIcon>\r\n                                                <MilitaryTech fontSize=\"small\" />\r\n                                            </ListItemIcon>\r\n                                            <ListItemText>{scoresTitle}</ListItemText>\r\n                                        </MenuItem>\r\n        \r\n                                    </Menu>\r\n                                \r\n                                </>\r\n                            ) }\r\n\r\n                        </div>\r\n\r\n                        {/* title */}\r\n\r\n                        <div style={{ fontWeight: 'bold', textTransform: 'uppercase' }}>{finalTitle}</div>\r\n\r\n                        {/* Previous & Next */}\r\n                        \r\n                        <div>\r\n\r\n                            { onPrevious && (\r\n                                <IconButton \r\n                                    aria-label=\"Previous\" \r\n                                    color=\"info\"\r\n                                    onClick={onPrevious}\r\n                                >\r\n                                    <SkipPreviousIcon />\r\n                                </IconButton>\r\n                            ) }\r\n                            \r\n                            { onNext && (\r\n                                <IconButton \r\n                                    aria-label=\"Next\" \r\n                                    color=\"info\"\r\n                                    onClick={onNext}\r\n                                >\r\n                                    <SkipNextIcon />\r\n                                </IconButton>\r\n                            ) }\r\n\r\n                        </div>\r\n\r\n                    </div>\r\n\r\n                </Toolbar>\r\n            </AppBar>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\n\r\nimport { Game } from '../data/Game'\r\n\r\ninterface Props {\r\n}\r\n\r\nconst Footer = ( props: Props ) => {\r\n\r\n    return (\r\n        <>\r\n            {/* <Box className=\"footer\" sx={{ marginTop: '20px', flexGrow: 1 }}>\r\n                <AppBar position=\"static\" color=\"transparent\">\r\n                    <Toolbar style={{ width: '100%', textAlign: 'center' }}>\r\n                        <Typography variant=\"caption\" display=\"block\" color=\"GrayText\" gutterBottom>\r\n                            @mnezic\r\n                        </Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n            </Box> */}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { Game, GameStep } from '../data/Game'\r\nimport { toHomePage, toGamePage } from '../data/Navigate'\r\n\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\n\r\ninterface Props {\r\n    title?: string\r\n    children: any\r\n    onNext?: () => void\r\n}\r\n\r\nconst Page = ( props: Props ) => {\r\n    const { title, children, onNext } = props\r\n    \r\n    return (\r\n        <div className={`page`}>\r\n            <Header title={title} onNext={onNext}/>\r\n            {children}\r\n            <Footer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react'\r\n\r\nimport { makeStyles } from '@mui/styles'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography'\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\r\nimport CalendarTodayIcon from '@mui/icons-material/CalendarToday'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\r\n\r\nimport { Game } from '../data/Game'\r\nimport { onUserEvent, toDateTimeString } from '../data/Util'\r\nimport { Chip, Stack } from '@mui/material';\r\n\r\nconst useStyles = makeStyles( () => ( {\r\n    gameCard: {\r\n        display: 'flex', \r\n        flexDirection: 'column', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between',\r\n        padding: '10px 20px',\r\n        borderRadius: '10px',\r\n        border: '2px solid #ddd',        \r\n        \"&:hover\": {\r\n            border: '2px solid gold',        \r\n            backgroundColor: '#ffd70029'\r\n        }\r\n    },\r\n    gameLine: {\r\n        width: '100%', \r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'space-between'\r\n    },\r\n    gameItem: {\r\n        display: 'flex', \r\n        alignItems: 'center', \r\n        justifyContent: 'center'\r\n    },\r\n} ) );\r\n\r\ninterface Props {\r\n    game?: Game\r\n    startGame?: () => void\r\n    resumeGame?: ( game: Game ) => void\r\n    deleteGame?: ( game: Game ) => void\r\n}\r\n\r\nconst GameCard = ( props: Props ) => {\r\n    const { game, startGame, resumeGame, deleteGame } = props\r\n    const classes = useStyles()\r\n\r\n    if ( !game ) {\r\n\r\n        const onStart = startGame ? onUserEvent( () => startGame() ) : undefined\r\n\r\n        return (\r\n            <div title=\"Start New Game\" className={`${classes.gameCard} selectable`} onClick={onStart}>\r\n                <div className={classes.gameLine}> \r\n                    <div className={classes.gameItem}><b>Start New Game</b></div>\r\n                    <div> </div>\r\n                </div>\r\n                <div className={classes.gameLine}> \r\n                    <div> </div>\r\n                    <SkipNextIcon style={{ margin: '20px' }} color=\"primary\"/>\r\n                    <div> </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // user events\r\n\r\n    const onResume = resumeGame ? onUserEvent( () => resumeGame( game ) ) : undefined\r\n    const onDelete = deleteGame ? onUserEvent( () => deleteGame( game ) ) : undefined\r\n\r\n    const progress = game.ended ? 100 : game.stats ? game.stats.progress : 0\r\n    const state = game.ended ? 'ended' : game.stats ? `${Math.round(game.stats.progress)}%` : 'not started'\r\n\r\n    return (        \r\n        <div title=\"Resume Game\" className={`${classes.gameCard} selectable`} onClick={onResume}>\r\n            <div className={classes.gameLine}> \r\n                <div className={classes.gameItem}><b>Game {game.id}</b></div>\r\n\r\n                <div>\r\n                    <Stack direction=\"row\" spacing={1} style={{ opacity: '0.7' }}>\r\n                        { game.ended && <Chip label=\"Ended\" color=\"success\" /> }\r\n                        { !game.ended && game.stats && <Chip label={`${Math.round(game.stats.progress)}%`} color=\"primary\" /> }\r\n                        { !game.ended && !game.stats && <Chip label=\"Not started\" color=\"warning\" /> }\r\n                    </Stack>\r\n                </div>\r\n\r\n                <IconButton title=\"Delete Game\" onClick={onDelete}>\r\n                    <CloseIcon />\r\n                </IconButton>\r\n\r\n            </div>\r\n            <div style={{ marginLeft: '5%', width: '95%' }}>\r\n                <div className={classes.gameLine}> \r\n                    <div className={classes.gameItem}><PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbPlayer} players</div>\r\n                    <div className={classes.gameItem}><MusicNoteIcon style={{ marginRight: '10px' }} color=\"primary\"/> {game.settings.nbQuestion} questions</div>\r\n                    <div className={classes.gameItem}><CalendarTodayIcon style={{ marginRight: '10px' }} color=\"primary\"/> {toDateTimeString(game.updated)}</div>                \r\n                </div>\r\n                <Box sx={{ width: '100%', display: 'flex', alignItems: 'center', marginTop: '5px' }}>\r\n                    <Box sx={{ height: '10px', width: '100%', display: 'flex', alignItems: 'center' }}>\r\n                        <LinearProgress variant=\"determinate\" value={progress} valueBuffer={100}/>\r\n                    </Box>\r\n                </Box>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameCard","import React from 'react'\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext';\r\n\r\nimport { onUserEvent } from '../data/Util'\r\n\r\ninterface Props {\r\n    title?: string\r\n    onNext: () => void\r\n}\r\n\r\nconst NextButton = ( props: Props ) => {\r\n    const { title, onNext } = props\r\n    const description = title && title != '' ? title : 'Next'   \r\n    \r\n    // user events\r\n\r\n    const onClick = onUserEvent( onNext )\r\n\r\n    return (\r\n        <IconButton color=\"secondary\" title={description} onClick={onClick}>\r\n            <SkipNextIcon />\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default NextButton","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport IconButton from '@mui/material/IconButton'\r\nimport DeleteIcon from '@mui/icons-material/Delete'\r\nimport Grid from '@mui/material/Grid'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\n\r\nimport { Game, GameId, GameStep, newGame, OnGameUpdate } from '../data/Game'\r\nimport { toGamePage } from '../data/Navigate'\r\n\r\nimport Page from '../component/Page'\r\nimport GameCard from '../component/GameCard'\r\nimport NextButton from '../component/NextButton'\r\nimport { Accordion, AccordionDetails, AccordionSummary } from '@mui/material'\r\n\r\ninterface Props {\r\n    games: Game[]\r\n    addGame: ( game: Game ) => void\r\n    updateGame: OnGameUpdate\r\n    deleteGames: ( gameIds: GameId[] ) => void\r\n}\r\n\r\nconst HomePage = ( props: Props ) => {\r\n    const { games, addGame, updateGame, deleteGames } = props\r\n\r\n    const navigate = useNavigate()\r\n\r\n    // update helpers\r\n\r\n    const startGame = () => {\r\n        console.log( `[start-game]` )\r\n        const game = newGame()\r\n        addGame( game )\r\n        navigate( toGamePage( game ) )\r\n    }\r\n\r\n    const resumeGame = ( game: Game ) => {\r\n        console.log( `[resume-game] ${game.id}` )\r\n        updateGame( game.id, ( game: Game ) => {\r\n            game.updated = Date.now()\r\n            if ( game.ended ) {\r\n                game.step = GameStep.SCORES    \r\n            } else if ( game.started ) {                \r\n                game.step = GameStep.QUIZZ\r\n            }            \r\n            return game\r\n        } )\r\n        navigate( toGamePage( game ) )\r\n    }\r\n\r\n    const deleteGame = ( game: Game ) => {\r\n        deleteGames( [ game.id ] )\r\n    }\r\n\r\n    const deleteAllGames = () => {\r\n        var allGameIds: GameId[] = []\r\n        for ( const game of games ) {\r\n            allGameIds.push( game.id )\r\n        }\r\n        deleteGames( allGameIds )\r\n    }\r\n\r\n    //\r\n    // clean old games\r\n    //\r\n\r\n    React.useEffect( () => {\r\n        var oldGameIds: GameId[] = []\r\n        for ( const game of games ) {\r\n            if ( game.ended ) {\r\n                const delta = Date.now() - game.updated\r\n                if ( delta > /* 30 days */ 30 * 24 * 60 * 60 * 1000 ) {\r\n                    oldGameIds.push( game.id )\r\n                }\r\n            }\r\n        }\r\n        if ( oldGameIds.length > 0 ) {\r\n            deleteGames( oldGameIds )\r\n        }\r\n    }, [] )\r\n\r\n    //\r\n    // sort games\r\n    //\r\n\r\n    const sortedGames = [ ...games ].sort( ( left: Game, right: Game ): number => {\r\n        return right.updated - left.updated\r\n    } )\r\n\r\n    return (\r\n        <Page title=\"Amnezic\" onNext={startGame}>\r\n            \r\n\r\n            {/* new game */}\r\n\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\r\n                <NextButton title=\"New Game\" onNext={startGame}/>\r\n            </div>\r\n\r\n            {/* prevous game */}\r\n\r\n            <Accordion>\r\n                \r\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} >\r\n                    Previous games\r\n                </AccordionSummary>\r\n                \r\n                <AccordionDetails>\r\n                    \r\n                    <Grid container spacing={2}>\r\n\r\n                        {\r\n                            (\r\n                                <>\r\n                                    {sortedGames.map( game => {\r\n                                        return (\r\n                                            <Grid key={game.id} item xs={12} textAlign=\"left\">\r\n                                                <GameCard\r\n                                                    game={game}\r\n                                                    resumeGame={resumeGame}\r\n                                                    deleteGame={deleteGame}\r\n                                                />\r\n                                            </Grid>\r\n                                        )\r\n                                    })}                        \r\n                                </>\r\n                            )\r\n                        }\r\n\r\n                        <Grid item xs={12} textAlign=\"right\">\r\n\r\n                            {/* clear previous games */}\r\n\r\n                            <IconButton\r\n                                title=\"Delete all games\" \r\n                                color=\"default\" \r\n                                disabled={games.length == 0} \r\n                                onClick={deleteAllGames}\r\n                            >\r\n                                <DeleteIcon />\r\n                            </IconButton>\r\n\r\n                        </Grid>\r\n\r\n                    </Grid>\r\n\r\n                </AccordionDetails>\r\n                \r\n            </Accordion>\r\n\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react'\r\nimport { AvatarId } from '../data/Avatar'\r\n\r\nimport { PlayerId } from '../data/Player'\r\n\r\ninterface Props {\r\n    id: AvatarId\r\n    size: AvatarSize\r\n    disabled?: boolean\r\n    selected?: boolean\r\n    onClick?: () => void\r\n}\r\n\r\nexport enum AvatarSize {\r\n    XS = 'XS',\r\n    S = 'S',\r\n    M = 'M',\r\n    L = 'L',\r\n    XL = 'XL',\r\n}\r\n\r\nconst PlayerAvatar = ( props: Props ) => {\r\n    const { id, size, disabled, selected, onClick } = props\r\n\r\n    let avatarClassNames = `avatar`\r\n    avatarClassNames = `${avatarClassNames} avatar-${id}`\r\n    avatarClassNames = `${avatarClassNames} avatar-${size}`    \r\n    if ( disabled ) {\r\n        avatarClassNames = `${avatarClassNames} disabled`\r\n    }\r\n    if ( selected ) {\r\n        avatarClassNames = `${avatarClassNames} selected`\r\n    }\r\n    if ( onClick ) {\r\n        avatarClassNames = `${avatarClassNames} selectable`\r\n    }\r\n\r\n    return (\r\n        <div className={avatarClassNames} onClick={onClick}></div>\r\n    )\r\n}\r\n\r\nexport default PlayerAvatar\r\n","import React from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { Game, GameStep } from '../data/Game'\r\nimport { toHomePage, toGamePage } from '../data/Navigate'\r\n\r\nimport Header from './Header'\r\nimport Footer from './Footer'\r\nimport { DEBUG } from '../data/Constants'\r\n\r\ninterface Props {\r\n    title?: string\r\n    gameStep: GameStep\r\n    game: Game\r\n    menuDisabled?: boolean\r\n    updateGame: ( gameId: string, update: ( game: Game ) => Game ) => void\r\n    onPrevious?: () => void\r\n    onNext?: () => void\r\n    children: any\r\n}\r\n\r\nconst GamePage = ( props: Props ) => {\r\n    const { title, gameStep, game, menuDisabled, updateGame, onPrevious, onNext, children } = props\r\n\r\n    const navigate = useNavigate()\r\n    \r\n    React.useEffect( () => { \r\n        if ( game.step !== gameStep ) {\r\n            console.log(`[effect] INVALID game step! ( current step: ${gameStep}, game step: ${game.step} )>>> NAVIGATE`)\r\n            navigate( toGamePage( game ), { replace: true } )    \r\n        }\r\n    }, [ game ] )\r\n    \r\n    return (\r\n        <>\r\n            <div className={`page step-${gameStep.toLowerCase()}`}>\r\n                <Header title={title} gameStep={gameStep} game={game} menuDisabled={menuDisabled} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}/>\r\n                {children}\r\n                <Footer />\r\n            </div>\r\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#eee', padding: '20px' }}>{JSON.stringify(game,undefined,4)}</pre>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GamePage","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport MusicNoteIcon from '@mui/icons-material/MusicNote'\r\nimport PersonIcon from '@mui/icons-material/Person'\r\nimport QuizIcon from '@mui/icons-material/Quiz'\r\nimport Button from '@mui/material/Button'\r\nimport Grid from '@mui/material/Grid'\r\n\r\nimport GamePage from '../component/GamePage'\r\n\r\nimport { Settings } from '../data/Settings'\r\nimport { Game, GameStep, OnGameUpdate, selectGame, updateSettings, onSetUp } from '../data/Game'\r\nimport { toHomePage } from '../data/Navigate'\r\nimport { onUserEvent } from '../data/Util'\r\nimport { INCREMENT_NB_ANSWER_PER_QUESTION, INCREMENT_NB_PLAYER, INCREMENT_NB_QUESTION, MAX_NB_ANSWER_PER_QUESTION, MAX_NB_PLAYER, MAX_NB_QUESTION, MIN_NB_ANSWER_PER_QUESTION, MIN_NB_PLAYER, MIN_NB_QUESTION } from '../data/Constants'\r\n\r\ninterface Props {\r\n    games: Game[]\r\n    updateGame: OnGameUpdate\r\n}\r\n\r\nconst SettingsPage = ( props: Props ) => {\r\n    const { games, updateGame } = props\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { gameId } = useParams()\r\n    const game = selectGame( games, gameId )\r\n    \r\n    React.useEffect( () => { \r\n        if ( !game ) {\r\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\r\n            navigate( toHomePage() )    \r\n        }\r\n    }, [ game ] )\r\n\r\n    if ( !game ) {\r\n        return null\r\n    }\r\n\r\n    // current state\r\n\r\n    const settings = game.settings\r\n\r\n    const nbPlayer = settings.nbPlayer\r\n    const nbPlayerIncrement = INCREMENT_NB_PLAYER\r\n    const lessPlayerDisabled = nbPlayer <= MIN_NB_PLAYER\r\n    const morePlayerDisabled = nbPlayer >= MAX_NB_PLAYER\r\n\r\n    const nbQuestion = settings.nbQuestion\r\n    const nbQuestionIncrement = INCREMENT_NB_QUESTION\r\n    const lessQuestionDisabled = nbQuestion <= MIN_NB_QUESTION\r\n    const moreQuestionDisabled = nbQuestion >= MAX_NB_QUESTION\r\n\r\n    const nbAnswer = settings.nbAnswer\r\n    const nbAnswerIncrement = INCREMENT_NB_ANSWER_PER_QUESTION\r\n    const lessAnswerDisabled = nbAnswer <= MIN_NB_ANSWER_PER_QUESTION\r\n    const moreAnswerDisabled = nbAnswer >= MAX_NB_ANSWER_PER_QUESTION\r\n\r\n    // update helpers\r\n\r\n    const updateNbPlayer = ( nbPlayer: number ) => {\r\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\r\n            settings.nbPlayer = nbPlayer\r\n            return settings \r\n        } ) )\r\n    }\r\n\r\n    const updateNbQuestion = ( nbQuestion: number ) => {\r\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\r\n            settings.nbQuestion = nbQuestion\r\n            return settings \r\n        } ) )\r\n    }\r\n\r\n    const updateNbAnswer = ( nbAnswer: number ) => {\r\n        updateGame( game.id, updateSettings( ( settings: Settings ) => {\r\n            settings.nbAnswer = nbAnswer\r\n            return settings \r\n        } ) )\r\n    }\r\n\r\n    const onNext = () => {\r\n        updateGame( game.id, onSetUp )\r\n    }\r\n\r\n    // user events )\r\n\r\n    const lessPlayer = lessPlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer - nbPlayerIncrement ) )\r\n    const morePlayer = morePlayerDisabled ? undefined : onUserEvent( () => updateNbPlayer( game.settings.nbPlayer + nbPlayerIncrement ) )\r\n\r\n    const lessQuestion = lessQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion - nbQuestionIncrement ) )\r\n    const moreQuestion = moreQuestionDisabled ? undefined : onUserEvent( () => updateNbQuestion( game.settings.nbQuestion + nbQuestionIncrement ) )\r\n\r\n    const lessAnswer = lessAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer - nbAnswerIncrement ) )\r\n    const moreAnswer = moreAnswerDisabled ? undefined : onUserEvent( () => updateNbAnswer( game.settings.nbAnswer + nbAnswerIncrement ) )\r\n\r\n    return (\r\n        <GamePage gameStep={GameStep.SETTINGS} game={game} updateGame={updateGame} onNext={onNext}>\r\n            \r\n            <Grid container spacing={2}>\r\n\r\n                {/* nb players */}\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\r\n                > \r\n                    <Button \r\n                        style={{ marginRight: '40px' }} \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        disabled={lessPlayerDisabled} \r\n                        onClick={lessPlayer}\r\n                    >\r\n                        - {nbPlayerIncrement}\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    textAlign=\"center\" \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                > \r\n                    <PersonIcon style={{ marginRight: '10px' }} color=\"primary\"/> \r\n                    {nbPlayer} {nbPlayer > 1 ? 'players' : 'player'}\r\n                </Grid>\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    textAlign=\"center\" \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\r\n                > \r\n                    <Button \r\n                        style={{ marginLeft: '40px' }} \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        disabled={morePlayerDisabled} \r\n                        onClick={morePlayer}\r\n                    >\r\n                        + {nbPlayerIncrement}\r\n                    </Button>\r\n                </Grid>\r\n\r\n                {/* nb questions */}\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\r\n                >\r\n                    <Button \r\n                        style={{ marginRight: '40px' }} \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        disabled={lessQuestionDisabled} \r\n                        onClick={lessQuestion}\r\n                    >\r\n                        - {nbQuestionIncrement}\r\n                    </Button>\r\n                </Grid>\r\n                \r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                > \r\n                    <MusicNoteIcon \r\n                        style={{ marginRight: '10px' }} \r\n                        color=\"primary\"\r\n                    /> \r\n                    {nbQuestion} questions\r\n                </Grid>\r\n                \r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\r\n                > \r\n                    <Button \r\n                        style={{ marginLeft: '40px' }} \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        disabled={moreQuestionDisabled} \r\n                        onClick={moreQuestion}\r\n                    >\r\n                        + {nbQuestionIncrement}\r\n                    </Button>\r\n                </Grid>\r\n\r\n                {/* nb answer per question */}\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'right' }}\r\n                >\r\n                    <Button \r\n                        style={{ marginRight: '40px' }} \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        disabled={lessAnswerDisabled} \r\n                        onClick={lessAnswer}\r\n                    >\r\n                        - {nbAnswerIncrement}\r\n                    </Button>\r\n                </Grid>\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                > \r\n                    <QuizIcon \r\n                        style={{ marginRight: '10px' }} \r\n                        color=\"primary\"\r\n                    /> \r\n                    {nbAnswer} answers / question\r\n                </Grid>\r\n\r\n                <Grid \r\n                    item xs={4} \r\n                    style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}\r\n                > \r\n                    <Button \r\n                        style={{ marginLeft: '40px' }} \r\n                        size=\"small\" \r\n                        variant=\"contained\" \r\n                        disabled={moreAnswerDisabled} \r\n                        onClick={moreAnswer}\r\n                    >\r\n                        + {nbAnswerIncrement}\r\n                    </Button>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n        </GamePage>\r\n    )\r\n}\r\n\r\nexport default SettingsPage","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst ClubIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M2 12C2 16 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 15 17 18 15 18 12 18 7 14 7 12 9 14 7 15 2 10 2 5 2 6 7 8 9 6 7 2 7 2 12z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default ClubIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor  \r\n    onClick?: () => void \r\n}\r\n\r\nconst DiamondIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M10 20C13 15 15 13 19 10 15 7 13 5 10 0 7 5 5 7 1 10 5 13 7 15 10 20z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default DiamondIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor  \r\n    onClick?: () => void \r\n}\r\n\r\nconst CircleIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M10 19C15 19 19 15 19 10 19 5 15 1 10 1 5 1 1 5 .991 9.99 1 15 5 19 10 19z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CircleIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst HeartIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M10 20C13 15 19 12 19 8 19 2 12 0 10 6 8 0 1 2 1 8 1 12 7 15 10 20z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default HeartIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst SpadeIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M2 11C2 15 6 17 9 14 8 18 8 18 5 20H15C12 18 12 18 11 14 14 17 18 15 18 11 18 7 12 7 10.023.039 8 7 2 7 2 11z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default SpadeIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst SquareIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M10 19 19 19 19 1 1 1 1 19z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default SquareIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst StarIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M9.99.991 12.751 7.04 17.992 7.003 13.953 11.399 15.588 18.03 10.027 14.705 4.316 18.011 5.97 11.493 1.931 7.003 7.472 7.022 10.008.991z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default StarIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst TriangleIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M1 19 19 19 10 1 1 19z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default TriangleIcon\r\n","import React from 'react'\r\nimport { CardColor } from '../../data/Card'\r\n\r\ninterface Props {\r\n    color: CardColor \r\n    onClick?: () => void \r\n}\r\n\r\nconst CrossIcon = ( props: Props ) => {\r\n    const { color, onClick } = props\r\n\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" className={`icon color-${color.toLowerCase()}`} onClick={onClick}>\r\n            <path d=\"M1 16 4 19 10 13 16 19 19 16 13 10 19 4 16 1 10 7 4 1 1 4 7 10z\"/>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default CrossIcon\r\n","import React from 'react'\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { Card, CardColor, CardSymbol } from '../data/Card'\r\nimport ClubIcon from './icon/ClubIcon';\r\nimport DiamondIcon from './icon/DiamondIcon';\r\nimport CircleIcon from './icon/CircleIcon';\r\nimport HeartIcon from './icon/HeartIcon';\r\nimport SpadeIcon from './icon/SpadeIcon';\r\nimport SquareIcon from './icon/SquareIcon';\r\nimport StarIcon from './icon/StarIcon';\r\nimport TriangleIcon from './icon/TriangleIcon';\r\nimport CrossIcon from './icon/CrossIcon';\r\n\r\ninterface Props {\r\n    symbol: CardSymbol\r\n    color: CardColor\r\n    onClick?: () => void\r\n}\r\n\r\nconst PlayingCardIcon = ( props: Props ) => {\r\n\r\n    const { symbol, color, onClick } = props\r\n\r\n    switch ( symbol ) {\r\n        case CardSymbol.CLUB:\r\n            return <ClubIcon color={color} onClick={onClick} />\r\n        case CardSymbol.CROSS:\r\n            return <CrossIcon color={color} onClick={onClick} />\r\n        case CardSymbol.DIAMOND:\r\n            return <DiamondIcon color={color} onClick={onClick} />\r\n        case CardSymbol.CIRCLE:\r\n            return <CircleIcon color={color} onClick={onClick} />\r\n        case CardSymbol.HEART:\r\n            return <HeartIcon color={color} onClick={onClick} />\r\n        case CardSymbol.SPADE:\r\n            return <SpadeIcon color={color} onClick={onClick} />\r\n        case CardSymbol.SQUARE:\r\n            return <SquareIcon color={color} onClick={onClick} />\r\n        case CardSymbol.STAR:\r\n            return <StarIcon color={color} onClick={onClick} />\r\n        case CardSymbol.TRIANGLE:\r\n            return <TriangleIcon color={color} onClick={onClick} />\r\n        default:\r\n            return null\r\n    }\r\n}\r\n\r\nexport default PlayingCardIcon","import React from 'react'\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow';\r\n\r\nimport { Card, CardSize } from '../data/Card'\r\nimport PlayingCardIcon from './PlayingCardIcon';\r\n\r\ninterface Props {\r\n    card?: Card\r\n    cardSize?: CardSize\r\n    selected?: boolean\r\n    disabled?: boolean\r\n    onClick?: () => void    \r\n}\r\n\r\nconst PlayingCard = ( props: Props ) => {\r\n    const { card, cardSize, selected, disabled, onClick } = props\r\n\r\n    if ( card == undefined ) {\r\n        return (\r\n            <div className={`card size-${cardSize} card--empty`} onClick={onClick}>\r\n                <div className=\"card--header\">\r\n                    <div className=\"card--symbol\"> </div>                \r\n                </div>\r\n                <div className=\"card--content\">\r\n                    <div className=\"card--value\"> </div>\r\n                    <div className=\"card--symbol\"> </div>\r\n                </div>\r\n                <div className=\"card--footer\">\r\n                    <div className=\"card--symbol\"> </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    let cardClassNames = `card`\r\n    if ( card.size ) {\r\n        cardClassNames = `${cardClassNames} size-${card.size}`\r\n    }\r\n    if ( disabled ) {\r\n        cardClassNames = `${cardClassNames} disabled`\r\n    }\r\n    if ( selected ) {\r\n        cardClassNames = `${cardClassNames} selected`\r\n    }\r\n    if ( onClick ) {\r\n        cardClassNames = `${cardClassNames} selectable`\r\n    }\r\n\r\n    return (\r\n        <div className={cardClassNames} onClick={onClick}>\r\n            <div className=\"card--header\">\r\n                <div className=\"card--symbol\">\r\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\r\n                </div>                \r\n            </div>\r\n            <div className=\"card--content\">\r\n                <div className=\"card--value\">\r\n                    {card.number ? `${card.number % 10}` : card.value}\r\n                </div>\r\n                <div className=\"card--symbol\">\r\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"card--footer\">\r\n                <div className=\"card--symbol\">\r\n                    <PlayingCardIcon symbol={card.symbol} color={card.color}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlayingCard","import React from 'react'\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { Card as DataCard, CardColor, CardSize, CardSymbol, DefaultCards } from '../data/Card'\r\nimport PlayingCardIcon from './PlayingCardIcon';\r\nimport { Box, Grid, Modal, Typography } from '@mui/material';\r\nimport PlayingCard from './PlayingCard';\r\n\r\ninterface Props {\r\n    open: boolean\r\n    closeModal: () => void\r\n    card: DataCard\r\n    onSymbolChange: (symbol: CardSymbol) => void\r\n    onColorChange: (color: CardColor) => void\r\n    onCardChange: (card: DataCard) => void\r\n}\r\n\r\nconst PlayingCardModal = ( props: Props ) => {\r\n    const { open, closeModal, card, onSymbolChange, onColorChange, onCardChange } = props\r\n    \r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 500,\r\n        bgcolor: 'background.paper',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={closeModal}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        > \r\n            <Box sx={style}>\r\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\r\n                    \r\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                    \r\n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                <Grid container spacing={2} style={{ alignItems: 'flex-end' }}>\r\n\r\n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n\r\n                        <Grid item xs={12} textAlign=\"center\">\r\n                            <Typography>\r\n                                <b>Colors</b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        {\r\n                            Object.keys(CardColor).filter( key => key as CardColor != CardColor.GRAY ).map( key => { \r\n                                const newColor = key as CardColor\r\n                                return (\r\n                                    <Grid key={newColor} item xs={4}>\r\n                                        <div                                              \r\n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }} \r\n                                            className={card.color == newColor ? 'selected' : 'selectable'} \r\n                                            onClick={() => onColorChange(newColor)}\r\n                                        >\r\n                                            <PlayingCardIcon \r\n                                                symbol={CardSymbol.CIRCLE}\r\n                                                color={newColor}\r\n                                            />\r\n                                        </div> \r\n                                    </Grid>\r\n                                )\r\n                            } )\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\r\n                    \r\n                        <PlayingCard card={{\r\n                                ...card,\r\n                                size: CardSize.XL,\r\n                            }} \r\n                        />\r\n\r\n                    </Grid>\r\n\r\n                    {/* symbols */}\r\n                    \r\n                    <Grid item xs={4} container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \r\n\r\n                        <Grid item xs={12} textAlign=\"center\">\r\n                            <Typography>\r\n                                <b>Symbols</b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        {\r\n                            Object.keys(CardSymbol).map( key => { \r\n                                const newSymbol = key as CardSymbol\r\n                                return (\r\n                                    <Grid key={newSymbol} item xs={4}>\r\n                                        <div                                          \r\n                                            style={{ width: '75%', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n                                            className={card.symbol == newSymbol ? 'selected' : 'selectable'} \r\n                                            onClick={() => onSymbolChange(newSymbol)}\r\n                                        >\r\n                                            <PlayingCardIcon \r\n                                                symbol={newSymbol}\r\n                                                color={CardColor.GRAY}\r\n                                            />\r\n                                        </div>                                                \r\n                                    </Grid>\r\n                                )\r\n                            } )\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                    {/* symbols */}\r\n\r\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                        <Typography>\r\n                            <b>Pre-defined</b>\r\n                        </Typography>                                \r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \r\n\r\n                        {\r\n                            DefaultCards.map( defaultCard => {\r\n                                return (\r\n                                    <PlayingCard \r\n                                        key={`predefined-${defaultCard.symbol}-${defaultCard.color}`}\r\n                                        card={{\r\n                                            ...defaultCard,\r\n                                            number: card.number,\r\n                                            value: card.value,\r\n                                            size: CardSize.XS,\r\n                                        }}\r\n                                        onClick={() => onCardChange(defaultCard)} \r\n                                    />\r\n                                )\r\n                            } )\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Box>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default PlayingCardModal","import { MAX_NB_AVATAR } from \"./Constants\"\nimport { range } from \"./Util\"\n\nexport type AvatarId = number\n\nexport const ALL_AVATAR_IDS = range( MAX_NB_AVATAR ).map( i => i + 1 )","import React from 'react'\r\n\r\nimport IconButton from '@mui/material/IconButton';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nimport { Box, Grid, Modal, Typography } from '@mui/material';\r\nimport { ALL_AVATAR_IDS, AvatarId } from '../data/Avatar';\r\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\r\n\r\ninterface Props {\r\n    open: boolean\r\n    closeModal: () => void\r\n    avatarId: AvatarId\r\n    onAvatarChange: (avatarId: AvatarId) => void\r\n}\r\n\r\nconst AvatarModal = ( props: Props ) => {\r\n    const { open, closeModal, avatarId, onAvatarChange } = props\r\n    \r\n    const style = {\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)',\r\n        width: 500,\r\n        bgcolor: 'background.paper',\r\n        borderRadius: '10px',\r\n        boxShadow: 24,\r\n        p: 4,\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            open={open}\r\n            onClose={closeModal}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n        > \r\n            <Box sx={style}>\r\n                <Grid container spacing={2} style={{ alignItems: 'center' }}>\r\n                    \r\n                    <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }}>\r\n                    \r\n                        <IconButton aria-label=\"Close\" onClick={closeModal}>\r\n                            <CloseIcon />\r\n                        </IconButton>\r\n\r\n                    </Grid>\r\n\r\n                    <Grid item xs={4} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '5px', marginBottom: '10px' }}>\r\n                    \r\n                        <PlayerAvatar id={avatarId} size={AvatarSize.XL} />\r\n\r\n                    </Grid>\r\n\r\n                    {/* symbols */}\r\n                    \r\n                    <Grid item xs={8} container spacing={1} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \r\n\r\n                        <Grid item xs={12} textAlign=\"center\">\r\n                            <Typography>\r\n                                <b>Avatars</b>\r\n                            </Typography> \r\n                        </Grid>\r\n\r\n                        {\r\n                            ALL_AVATAR_IDS.map( newAvatarId => { \r\n                                return (\r\n                                    <Grid key={newAvatarId} item xs={3}>\r\n                                        <PlayerAvatar \r\n                                            id={newAvatarId} \r\n                                            size={AvatarSize.M}\r\n                                            selected={avatarId == newAvatarId} \r\n                                            onClick={() => onAvatarChange(newAvatarId)}\r\n                                        />\r\n                                    </Grid>\r\n                                )\r\n                            } )\r\n                        }\r\n\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </Box>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n\r\nexport default AvatarModal","import React from 'react'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Modal from '@mui/material/Modal'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\n\r\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\r\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\r\nimport { Player } from '../data/Player'\r\n\r\nimport PlayingCard from './PlayingCard'\r\nimport PlayingCardIcon from './PlayingCardIcon'\r\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\r\nimport { Typography } from '@mui/material'\r\nimport PlayingCardModal from './PlayingCardModal'\r\nimport AvatarModal from './AvatarModal'\r\nimport { AvatarId } from '../data/Avatar'\r\n\r\ninterface Props {\r\n    player: Player \r\n    avatarSize?: AvatarSize   \r\n    cardSize?: CardSize\r\n    game?: Game\r\n    updateGame?: OnGameUpdate\r\n}\r\n\r\nconst PlayerCard = ( props: Props ) => {\r\n    const { player, avatarSize, cardSize, game, updateGame } = props\r\n\r\n    const [ name, setName ] = React.useState( player.name )\r\n    const editMode = game !== undefined && updateGame !== undefined\r\n    \r\n    const [ playingCardModal, setPlayingCardModal ] = React.useState( false )\r\n    const openPlayingCardModal = () => setPlayingCardModal(true)\r\n    const closePlayingCardModal = () => setPlayingCardModal(false)\r\n    \r\n    const [ avatarModal, setAvatarModal ] = React.useState( false )\r\n    const openAvatarModal = () => setAvatarModal(true)\r\n    const closeAvatarModal = () => setAvatarModal(false)\r\n\r\n    if ( !player.number ) {\r\n        return null\r\n    }\r\n\r\n    //\r\n    // update helpers\r\n    //\r\n\r\n    const updatePlayerName = ( name: string ) => {\r\n        if ( editMode ) {\r\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\r\n                player.name = name\r\n                return player\r\n            } ) )\r\n        }\r\n    }\r\n\r\n    const updatePlayerAvatar = ( avatarId: AvatarId ) => {\r\n        if ( editMode ) {\r\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\r\n                player.avatarId = avatarId\r\n                return player\r\n            } ) )\r\n        }\r\n    }\r\n    \r\n    const updatePlayerCard = ( card: DataCard ) => {\r\n        if ( editMode ) {\r\n            updateGame( game.id, updatePlayer( player.id, ( player: Player ): Player => {\r\n                player.card = card\r\n                return player\r\n            } ) )\r\n        }\r\n    }\r\n\r\n    //\r\n    // user events\r\n    //\r\n\r\n    const onNameChange = ( e: any ) => {\r\n        setName( e.target.value )\r\n    }\r\n\r\n    const onNameBlur = () => {\r\n        updatePlayerName( name )\r\n    }\r\n\r\n    const onSymbolChange = (symbol: CardSymbol) => {\r\n        updatePlayerCard( {\r\n            ...player.card,\r\n            symbol: symbol\r\n        } )\r\n    }\r\n\r\n    const onColorChange = (color: CardColor) => {\r\n        updatePlayerCard( {\r\n            ...player.card,\r\n            color: color\r\n        } )\r\n    }\r\n\r\n    const onCardChange = (card: DataCard) => {\r\n        updatePlayerCard( {\r\n            ...player.card,\r\n            color: card.color,\r\n            symbol: card.symbol\r\n        } )\r\n    }\r\n\r\n    const onAvatarChange = (avatarId: AvatarId) => {\r\n        updatePlayerAvatar( avatarId )\r\n    }\r\n\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                <Grid item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \r\n                    <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>\r\n                        <PlayerAvatar \r\n                            id={player.avatarId} \r\n                            size={avatarSize || AvatarSize.L}\r\n                            onClick={editMode ? openAvatarModal : undefined}\r\n                        />\r\n                        { editMode && <TextField id=\"standard-basic\" style={{ marginLeft: '10px' }} label=\"Name\" variant=\"standard\" value={name} onChange={onNameChange} onBlur={onNameBlur} /> }\r\n                        { !editMode && (\r\n                            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'flex-start', marginLeft: '10px', marginRight: '10px' }}>\r\n                                <Typography><b>Name:</b> {name}</Typography> \r\n                                <Typography><b>Score:</b> {player.stats.score}</Typography> \r\n                            </div>                            \r\n                        ) }\r\n                    </Box> \r\n                    <PlayingCard card={{\r\n                            ...player.card,\r\n                            number: player.number,\r\n                            size: cardSize || CardSize.S,\r\n                        }} \r\n                        onClick={editMode ? openPlayingCardModal : undefined} \r\n                    />                   \r\n                </Grid>\r\n\r\n                { editMode && (\r\n                    <PlayingCardModal\r\n                        open={playingCardModal}\r\n                        closeModal={closePlayingCardModal}\r\n                        card={{\r\n                            ...player.card,\r\n                            value: `${player.number % 10}`,\r\n                        }}\r\n                        onSymbolChange={onSymbolChange}\r\n                        onColorChange={onColorChange}\r\n                        onCardChange={onCardChange}\r\n                    />\r\n                ) }\r\n\r\n                { editMode && (\r\n                    <AvatarModal\r\n                        open={avatarModal}\r\n                        closeModal={closeAvatarModal}\r\n                        avatarId={player.avatarId}\r\n                        onAvatarChange={onAvatarChange}\r\n                    />\r\n                ) }\r\n\r\n            </Grid>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default PlayerCard","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport Grid from '@mui/material/Grid'\r\n\r\nimport GamePage from '../component/GamePage'\r\nimport PlayerCard from '../component/PlayerCard'\r\n\r\nimport { Game, GameStep, OnGameUpdate, selectGame, OnStep } from '../data/Game'\r\nimport { toHomePage } from '../data/Navigate'\r\n\r\ninterface Props {\r\n    games: Game[]\r\n    updateGame: OnGameUpdate\r\n}\r\n\r\nconst PlayersPage = ( props: Props ) => {\r\n    const { games, updateGame } = props\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { gameId } = useParams()\r\n    const game = selectGame( games, gameId )\r\n    \r\n    React.useEffect( () => { \r\n        if ( !game ) {\r\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\r\n            navigate( toHomePage() )    \r\n        }\r\n    }, [ game ] )\r\n    \r\n    if ( !game || !game.players ) {\r\n        return null\r\n    }\r\n    \r\n    // update helpers\r\n\r\n    const onPrevious = game.started ? () => {    \r\n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\r\n    } : undefined\r\n\r\n    const onNext = !game.started ? () => {    \r\n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\r\n    } : undefined\r\n\r\n    return (\r\n        <GamePage gameStep={GameStep.PLAYERS} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                {\r\n                    (\r\n                        <>\r\n                            {game.players.map( player => {\r\n                                return (\r\n                                    <Grid key={player.id} item xs={6} textAlign=\"left\">\r\n                                        <PlayerCard\r\n                                            game={game}\r\n                                            player={player}\r\n                                            updateGame={updateGame}\r\n                                        />\r\n                                    </Grid>\r\n                                )\r\n                            })}                        \r\n                        </>\r\n                    )\r\n                }\r\n\r\n            </Grid>\r\n\r\n        </GamePage>\r\n    )\r\n}\r\n\r\nexport default PlayersPage","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport GamePage from '../component/GamePage'\r\n\r\nimport { Game, GameStep, OnGameUpdate, onStartGame, selectGame } from '../data/Game'\r\nimport { toHomePage, toGamePage } from '../data/Navigate'\r\nimport NextButton from '../component/NextButton'\r\n\r\ninterface Props {\r\n    games: Game[]\r\n    updateGame: OnGameUpdate\r\n}\r\n\r\nconst StartPage = ( props: Props ) => {\r\n    const { games, updateGame } = props\r\n\r\n    const navigate = useNavigate() \r\n    \r\n    const { gameId } = useParams()\r\n    const game = selectGame( games, gameId )\r\n    \r\n    React.useEffect( () => { \r\n        if ( !game ) {\r\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\r\n            navigate( toHomePage() )    \r\n        } else if ( game.questionNumber ) {\r\n            console.log(`[effect] NAVIGATE to question #${game.questionNumber}`)\r\n            navigate( toGamePage( game ) )    \r\n        }\r\n    }, [ game ] ) \r\n    \r\n    if ( !game ) {\r\n        return null\r\n    }   \r\n\r\n    const onNext = () => {\r\n        updateGame( game.id, onStartGame )\r\n    }\r\n\r\n    return (\r\n        <GamePage gameStep={GameStep.QUIZZ} game={game} updateGame={updateGame} onNext={onNext}>\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', padding: '200px' }}>\r\n                <NextButton title=\"Start Game\" onNext={onNext}/>\r\n            </div>\r\n        </GamePage>                \r\n    )\r\n}\r\n\r\nexport default StartPage","import React from 'react'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\n\r\nimport { CardMedia, Typography } from '@mui/material'\r\nimport { Media } from '../data/Media'\r\nimport musicBackground from '../static/music.png'\r\n\r\ninterface Props {\r\n    media: Media\r\n}\r\n\r\nconst MediaCard = ( props: Props ) => {\r\n    const { media } = props\r\n\r\n    if ( !media ) {\r\n        return null\r\n    }\r\n\r\n    const mediaImage = media.artist && media.artist.picture ? media.artist.picture : media.album && media.album.picture ? media.album.picture : musicBackground\r\n    const artistName = media.artist && media.artist.name ? media.artist.name : '-'\r\n    const albumName = media.album && media.album.title ? media.album.title : '-'\r\n\r\n    return (\r\n        <Card variant=\"outlined\">\r\n            <CardContent>\r\n\r\n                <Typography variant=\"h5\" color=\"text.primary\" component=\"div\" style={{ margin: '5px 10px' }}>\r\n                    {media.title}\r\n                </Typography>\r\n\r\n                <Box sx={{ display: 'flex', alignItems: 'center', pl: 1, pb: 1 }}>\r\n\r\n                    <CardMedia\r\n                        component=\"img\"\r\n                        sx={{ width: 56, height: 56, margin: '5px 10px' }}\r\n                        image={mediaImage}\r\n                    />\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\r\n                        \r\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\r\n                            Artist\r\n                        </Typography>\r\n                        \r\n                        <Typography variant=\"subtitle1\" color=\"text.secondary\" component=\"div\">\r\n                            Album\r\n                        </Typography>\r\n\r\n                    </div>\r\n\r\n                    <div style={{ display: 'flex', flexDirection: 'column', marginRight: '10px' }}>\r\n                        \r\n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\r\n                            {artistName}\r\n                        </Typography>\r\n\r\n                        <Typography variant=\"subtitle1\" color=\"text.primary\" component=\"div\">\r\n                            {albumName}\r\n                        </Typography>\r\n\r\n                    </div>\r\n\r\n                </Box>\r\n\r\n            </CardContent>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default MediaCard","import React from 'react'\r\n\r\nimport IconButton from '@mui/material/IconButton'\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\r\nimport PauseIcon from '@mui/icons-material/Pause'\r\n\r\nimport { Game, OnGameUpdate } from '../data/Game'\r\nimport { Question, OnQuestionUpdate, QuestionId } from '../data/Question'\r\nimport { onKeyEvent, onUserEvent } from '../data/Util'\r\nimport { Box, CircularProgress, Tooltip, Typography } from '@mui/material'\r\nimport { withStyles } from '@mui/styles'\r\nimport MediaCard from './MediaCard'\r\nimport { Media } from '../data/Media'\r\nimport musicBackground from '../static/music.png'\r\nimport { MUSIC_PLAYER_KEYBOARD_SHORTCUTS } from '../data/Constants'\r\n\r\n\r\ninterface Props {\r\n    questionId: QuestionId\r\n    media: Media\r\n    failed: boolean\r\n    loading: boolean\r\n    info?: any\r\n    started: boolean\r\n    playing: boolean\r\n    progress: number\r\n    played: boolean\r\n    onMusicLoaded: ( nbSeconds:number ) => void\r\n    onMusicPlaying: () => void\r\n    onMusicPaused: () => void\r\n    onMusicEnded: () => void\r\n}\r\n\r\nconst MusicPlayer = ( props: Props ) => {\r\n    const { questionId, media, loading, info, started, playing, progress, played, onMusicLoaded, onMusicPlaying, onMusicPaused, onMusicEnded } = props\r\n\r\n    if ( !questionId && !media ) {\r\n        return null\r\n    }\r\n        \r\n    const audioRef = React.useRef<HTMLAudioElement>( new Audio( media.music ) )\r\n\r\n    // const [ loading, setLoading ] = React.useState( true )\r\n    // const [ isPlaying, setIsPlaying ] = React.useState( false )\r\n    // const [ duration, setDuration ] = React.useState( 0 )\r\n    // const [ currentTime, setCurrentTime ] = React.useState( 0 )\r\n\r\n    // let currentPercentage = 0\r\n    // if ( played ) {\r\n    //     currentPercentage = 100\r\n    // } else if ( duration ) {\r\n    //     currentPercentage = Math.ceil( ( currentTime / duration ) * 100 )\r\n    // }\r\n\r\n    //\r\n    // music helpers\r\n    //\r\n\r\n    const reset = () => {\r\n        console.log( 'reset' )\r\n        // setMusicIsReady( false )\r\n        // setIsPlaying( false )\r\n        // setDuration( 0 )\r\n        // setCurrentTime( 0 )\r\n    }\r\n\r\n    const musicReady = () => {\r\n        console.log( `musicReady >>> setLoading( false ) + onMusicLoaded( ${audioRef.current.duration} )` )\r\n        // setMusicIsReady( true )\r\n        // setLoading( false )\r\n        onMusicLoaded( audioRef.current.duration )\r\n    }   \r\n\r\n    const playMusic = () => {  \r\n        if ( started && !playing && !played ) {\r\n            console.log( `playMusic >>> !playing >>> onMusicPlaying()` )\r\n            onMusicPlaying()\r\n        }\r\n    }\r\n\r\n    const pauseMusic = () => {     \r\n        if ( started && playing && !played ) {\r\n            console.log( `pauseMusic >>> playing >>> onMusicPaused()` )\r\n            onMusicPaused()\r\n        }\r\n    }\r\n    \r\n    const toggleMusic = () => {           \r\n        if ( started && !played ) {\r\n            if ( playing ) {\r\n                console.log( `toggleMusic >>> playing >>> onMusicPaused()` )\r\n                onMusicPaused()\r\n            } else {\r\n                console.log( `toggleMusic >>> not playing >>> onMusicPlaying()` )\r\n                onMusicPlaying()\r\n            }\r\n        } else {\r\n            console.log( `toggleMusic >>> not started or already played >>> No-Op` )\r\n        }\r\n    }\r\n\r\n    React.useEffect( () => {\r\n        if ( audioRef.current ) {\r\n            if ( playing ) {\r\n                console.log( `playing >>> audio.play()` )\r\n                audioRef.current.play()\r\n            } else {\r\n                console.log( `!playing >>> audio.pause()` )\r\n                audioRef.current.pause()\r\n            }\r\n        }\r\n    }, [ playing ] ); \r\n\r\n    const lessVolume = () => {\r\n        console.log( `lessVolume` ) \r\n        if ( audioRef.current ) {\r\n            audioRef.current.volume = Math.max( 0.1, audioRef.current.volume - 0.1 )\r\n        } \r\n    }\r\n\r\n    const moreVolume = () => {\r\n        console.log( `moreVolume` )  \r\n        if ( audioRef.current ) {\r\n            audioRef.current.volume = Math.min( 1.0, audioRef.current.volume + 0.1 )\r\n        }\r\n    }\r\n\r\n    const musicEnded = () => {\r\n        console.log( 'musicEnded >>> onMusicEnded()' )\r\n        onMusicEnded()\r\n    }\r\n\r\n    //\r\n    // audio events\r\n    //\r\n\r\n    React.useEffect( () => {\r\n        \r\n        if ( audioRef.current ) {\r\n            console.log(\"pause current music...\")\r\n            audioRef.current.pause();\r\n        }\r\n    \r\n        if ( !played ) {\r\n\r\n            if ( audioRef.current.src != media.music ) {\r\n                console.log(\"new music...\")\r\n                audioRef.current = new Audio( media.music )\r\n                audioRef.current.loop = false\r\n                audioRef.current.volume = 1.0\r\n                reset()\r\n            }\r\n        \r\n            const onAudioLoad = () => {\r\n                console.log( `onAudioLoad >>> setCurrentTime( ${audioRef.current.currentTime} ) + setDuration( ${audioRef.current.duration} )` )\r\n                // setCurrentTime( audioRef.current.currentTime )\r\n                // setDuration( audioRef.current.duration )\r\n            }\r\n            const onAudioReady = () => {            \r\n                console.log( 'onAudioReady >>> musicReady' )\r\n                musicReady()\r\n            }\r\n            // const onAudioUpdate = () => {  \r\n            //     // console.log( `onAudioUpdate >>> setCurrentTime( ${audio.currentTime} )` )\r\n            //     // setCurrentTime( audioRef.current.currentTime )\r\n            // }\r\n            const onAudioEnd = () => {\r\n                console.log( 'onAudioEnd >>> musicEnded()' )\r\n                musicEnded()\r\n            }\r\n        \r\n            // listeners\r\n\r\n            console.log(\"add listener...\")\r\n            audioRef.current.addEventListener( 'loadeddata', onAudioLoad )    \r\n            audioRef.current.addEventListener( 'canplaythrough', onAudioReady )\r\n            // audioRef.current.addEventListener( 'timeupdate', onAudioUpdate )\r\n            audioRef.current.addEventListener( 'ended', onAudioEnd )\r\n\r\n            // effect cleanup\r\n            return () => {\r\n                console.log(\"remove listener...\")\r\n                audioRef.current.removeEventListener( 'loadeddata', onAudioLoad )    \r\n                audioRef.current.removeEventListener( 'canplaythrough', onAudioReady )\r\n                // audioRef.current.removeEventListener( 'timeupdate', onAudioUpdate )\r\n                audioRef.current.removeEventListener( 'ended', onAudioEnd )\r\n                reset()\r\n            }\r\n        }\r\n\r\n        return reset\r\n\r\n    }, [ played, questionId ] ); \r\n\r\n    const loadingMusic = !played && !started && loading\r\n    // const musicReady = !played && !started && !loading\r\n    // const countingDown = !played && musicIsReady && ( seconds > 0 )\r\n    const playingMusic = !played && started && playing\r\n    const pausingMusic = !played && started && !playing\r\n\r\n    const onPause = playingMusic ? onUserEvent( () => pauseMusic() ) : undefined\r\n    const onPlay = pausingMusic ? onUserEvent( () => playMusic() ) : undefined\r\n\r\n    //\r\n    // keyboard shortcuts\r\n    // \r\n\r\n    if ( MUSIC_PLAYER_KEYBOARD_SHORTCUTS ) {\r\n\r\n        const handleKeyPress = React.useCallback( onKeyEvent( ( key: string ): boolean => {\r\n            switch ( key ) {\r\n                case ' ':\r\n                    console.log( `music-player >>> key \"${key}\" >>> toggleMusic()`);\r\n                    toggleMusic();\r\n                    return true;\r\n                case 'ArrowUp':\r\n                    console.log( `music-player >>> key \"${key}\" >>> moreVolume()`);\r\n                    moreVolume();\r\n                    return true;\r\n                case 'ArrowDown':\r\n                    console.log( `music-player >>> key \"${key}\" >>> lessVolume()`);\r\n                    lessVolume();\r\n                    return true;\r\n            } \r\n            return false;\r\n        } ), [ toggleMusic, moreVolume, lessVolume ] );\r\n\r\n        React.useEffect( () => {\r\n            document.addEventListener( 'keydown', handleKeyPress );\r\n            return () => {\r\n                document.removeEventListener( 'keydown', handleKeyPress );\r\n            };\r\n        }, [ handleKeyPress ] ); \r\n\r\n    }  \r\n\r\n    //\r\n    // tooltip\r\n    //\r\n\r\n    const LightTooltip = withStyles( theme => ( {\r\n        tooltip: {\r\n            backgroundColor: 'transparent',\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            fontSize: 11\r\n        },\r\n        arrow: {\r\n            color: \"white\"\r\n        }\r\n    } ) ) ( Tooltip );\r\n\r\n    // console.log( `[render] music player: ready=${musicIsReady}, seconds=${seconds}/${delay}, played=${played}` )\r\n    \r\n    const icon = started && pausingMusic ? (\r\n        <Typography variant=\"caption\" component=\"div\" color=\"text.secondary\">\r\n            <IconButton aria-label=\"play\" onClick={onPlay}>\r\n                <PlayArrowIcon sx={{ height: 38, width: 38 }}/>\r\n            </IconButton> \r\n        </Typography>\r\n    ) : undefined\r\n    \r\n    const onClick = started && playingMusic ? onPause : undefined\r\n\r\n    return (\r\n        <LightTooltip title={played ? <MediaCard media={media} /> : false} >\r\n            <div \r\n                style={{ \r\n                    width: '56px', \r\n                    height: '56px', \r\n                    cursor: played ? 'help' : 'auto', \r\n                    marginRight: '10px', \r\n                    border: played ? '1px solid #777' : 'none',\r\n                    borderRadius: '28px', \r\n                    backgroundColor: played ? 'transparent' : '#eee',\r\n                    background: played ? media.album ? `url(${media.album.picture})` : `url(${musicBackground})` : 'none', \r\n                    backgroundSize: '56px 56px' \r\n                }}\r\n            >                \r\n\r\n                <Box \r\n                    sx={{ \r\n                        width: '56px', \r\n                        height: '56px',\r\n                        position: 'relative', \r\n                        display: 'inline-flex', \r\n                        alignItems: 'center', \r\n                        justifyContent: 'center',\r\n                        cursor: onClick ? 'pointer' : 'auto',                        \r\n                    }} \r\n                    onClick={onClick}\r\n                >\r\n                    \r\n                    {/* progress */}\r\n\r\n                    { !played && loading && <CircularProgress variant=\"indeterminate\"/> }                    \r\n                    { !played && !loading && started && <CircularProgress size={56} variant=\"determinate\" value={progress} onClick={onClick}/> }\r\n                    \r\n                    {/* button or info */}\r\n\r\n                    <Box\r\n                        sx={{\r\n                            top: 0,\r\n                            left: 0,\r\n                            bottom: 0,\r\n                            right: 0,\r\n                            position: 'absolute',\r\n                            display: 'flex',\r\n                            alignItems: 'center',\r\n                            justifyContent: 'center',\r\n                        }}\r\n                        onClick={onClick}\r\n                    >\r\n                        { icon ? icon : info }\r\n                    </Box>                    \r\n\r\n                </Box>\r\n\r\n            </div>\r\n        </LightTooltip>\r\n    )\r\n}\r\n\r\nexport default MusicPlayer","import React from 'react'\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport Paper from '@mui/material/Paper'\r\nimport CardMedia from '@mui/material/CardMedia'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\r\nimport PauseIcon from '@mui/icons-material/Pause'\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\r\nimport Slide from '@mui/material/Slide';\r\n\r\nimport { Game, onAnswers, onErrorAnswers, OnGameUpdate, onQuestionNumber } from '../data/Game'\r\nimport { Player, PlayerId } from '../data/Player'\r\nimport { Question, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted, addPlayerAnswer, removePlayerAnswer, hasPlayerAnswer, onQuestionError } from '../data/Question'\r\nimport { range, onUserEvent } from '../data/Util'\r\nimport { Alert, Avatar, Badge, Fade, Grow, Tooltip } from '@mui/material'\r\nimport PlayingCard from './PlayingCard'\r\nimport { CardSize } from '../data/Card'\r\nimport { Answer, AnswerId } from '../data/Answer'\r\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar'\r\nimport { getQuestionAnswerStats, getQuestionStats } from '../data/PlayerStats'\r\nimport PlayerCard from './PlayerCard'\r\nimport { withStyles } from '@mui/styles'\r\nimport MediaCard from './MediaCard'\r\nimport MusicPlayer from './MusicPlayer'\r\nimport { DEBUG, MAX_NB_SECONDS_LOADING, MAX_NB_SECONDS_PLAYING, ONE_SECOND } from '../data/Constants'\r\n\r\ninterface Props {\r\n    game: Game\r\n    question: Question\r\n    updateGame: OnGameUpdate\r\n    updateQuestion: OnQuestionUpdate    \r\n    onNext: () => void\r\n}\r\n\r\nconst QuestionCard = ( props: Props ) => {\r\n    const { game, question, updateGame, updateQuestion, onNext } = props\r\n\r\n    const [ questionId, setQuestionId ] = React.useState( question.id )\r\n    const [ musicLoading, setMusicLoading ] = React.useState( true )\r\n    const [ nbSecondsTotal, setNbSecondsTotal ] = React.useState( 0 )\r\n    const [ nbShownAnswers, setNbShownAnswers ] = React.useState( 0 )\r\n    const [ musicReady, setMusicReady ] = React.useState( false )\r\n    const [ countDown, setCountDown ] = React.useState( 3 )\r\n    const [ musicStarted, setMusicStarted ] = React.useState( false )\r\n    const [ musicPlaying, setMusicPlaying ] = React.useState( false )\r\n    const [ nbSecondsPlayed, setNbSecondsPlayed ] = React.useState( 0 )\r\n    const [ musicEnded, setMusicEnded ] = React.useState( false )\r\n\r\n    if ( !game || !question ) {\r\n        return null\r\n    }\r\n\r\n    React.useEffect( () => {\r\n        if ( questionId != question.id ) {\r\n            console.log( `new question >>> setQuestionId( ${question.id} ) + reset()` ) \r\n            setQuestionId( question.id )\r\n            reset()\r\n        }\r\n    }, [ questionId, question.id ] );\r\n        \r\n    const musicError = question.status == 'error'\r\n    const musicPlayed = musicEnded || question.status == 'played' || question.status == 'completed'\r\n\r\n    //\r\n    // update helpers\r\n    //\r\n\r\n    const hasAnswer = ( playerId: PlayerId, answerId: AnswerId ): boolean => {\r\n        return hasPlayerAnswer( question, playerId, answerId )\r\n    }\r\n\r\n    const addAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\r\n        updateQuestion( game.id, question.id, ( question: Question ) => addPlayerAnswer( question, playerId, answerId ) )    \r\n    }\r\n\r\n    const removeAnswer = ( playerId: PlayerId, answerId: AnswerId ) => {\r\n        updateQuestion( game.id, question.id, ( question: Question ) => removePlayerAnswer( question, playerId, answerId ) )        \r\n    }\r\n\r\n    const flagQuestionAsFailed = () => {\r\n        updateQuestion( game.id, question.id, ( question: Question ) => onQuestionError( question ) )  \r\n        updateGame( game.id, onErrorAnswers( game, question ) )     \r\n    }\r\n\r\n    //\r\n    // sort players by score\r\n    //\r\n     \r\n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\r\n        return right.stats.score - left.stats.score\r\n    } )\r\n\r\n    //\r\n    // badge\r\n    //\r\n\r\n    const badgeValue = ( value: number | undefined ): string | undefined => {\r\n        if ( value ) {\r\n            if ( value === 0 ) {\r\n                return `-`\r\n            } else if ( value > 0 ) {\r\n                return `+${value}`\r\n            } else {\r\n                return `${value}`\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    const badgeColor = ( value: number | undefined ): 'info' | 'success' | 'warning' | undefined => {\r\n        if ( value ) {\r\n            if ( value === 0 ) {\r\n                return `info`\r\n            } else if ( value > 0 ) {\r\n                return `success`\r\n            } else {\r\n                return `warning`\r\n            }\r\n        }\r\n        return undefined\r\n    }\r\n\r\n    const LightTooltip = withStyles( theme => ( {\r\n        tooltip: {\r\n            backgroundColor: 'transparent', // theme.palette.common.white,\r\n            color: \"rgba(0, 0, 0, 0.87)\",\r\n            // boxShadow: theme.shadows[1],\r\n            fontSize: 11\r\n        },\r\n        arrow: {\r\n            color: \"white\"\r\n        }\r\n    } ) ) ( Tooltip );\r\n\r\n    //\r\n    // events\r\n    //\r\n\r\n    const reset = () => {\r\n        setMusicLoading( true )\r\n        setNbSecondsTotal( 0 )\r\n        setNbShownAnswers( 0 )\r\n        setMusicReady( false )\r\n        setCountDown( 3 )\r\n        setMusicStarted( false )\r\n        setMusicPlaying( false )\r\n        setNbSecondsPlayed( 0 )\r\n        setMusicEnded( false )\r\n    }\r\n\r\n    const resetOnError = () => {\r\n        setMusicLoading( false )\r\n        setNbShownAnswers( 0 )\r\n    }\r\n\r\n    const resetOnPlayed = () => {\r\n        setNbShownAnswers( question.answers.length )\r\n    }\r\n\r\n    const onMusicLoaded = ( nbSeconds: number ) => {\r\n        console.log( `onMusicLoaded >>> setMusicLoading( false ) + setNbSeconds( Math.min( ${nbSeconds}, ${MAX_NB_SECONDS_PLAYING} ) )` ) \r\n        setMusicLoading( false )\r\n        setNbSecondsTotal( Math.min( Math.ceil( nbSeconds ), MAX_NB_SECONDS_PLAYING ) )\r\n        setMusicStarted( false )\r\n        setMusicPlaying( false )\r\n        setNbSecondsPlayed( 0 )\r\n        setMusicEnded( false )\r\n    }\r\n\r\n    const onMusicFailed = () => {\r\n        console.log( `onMusicFailed >>> flagQuestionAsFailed() + setMusicLoading( false )` )\r\n        setMusicLoading( false )\r\n        flagQuestionAsFailed()\r\n    }\r\n\r\n    const onMusicPlaying = () => {\r\n        if ( musicStarted && !musicPlayed ) {\r\n            console.log( 'onMusicPlaying >>> setMusicPlaying( true )' ) \r\n            setMusicPlaying( true )\r\n        } else {\r\n            console.log( `onMusicPlaying >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \r\n        }\r\n    }\r\n\r\n    const onMusicPaused = () => {\r\n        if ( musicStarted && !musicPlayed ) {\r\n            console.log( 'onMusicPaused >>> setMusicPlaying( false )' ) \r\n            setMusicPlaying( false )\r\n        } else {\r\n            console.log( `onMusicPaused >>> WRONG state! ( musicStarted: ${musicStarted}, musicPlayed: ${musicPlayed} )` ) \r\n        }\r\n    }\r\n\r\n    const onMusicEnded = () => {\r\n        console.log( 'onMusicEnded >>> onNext() + reset()' )\r\n        onNext()        \r\n        reset() \r\n    }\r\n\r\n    const showNextAnswer = () => {        \r\n        if ( nbShownAnswers == question.answers.length ) {\r\n            console.log( 'showNextAnswer >>> setMusicReady( true )' ) \r\n            setMusicReady( true )\r\n        } else {            \r\n            // console.log( `showNextAnswer >>> ${nbShownAnswers} + 1` ) \r\n            setNbShownAnswers( nbShownAnswers + 1 )\r\n        }\r\n    }\r\n\r\n    const showCountDown = () => {\r\n        if ( countDown > 1 ) {\r\n            // console.log( `showCountDown >>> ${countDown} - 1` ) \r\n            setCountDown( countDown - 1 )\r\n        } else {\r\n            console.log( 'showCountDown >>> setMusicStarted( true ) + setMusicPlaying( true )' ) \r\n            setCountDown( 0 )\r\n            setMusicStarted( true )\r\n            setMusicPlaying( true )\r\n        }\r\n    }\r\n\r\n    const showNbSecondsPlayed = () => {\r\n        if ( nbSecondsPlayed < nbSecondsTotal ) {\r\n            // console.log( `showNbSecondsPlayed >>> ${nbSecondsPlayed} + 1` ) \r\n            setNbSecondsPlayed( nbSecondsPlayed + 1 )\r\n        } else {\r\n            console.log( 'showCountDown >>> pauseMusic()' ) \r\n            setMusicPlaying( false )\r\n            setMusicEnded( true )\r\n            onMusicEnded()\r\n        }\r\n    }\r\n\r\n    React.useEffect( () => {\r\n        let timerId: any = undefined;\r\n        if ( musicError ) {\r\n            resetOnError()\r\n            clearInterval( timerId );\r\n            timerId = undefined;\r\n        } else if ( musicPlayed ) {\r\n            resetOnPlayed()\r\n            clearInterval( timerId );\r\n            timerId = undefined;\r\n        } else if ( musicLoading ) {\r\n            // console.log( 'timer >>> musicLoading >>> showMusicLoading' ) \r\n            timerId = setInterval( onMusicFailed, ONE_SECOND * MAX_NB_SECONDS_LOADING );\r\n        } else if ( !musicReady ) {\r\n            // console.log( 'timer >>> !musicReady >>> showNextAnswer' ) \r\n            timerId = setInterval( showNextAnswer, ONE_SECOND );\r\n        } else if ( !musicStarted ) {\r\n            // console.log( 'timer >>> !musicStarted >>> showCountDown' ) \r\n            timerId = setInterval( showCountDown, ONE_SECOND );\r\n        } else if ( musicPlaying ) {\r\n            // console.log( 'timer >>> musicPlaying >>> showNbSecondsPlayed' ) \r\n            timerId = setInterval( showNbSecondsPlayed, ONE_SECOND );\r\n        } else {\r\n            resetOnPlayed()\r\n            console.log( 'timer >>> ??? >>> STOP' ) \r\n            clearInterval( timerId );\r\n            timerId = undefined;\r\n        }                \r\n        return () => {\r\n            timerId && clearInterval( timerId );\r\n        }\r\n    }, [ musicLoading, musicError, countDown, nbShownAnswers, musicReady, musicStarted, musicPlaying, nbSecondsPlayed, musicPlayed ] );\r\n\r\n    const progress = musicPlayed ? 100 : !musicStarted ? 0 : Math.ceil( Math.min( nbSecondsPlayed, nbSecondsTotal ) * 100 / nbSecondsTotal )\r\n    const musicPaused = !musicPlayed && musicStarted && !musicPlaying\r\n    const showHints = progress > 50\r\n    const countingDown = musicReady && !musicStarted\r\n\r\n    let musicPlayerInfo = undefined\r\n    if ( musicError ) {\r\n        musicPlayerInfo = (\r\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'red' }}>\r\n                X\r\n            </Typography>\r\n        )\r\n    } else if ( musicLoading || !musicReady || musicPlayed ) {\r\n        musicPlayerInfo = undefined\r\n    } else if ( !musicStarted ) {\r\n        musicPlayerInfo = (\r\n            <Typography sx={{ fontSize: 40, fontWeight: 'bold', color: 'gray' }}>\r\n                {countDown}\r\n            </Typography>\r\n        )\r\n    } else {\r\n        musicPlayerInfo = (\r\n            <Typography sx={{ fontSize: 20, fontWeight: 'bold', color: 'black' }}>\r\n                {nbSecondsTotal-nbSecondsPlayed}s\r\n            </Typography>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>  \r\n\r\n            {/* warning: music failed */}\r\n\r\n            {musicError && (\r\n                <Alert \r\n                    severity=\"warning\" \r\n                    style={{ \r\n                        position: 'absolute',\r\n                        width: '500px',\r\n                        top: '25%',\r\n                        left: 'calc( 50% - 250px )',\r\n                        boxShadow: '3px 3px 3px rgb(0,0,0,0.1)',\r\n                        borderRadius: '10px',\r\n                    }}\r\n                >\r\n                    Could not load music! Please proceed to next question.\r\n                </Alert>\r\n            )}\r\n\r\n            {/* answers */}\r\n\r\n            {\r\n                question.answers.map( ( answer, index ) => {\r\n\r\n                    const shown = index < nbShownAnswers\r\n                    const hidden = musicError || !shown\r\n                    const answerNumber = answer.id % 100 \r\n                    const color = musicPlayed ? answer.correct ? '#00c508' : 'grey' : 'grey'\r\n                    const backgroundColor = musicPlayed ? answer.correct ? '#00ff131f' : 'white' : 'white'\r\n                    \r\n                    return (\r\n                        <Paper key={answer.id} className=\"answer\" elevation={3} style={{ margin: '2px', opacity: hidden ? '0' : '1', filter: musicPaused ? 'blur(6px)' : 'none', backgroundColor: backgroundColor }}>\r\n                            <div \r\n                                style={{\r\n                                    position: 'relative', \r\n                                    display: 'inline-flex',\r\n                                    alignItems: 'center', \r\n                                    justifyContent: 'space-between',\r\n                                    width: '100%'\r\n                                }}\r\n                            >                                    \r\n                                <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'left' }}>\r\n                                    <Avatar sx={{ bgcolor: color }} style={{ margin: '10px', padding: '5px', fontSize: '2rem', fontWeight: 'bold' }}>{answer.number}</Avatar>\r\n                                    <div style={{ display: 'flex', flexDirection:'column', alignItems: 'flex-start', justifyContent: 'left' }}> \r\n                                        <Typography variant='h5' style={{ lineHeight: '1', fontSize: '2rem', fontWeight: 'bold' }}>{answer.answer}</Typography>\r\n                                        <Typography variant='subtitle2' style={{ marginLeft: '20px', color: 'gray', lineHeight: '1', fontSize: '1.5rem', opacity: showHints ? '1' : '0' }}>{answer.hint}</Typography>\r\n                                    </div>\r\n                                </div>\r\n                                <div\r\n                                    style={{\r\n                                        top: 0,\r\n                                        left: 0,\r\n                                        bottom: 0,\r\n                                        right: 5,\r\n                                        position: 'absolute',\r\n                                        display: 'flex',\r\n                                        alignItems: 'center',\r\n                                        justifyContent: 'flex-end',\r\n                                    }}\r\n                                >\r\n                                    { ( question.status == 'played' ) && (\r\n                                        game.players.map( ( player: Player ) => {\r\n                                            const disabled = hasAnswer( player.id, answer.id )\r\n                                            const onClick = question.status == 'played' && !disabled ? () => addAnswer( player.id, answer.id ) : undefined\r\n                                            return (\r\n                                                <div key={`answer-${answer.id}-${player.id}`} style={{ marginLeft: '5px' }}>\r\n                                                    <PlayingCard\r\n                                                        key={`${player.id}-${answer.id}`} \r\n                                                        card={{\r\n                                                            ...player.card,\r\n                                                            number: answer.number,\r\n                                                            size: CardSize.XS,\r\n                                                        }}\r\n                                                        disabled={disabled} \r\n                                                        onClick={onClick} \r\n                                                    />\r\n                                                </div>\r\n                                            )\r\n                                        } )\r\n                                    ) }\r\n                                </div>\r\n                            </div>                                \r\n                        </Paper>\r\n                    )\r\n                })\r\n            } \r\n\r\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n\r\n                <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyItems: 'flex-start', marginTop: '15px' }}>\r\n\r\n                    {/* music player */}\r\n\r\n                    <MusicPlayer \r\n                        questionId={question.id} \r\n                        media={question.media}\r\n                        failed={musicError}\r\n                        loading={musicLoading}\r\n                        info={musicPlayerInfo}\r\n                        started={musicStarted}\r\n                        playing={musicPlaying} \r\n                        progress={progress}\r\n                        played={musicPlayed} \r\n                        onMusicLoaded={onMusicLoaded}\r\n                        onMusicPlaying={onMusicPlaying}\r\n                        onMusicPaused={onMusicPaused}\r\n                        onMusicEnded={onMusicEnded}\r\n                    />\r\n    \r\n                    {/* selected players answers */}\r\n\r\n                    <div style={{ display: 'flex', alignItems: 'center', justifyItems: 'flex-start', justifyContent: 'space-between', marginLeft: '50px' }}>\r\n                    { \r\n                        question.playerAnswers.map( playerAnswer => {\r\n                            const player = game.players.find( player => player.id === playerAnswer.playerId )\r\n                            if ( !player ) {\r\n                                return null\r\n                            }\r\n                            const answer = question.answers.find( answer => answer.id === playerAnswer.answerId )\r\n                            if ( !answer ) {\r\n                                return null\r\n                            }\r\n                            const correct = question.status == 'completed' ? answer.correct : undefined\r\n                            const answerStats = getQuestionAnswerStats( player.stats, question.id, playerAnswer.answerId )\r\n                            const score = question.status == 'completed' && answerStats ? answerStats.score : undefined\r\n                            const onClick = question.status == 'played' ? () => removeAnswer( player.id, answer.id ) : undefined                            \r\n                            return ( \r\n                                <div key={`selected-${answer.id}-${player.id}`} style={{ transition: 'transform 1000ms cubic-bezier(0, 0, 0.2, 1) 1000ms' }}>                               \r\n                                    <Badge className='card--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>                                    \r\n                                        <PlayingCard\r\n                                            key={`${player.id}-${answer.id}`} \r\n                                            card={{\r\n                                                ...player.card,\r\n                                                number: answer.number,\r\n                                                size: CardSize.XS,\r\n                                            }} \r\n                                            onClick={onClick} \r\n                                        />\r\n                                    </Badge>\r\n                                </div>\r\n                            )\r\n                        } )\r\n                    }\r\n                    {\r\n                        range( Math.max( 1, game.settings.nbPlayer - question.playerAnswers.length ) ).map( i => {\r\n                            return (\r\n                                <div key={`selected-${i}`} className='card--badge'>     \r\n                                    <PlayingCard cardSize={CardSize.XS}/>\r\n                                </div>        \r\n                            )\r\n                        } )\r\n                    }\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n            {/* players */}\r\n\r\n            <div className='playerChips'>\r\n            {\r\n                sortedPlayers.map( player => {\r\n                    const tooltipId = `player-tooltip-${player.id}`\r\n                    const questionStats = getQuestionStats( player.stats, question.id )\r\n                    const score = question.status == 'completed' && questionStats ? questionStats.score : undefined\r\n                    const disableTooltip = !musicPlayed\r\n                    return (\r\n                        <LightTooltip \r\n                            key={tooltipId} \r\n                            title={<PlayerCard player={player} avatarSize={AvatarSize.M} cardSize={CardSize.XS}/>} \r\n                            disableFocusListener={disableTooltip}\r\n                            disableHoverListener={disableTooltip}\r\n                        >\r\n                            <Badge className='playerChip--badge' badgeContent={badgeValue(score)} color={badgeColor(score)}>  \r\n                                <div className='playerChip' style={{ cursor: musicPlayed ? 'help' : 'auto', }}>\r\n                                    <span className='playerChip--avatar'><PlayerAvatar key={player.id} id={player.avatarId} size={AvatarSize.S}/></span>\r\n                                    <span className='playerChip--score'>{player.stats.score}</span>\r\n                                </div>\r\n                            </Badge>                            \r\n                        </LightTooltip>\r\n                    )\r\n                } )\r\n            }\r\n            </div>\r\n\r\n            {/* debug */}\r\n\r\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#fff6f2', display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                <span>{musicError?'error':'--'}</span>\r\n                <span>{musicLoading?'loading':'--'}</span>\r\n                <span>answers: {nbShownAnswers}/{question.answers.length}</span>\r\n                <span>{musicReady?'ready':'--'}</span>\r\n                <span>{countDown}s</span>\r\n                <span>{musicStarted?'started':'--'}</span>\r\n                <span>music: {nbSecondsPlayed}s / {nbSecondsTotal}s</span>\r\n                <span>{progress}%</span>\r\n                <span>{musicPlaying?'playing':'paused'}</span>\r\n                <span>{showHints?'hints':'--'}</span>\r\n                <span>{musicEnded?'ended':'--'}</span>\r\n                <span>{musicPlayed?'played':'--'}</span>\r\n            </pre>}\r\n\r\n            {DEBUG && <pre style={{ border: '1px solid #999', background: '#f2fff6', padding: '20px' }}>{JSON.stringify(question,undefined,4)}</pre>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default QuestionCard","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport LinearProgress from '@mui/material/LinearProgress'\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport CardMedia from '@mui/material/CardMedia'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport Typography from '@mui/material/Typography'\r\nimport SkipPreviousIcon from '@mui/icons-material/SkipPrevious'\r\nimport PlayArrowIcon from '@mui/icons-material/PlayArrow'\r\nimport SkipNextIcon from '@mui/icons-material/SkipNext'\r\nimport NextButton from '../component/NextButton'\r\n\r\nimport Timeline from '@mui/lab/Timeline';\r\nimport TimelineItem from '@mui/lab/TimelineItem';\r\nimport TimelineSeparator from '@mui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@mui/lab/TimelineConnector';\r\nimport TimelineContent from '@mui/lab/TimelineContent';\r\nimport TimelineDot from '@mui/lab/TimelineDot';\r\n\r\nimport GamePage from '../component/GamePage'\r\nimport QuestionCard from '../component/QuestionCard'\r\n\r\nimport { Game, GameStep, OnGameUpdate, selectGame, selectQuestion, onQuestionNumber, onEndGame, onAnswers } from '../data/Game'\r\nimport { QuestionId, OnQuestionUpdate, onQuestionPlayed, onQuestionCompleted } from '../data/Question'\r\nimport { toHomePage, toGamePage } from '../data/Navigate'\r\nimport { onUserEvent } from '../data/Util'\r\nimport { DEBUG } from '../data/Constants'\r\n\r\ninterface Props {\r\n    games: Game[]\r\n    updateGame: OnGameUpdate\r\n    updateQuestion: OnQuestionUpdate\r\n}\r\n\r\nconst QuestionPage = ( props: Props ) => {\r\n    const { games, updateGame, updateQuestion } = props\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { gameId, questionNumber } = useParams()\r\n    \r\n    const game = selectGame( games, gameId )\r\n    const question = selectQuestion( game, questionNumber )\r\n    \r\n    React.useEffect( () => { \r\n        if ( !game ) {\r\n            console.log(`[effect] MISSING game! >>> NAVIGATE to home`)\r\n            navigate( toHomePage() )    \r\n        } else if ( !question ) {\r\n            console.log(`[effect] UNKNOWN question! >>> NAVIGATE to home`)\r\n            navigate( toHomePage() )     \r\n        } else if ( game.questionNumber != question.number ) {\r\n            console.log(`[effect] NEW question! >>> NAVIGATE to question ${game.questionNumber}`)\r\n            navigate( toGamePage( game ) )    \r\n        }  \r\n    }, [ game ] )\r\n    \r\n    if ( !game ) {\r\n        return null\r\n    }\r\n\r\n    \r\n    if ( !question ) {\r\n        return null\r\n    }\r\n\r\n    // update helpers\r\n\r\n    const musicPlayed = () => {\r\n        updateQuestion( game.id, question.id, onQuestionPlayed )\r\n    }\r\n\r\n    const musicAnswered = () => {\r\n        updateGame( game.id, onAnswers( game, question ) )\r\n        updateQuestion( game.id, question.id, onQuestionCompleted )\r\n    }\r\n\r\n    const updateQuestionNumber = ( questionNumber: number ) => {\r\n        updateGame( game.id, onQuestionNumber( questionNumber ) )\r\n    }\r\n\r\n    const endGame = () => {\r\n        updateGame( game.id, onEndGame )\r\n    }\r\n\r\n    // user events\r\n    \r\n    const onPrevious = DEBUG && question.previousNumber ? () => {\r\n        if ( question.previousNumber ) {\r\n            console.log( `onNext >>> updateQuestionNumber( ${question.previousNumber} )` )\r\n            updateQuestionNumber( question.previousNumber )\r\n        }\r\n    } : undefined\r\n\r\n    const onNext = () => {\r\n        switch ( question.status ) {\r\n            case 'not-played':\r\n                console.log( 'onNext >>> musicPlayed()' )\r\n                musicPlayed()\r\n                break\r\n            case 'played':\r\n                console.log( 'onNext >>> musicAnswered()' )\r\n                musicAnswered()\r\n                break\r\n            case 'error':\r\n            case 'completed':\r\n                if ( question.nextNumber ) {\r\n                    console.log( `onNext >>> updateQuestionNumber( ${question.nextNumber} )` )\r\n                    updateQuestionNumber( question.nextNumber )\r\n                } else {\r\n                    console.log( `onNext >>> endGame()` )\r\n                    endGame()\r\n                }\r\n                break\r\n        }\r\n    }\r\n\r\n    // title\r\n\r\n    const title =  DEBUG ? `Q${question.number} - ${question.title} - ${question.status}` : `Q${question.number} - ${question.title}`\r\n    \r\n    // disable menu until the end of the music\r\n\r\n    const menuDisabled = ( question.status == 'not-played' )\r\n\r\n    return (\r\n        <GamePage title={title} gameStep={GameStep.QUIZZ} game={game} menuDisabled={menuDisabled} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\r\n            <QuestionCard game={game} question={question} updateGame={updateGame} updateQuestion={updateQuestion} onNext={onNext}/>\r\n        </GamePage>\r\n    )\r\n}\r\n\r\nexport default QuestionPage","import React from 'react'\r\n\r\nimport Box from '@mui/material/Box'\r\nimport Card from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Grid from '@mui/material/Grid'\r\nimport TextField from '@mui/material/TextField'\r\nimport Modal from '@mui/material/Modal'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport CloseIcon from '@mui/icons-material/Close'\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore'\r\nimport MilitaryTechIcon from '@mui/icons-material/MilitaryTech'\r\n\r\nimport { Game, OnGameUpdate, updatePlayer } from '../data/Game'\r\nimport { Card as DataCard, CardSymbol, CardColor, CardSize, DefaultCards } from '../data/Card'\r\nimport { Player } from '../data/Player'\r\n\r\nimport PlayingCard from './PlayingCard'\r\nimport PlayingCardIcon from './PlayingCardIcon'\r\nimport PlayerAvatar, { AvatarSize } from './PlayerAvatar';\r\nimport { Accordion, AccordionDetails, AccordionSummary, Paper, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography } from '@mui/material'\r\nimport { ColorizeRounded } from '@mui/icons-material'\r\n\r\ninterface Props {\r\n    game: Game\r\n    player: Player\r\n    position: number\r\n    color: string\r\n    medalColor?: string    \r\n}\r\n\r\nconst PlayerScoreCard = ( props: Props ) => {\r\n    const { game, player, position, color, medalColor } = props\r\n\r\n    if ( !player.number ) {\r\n        return null\r\n    }\r\n\r\n    const prettyPoints = ( value: number ): string => {\r\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\r\n        if ( value > 0 ) {\r\n            return `+ ${value} pts`\r\n        } else if ( value < 0 ) {\r\n            return `- ${-value} pts`\r\n        } else {\r\n            return `-`\r\n        }\r\n    }\r\n\r\n    const prettyPercent = ( value: number ): string => {\r\n        value = value < 10 ? Math.ceil( 10 * value ) / 10 : Math.ceil( value )\r\n        if ( value > 0 ) {\r\n            return `${value} %`\r\n        } else if ( value < 0 ) {\r\n            return `-${-value} %`\r\n        } else {\r\n            return `-`\r\n        }\r\n    }\r\n\r\n    const nbTotal = player.stats.nbAnswer + player.stats.nbMiss\r\n    const successPercent = nbTotal > 0 ? player.stats.nbSuccess * 100 / nbTotal : 0\r\n    const failurePercent = nbTotal > 0 ? player.stats.nbFailure * 100 / nbTotal : 0\r\n    const missPercent = nbTotal > 0 ? player.stats.nbMiss * 100 / nbTotal : 0\r\n\r\n    let sumBySuccessAnswer = 0\r\n    let sumByFailureAnswer = 0\r\n    let nbSuccessAnswer = 0\r\n    let nbFailureAnswer = 0\r\n    for ( const question of player.stats.questions ) {\r\n        for ( const answer of question.answers ) {\r\n            if ( answer.success ) {\r\n                nbSuccessAnswer++\r\n                sumBySuccessAnswer += answer.score\r\n            } else {\r\n                nbFailureAnswer++\r\n                sumByFailureAnswer += answer.score\r\n            }\r\n        } \r\n    }    \r\n    const avgSuccessDelta = nbSuccessAnswer > 0 ? sumBySuccessAnswer / nbSuccessAnswer : 0    \r\n    const avgFailureDelta = nbFailureAnswer > 0 ? sumByFailureAnswer / nbFailureAnswer : 0\r\n    const avgDelta = ( nbSuccessAnswer + nbFailureAnswer ) > 0 ? ( sumBySuccessAnswer + sumByFailureAnswer ) / ( nbSuccessAnswer + nbFailureAnswer ) : 0    \r\n\r\n    return (\r\n\r\n        <Accordion>\r\n            <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n            >\r\n                \r\n                <Grid container spacing={2} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}> \r\n                    <Grid item xs={12}>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                            <div style={{ display: 'inline-flex', alignItems: 'center' }}>\r\n                                <div style={{ \r\n                                    width: '32px',\r\n                                    borderRadius: '20px',\r\n                                    border: `4px solid ${medalColor || '#42a5f5'}`,\r\n                                    color: medalColor || '#42a5f5',\r\n                                    // boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\r\n                                    fontSize: '15px',\r\n                                    fontWeight: 'bold',\r\n                                    aspectRatio: '1',\r\n                                    display: 'flex',\r\n                                    alignItems: 'center',\r\n                                    justifyContent: 'center',\r\n                                    marginRight: '30px',\r\n                                }}>\r\n                                    {position}                                   \r\n                                </div>\r\n                                <PlayerAvatar id={player.avatarId} size={AvatarSize.M}/>\r\n                                <Typography style={{ marginLeft: '10px' }} >{player.name}</Typography>\r\n                                <MilitaryTechIcon style={{ marginLeft: '20px', fontSize: '2.5em', color: medalColor, opacity: medalColor ? '1' : '0' }}/>\r\n                            </div>\r\n                            <div style={{ \r\n                                width: '40px',\r\n                                borderRadius: '20px',\r\n                                marginRight: '10px',\r\n                                backgroundColor: color,\r\n                                boxShadow: 'rgb(0 0 0 / 20%) 3px 3px 3px',\r\n                                fontSize: '15px',\r\n                                fontWeight: 'bold',\r\n                                aspectRatio: '1',\r\n                                display: 'flex',\r\n                                alignItems: 'center',\r\n                                justifyContent: 'center'\r\n                            }}>\r\n                                {player.stats.score}\r\n                            </div>\r\n                        </Box> \r\n                    </Grid>\r\n                </Grid>\r\n\r\n            </AccordionSummary>\r\n\r\n            <AccordionDetails>\r\n    \r\n                <TableContainer component={Paper}>\r\n                    <Table aria-label=\"simple table\" size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow sx={{ backgroundColor: '#e3d5ca' }}>\r\n                                <TableCell>score: {player.stats.score}</TableCell>\r\n                                <TableCell align=\"right\">gain</TableCell>\r\n                                <TableCell align=\"right\">nb</TableCell>\r\n                                <TableCell align=\"right\">%</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">answers:</TableCell>\r\n                                <TableCell align=\"right\">{prettyPoints(avgDelta)}</TableCell>\r\n                                <TableCell align=\"right\">{player.stats.nbSuccess+player.stats.nbFailure}</TableCell>\r\n                                <TableCell align=\"right\">{prettyPercent(successPercent+failurePercent)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\"> - succeed</TableCell>\r\n                                <TableCell align=\"right\">{prettyPoints(avgSuccessDelta)}</TableCell>\r\n                                <TableCell align=\"right\">{player.stats.nbSuccess}</TableCell>\r\n                                <TableCell align=\"right\">{prettyPercent(successPercent)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\"> - failed</TableCell>\r\n                                <TableCell align=\"right\">{prettyPoints(avgFailureDelta)}</TableCell>\r\n                                <TableCell align=\"right\">{player.stats.nbFailure}</TableCell>\r\n                                <TableCell align=\"right\">{prettyPercent(failurePercent)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell component=\"th\" scope=\"row\">missed</TableCell>\r\n                                <TableCell align=\"right\">{prettyPoints(0)}</TableCell>\r\n                                <TableCell align=\"right\">{player.stats.nbMiss}</TableCell>\r\n                                <TableCell align=\"right\">{prettyPercent(missPercent)}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n\r\n            </AccordionDetails>\r\n        </Accordion>\r\n    )\r\n}\r\n\r\nexport default PlayerScoreCard","import React from 'react'\r\nimport { useParams } from 'react-router'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport ReplayButton from '../component/ReplayButton'\r\n\r\nimport GamePage from '../component/GamePage'\r\n\r\nimport { Game, GameStep, OnGameUpdate, OnStep, selectGame, newGame } from '../data/Game'\r\nimport { toHomePage, toGamePage } from '../data/Navigate'\r\nimport { Grid } from '@mui/material'\r\nimport PlayerScoreCard from '../component/PlayerScoreCard'\r\nimport { Player } from '../data/Player'\r\nimport { VictoryChart, VictoryLine, VictoryScatter, VictoryTooltip, VictoryGroup, VictoryVoronoiContainer, VictoryLegend } from 'victory'\r\nimport { computeVizualiationScoreData } from '../data/PlayerStats'\r\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar'\r\n\r\ninterface Props {\r\n    games: Game[]\r\n    updateGame: OnGameUpdate\r\n    addGame: ( game: Game ) => void\r\n}\r\n\r\nconst ScoresPage = ( props: Props ) => {\r\n    const { games, updateGame, addGame } = props\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const { gameId } = useParams()\r\n    const game = selectGame( games, gameId )\r\n    \r\n    React.useEffect( () => { \r\n        if ( !game ) {\r\n            console.log(`[effect] MISSING game! >>> NAVIGATE home`)\r\n            navigate( toHomePage() )    \r\n        }\r\n    }, [ game ] )\r\n    \r\n    if ( !game ) {\r\n        return null\r\n    }\r\n\r\n    const restartNewGame = () => {\r\n        const game = newGame()\r\n        addGame( game )\r\n        navigate( toGamePage( game ) )\r\n    }\r\n\r\n    const onPrevious = !game.ended ? () => {   \r\n        updateGame( game.id, OnStep( GameStep.QUIZZ ) )\r\n    } : undefined\r\n\r\n    const onNext = game.ended ? () => {   \r\n        navigate( toHomePage() )\r\n    } : undefined\r\n\r\n    //\r\n    // sort players by score\r\n    //\r\n     \r\n    const sortedPlayers = [ ...game.players ].sort( ( left: Player, right: Player ): number => {\r\n        return right.stats.score - left.stats.score\r\n    } )\r\n\r\n    let previousPosition: number | undefined = undefined\r\n    let previousScore: number | undefined = undefined\r\n\r\n    const colorScale: string[] = [ \r\n        \"#f29e4c\",\r\n        \"#f1c453\",\r\n        \"#efea5a\",\r\n        \"#b9e769\", \r\n        \"#83e377\", \r\n        \"#16db93\", \r\n        \"#0db39e\", \r\n        \"#048ba8\", \r\n        \"#2c699a\", \r\n        \"#54478c\" \r\n    ]\r\n    const medalColorScale: string[] = [ \r\n        \"gold\",\r\n        \"grey\",\r\n        \"brown\" \r\n    ]\r\n\r\n    return (\r\n        <GamePage gameStep={GameStep.SCORES} game={game} updateGame={updateGame} onPrevious={onPrevious} onNext={onNext}>\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                {/* players */}\r\n\r\n                {\r\n                    (\r\n                        <>\r\n                            {sortedPlayers.map( ( player, index ) => {\r\n                                \r\n                                let position = 1                                \r\n                                if ( previousPosition !== undefined && previousScore !== undefined ) {\r\n                                    if ( previousScore > player.stats.score ) {\r\n                                        position = previousPosition + 1\r\n                                    } else {\r\n                                        position = previousPosition\r\n                                    }\r\n                                }\r\n                                previousScore = player.stats.score\r\n                                previousPosition = position\r\n\r\n                                return (\r\n                                    <Grid key={player.id} item xs={12} textAlign=\"left\">\r\n                                        <PlayerScoreCard\r\n                                            game={game}\r\n                                            player={player}\r\n                                            position={position}\r\n                                            color={colorScale[index % colorScale.length]}\r\n                                            medalColor={position-1 < medalColorScale.length ? medalColorScale[position-1] : undefined}\r\n                                        />\r\n                                    </Grid>\r\n                                )\r\n                            })}                        \r\n                        </>\r\n                    )\r\n                }\r\n\r\n                {/* graph */}\r\n\r\n                <VictoryChart height={390}> \r\n\r\n                    {sortedPlayers.map( ( player, index ) => {\r\n                        const data = computeVizualiationScoreData( player.stats )\r\n                        const color = colorScale[index % colorScale.length]\r\n                        return (\r\n\r\n                            <VictoryGroup\r\n                                key={`player-graph-${player.id}`}\r\n                                color={color}\r\n                                labels={({ datum }) => `#${index+1} - ${player.name}: ${datum.tooltip}`}\r\n                                labelComponent={\r\n                                    <VictoryTooltip\r\n                                        style={{ fontSize: 10 }}\r\n                                    />\r\n                                }\r\n                                data={data}\r\n                            >\r\n                                <VictoryLine/>\r\n                                <VictoryScatter\r\n                                    size={3}\r\n                                    style={{ data: { fill: color } }}\r\n                                />\r\n                            </VictoryGroup>\r\n                        )\r\n                    })}\r\n\r\n                </VictoryChart>\r\n\r\n            </Grid> \r\n            \r\n        </GamePage>\r\n    )\r\n}\r\n\r\nexport default ScoresPage","import React from 'react'\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Page from '../component/Page'\r\n\r\nimport PlayerAvatar, { AvatarSize } from '../component/PlayerAvatar';\r\n\r\ninterface Props {}\r\n\r\nconst AvatarsPage = ( props: Props ) => {\r\n\r\n    return (\r\n        <Page title=\"Avatars\">\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                { [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20].map(number => {\r\n\r\n                    return (\r\n                        <Grid key={number} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-around', backgroundColor: '#ddd' }}>\r\n                            {\r\n                                Object.keys( AvatarSize ).map(size => {\r\n                                    return (\r\n                                        <PlayerAvatar key={`${number}-${size}`} number={number} size={size as AvatarSize} />\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    )\r\n                } ) }\r\n\r\n            </Grid>\r\n\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default AvatarsPage","import React from 'react'\r\n\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Page from '../component/Page'\r\n\r\nimport { CardSymbol, CardSize, CardColor } from '../data/Card'\r\nimport PlayingCard from '../component/PlayingCard';\r\n\r\ninterface Props {}\r\n\r\nconst PlayingCardsPage = ( props: Props ) => {\r\n\r\n    return (\r\n        <Page>\r\n            \r\n            <h3>Playing Cards</h3>\r\n\r\n            <Grid container spacing={2}>\r\n\r\n                { Object.keys( CardSymbol ).map(symbol => {\r\n\r\n                    return (\r\n                        <Grid key={symbol} item xs={12} textAlign=\"center\" style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                            {\r\n                                Object.keys( CardSize ).map(size => {\r\n                                    return (\r\n                                        <>\r\n                                            <PlayingCard key={`${symbol}-${size}-black`} card={{\r\n                                                    symbol: symbol as CardSymbol,\r\n                                                    color: CardColor.BLACK,\r\n                                                    size: size as CardSize,\r\n                                                    number: 2,\r\n                                                }} \r\n                                                onClick={() => {}} \r\n                                            />\r\n                                            <PlayingCard key={`${symbol}-${size}-red`} card={{\r\n                                                    symbol: symbol as CardSymbol,\r\n                                                    color: CardColor.RED,\r\n                                                    size: size as CardSize,\r\n                                                    number: 2,\r\n                                                }} \r\n                                                onClick={() => {}} \r\n                                            />\r\n                                        </>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Grid>\r\n                    )\r\n                } ) }\r\n\r\n            </Grid>\r\n\r\n        </Page>\r\n    )\r\n}\r\n\r\nexport default PlayingCardsPage","import React from 'react'\n\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\"\n\nimport HomePage from './page/HomePage'\nimport SettingsPage from './page/SettingsPage'\nimport PlayersPage from './page/PlayersPage'\nimport StartPage from './page/StartPage'\nimport QuestionPage from './page/QuestionPage'\nimport ScoresPage from './page/ScoresPage'\nimport AvatarsPage from './page/AvatarsPage'\n\nimport { Game, GameUpdater, loadGames, storeGames, clearGames, GameId } from './data/Game'\n\nimport './App.css';\nimport PlayingCardsPage from './page/PlayingCardsPage';\nimport { QuestionId, QuestionUpdater } from './data/Question'\n\nfunction App() {\n\n  //\n  // global state \n  //\n\n  const [ games, setGames ] = React.useState( loadGames() )\n\n  function addGame( game: Game ) {\n      console.log( `[add-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = [ game, ...prev ]\n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGame( game: Game ) {\n      console.log( `[delete-game] ${game.id}` )\n      setGames( prev => {\n        const newGames = prev.filter( g => g.id !== game.id ) \n        return storeGames( newGames )\n      } )\n  }\n\n  function deleteGames( gameIds: GameId[] ) {\n      console.log( `[delete-games]` )\n      setGames( prev => {\n        for ( const gameId of gameIds ) {\n          console.log( `[todo] ${gameId}` )\n        }\n        for ( const game of prev ) {\n          console.log( `[before] ${game.id}` )\n        }\n        const newGames = prev.filter( game => gameIds.indexOf( game.id ) === -1 )\n        for ( const game of newGames ) {\n          console.log( `[after] ${game.id}` )\n        }\n        return storeGames( newGames )\n      } )\n  }\n\n  function updateGame( gameId: GameId, update: GameUpdater ) {\n    console.log( `[update-game] ${gameId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => game.id === gameId ? update( game ) : game )\n      return storeGames( newGames )\n    } )\n  }\n\n  function updateQuestion( gameId: GameId, questionId: QuestionId, update: QuestionUpdater ) {\n    console.log( `[update-question] ${gameId} - ${questionId}` )\n    setGames( prev => {\n      const newGames = prev.map( game => {\n        if ( game.id != gameId ) {\n          return game\n        }\n        game.questions = game.questions.map( question => question.id === questionId ? update( question ) : question )\n        return game        \n      } )\n      return storeGames( newGames )\n    } )\n  }\n\n  // GREG console.log( '[render] app' )\n\n  return (\n    <div className=\"app app-amnezic\">\n\n      <Router>\n        <Routes>\n          <Route path=\"/\" element={<HomePage games={games} addGame={addGame} updateGame={updateGame} deleteGames={deleteGames}/>} />\n          <Route path=\"/game/:gameId/settings\" element={<SettingsPage games={games} updateGame={updateGame} />} />        \n          <Route path=\"/game/:gameId/players\" element={<PlayersPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/start\" element={<StartPage games={games} updateGame={updateGame} />} />\n          <Route path=\"/game/:gameId/question/:questionNumber\" element={<QuestionPage games={games} updateGame={updateGame} updateQuestion={updateQuestion}/>} />\n          <Route path=\"/game/:gameId/scores\" element={<ScoresPage games={games} updateGame={updateGame} addGame={addGame} />} />\n          <Route path=\"/avatars\" element={<AvatarsPage />} />\n          <Route path=\"/cards\" element={<PlayingCardsPage />} />\n        </Routes>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}