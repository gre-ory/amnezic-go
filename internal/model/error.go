package model

import "fmt"

// //////////////////////////////////////////////////
// error

var (
	ErrNotImplemented              = fmt.Errorf("not implemented")
	ErrGameNotFound                = fmt.Errorf("game not found")
	ErrConcurrentUpdate            = fmt.Errorf("concurrent update")
	ErrInvalidGameId               = fmt.Errorf("invalid game id")
	ErrInvalidMusicId              = fmt.Errorf("invalid music id")
	ErrInvalidMusicArtistId        = fmt.Errorf("invalid music artist id")
	ErrInvalidMusicAlbumId         = fmt.Errorf("invalid music album id")
	ErrInvalidThemeId              = fmt.Errorf("invalid theme id")
	ErrInvalidThemeQuestionId      = fmt.Errorf("invalid theme question id")
	ErrInvalidDeezerId             = fmt.Errorf("invalid deezer id")
	ErrInvalidMusicName            = fmt.Errorf("invalid music name")
	ErrInvalidArtistName           = fmt.Errorf("invalid artist name")
	ErrInvalidAlbumName            = fmt.Errorf("invalid album name")
	ErrInvalidMusicUrl             = fmt.Errorf("invalid music url")
	ErrInvalidImageUrl             = fmt.Errorf("invalid image url")
	ErrMissingMusic                = fmt.Errorf("missing music")
	ErrMissingArtist               = fmt.Errorf("missing artist")
	ErrMissingAlbum                = fmt.Errorf("missing album")
	ErrInvalidMusicLocalUrl        = fmt.Errorf("invalid music local url")
	ErrInvalidNbPlayer             = fmt.Errorf("invalid number of player")
	ErrInvalidNbQuestion           = fmt.Errorf("invalid number of question")
	ErrInvalidNbAnswer             = fmt.Errorf("invalid number of answer")
	ErrMissingSource               = fmt.Errorf("missing source")
	ErrMusicNotFound               = fmt.Errorf("music not found")
	ErrMusicAlbumNotFound          = fmt.Errorf("music album not found")
	ErrMusicArtistNotFound         = fmt.Errorf("music artist not found")
	ErrMusicGenreNotFound          = fmt.Errorf("music genre not found")
	ErrThemeNotFound               = fmt.Errorf("theme not found")
	ErrThemeQuestionNotFound       = fmt.Errorf("theme question not found")
	ErrMusicAlreadyInTheme         = fmt.Errorf("music already in theme")
	ErrInvalidBody                 = fmt.Errorf("invalid body")
	ErrInvalidNumberOfQuestion     = fmt.Errorf("invalid number of question")
	ErrInvalidNumberOfAnswer       = fmt.Errorf("invalid number of answer")
	ErrMusicUsed                   = fmt.Errorf("music used")
	ErrArtistUsed                  = fmt.Errorf("artist used")
	ErrAlbumUsed                   = fmt.Errorf("album used")
	ErrInvalidThemeQuestion        = fmt.Errorf("invalid theme question")
	ErrInvalidThemeQuestionText    = fmt.Errorf("invalid theme question text")
	ErrInvalidThemeQuestionHint    = fmt.Errorf("invalid theme question hint")
	ErrCouldNotUpdateThemeId       = fmt.Errorf("could not update theme id")
	ErrCouldNotUpdateMusicId       = fmt.Errorf("could not update music id")
	ErrEmptyPlaylist               = fmt.Errorf("empty playlist")
	ErrInvalidPlaylistId           = fmt.Errorf("invalid playslist id")
	ErrPlaylistNotFound            = fmt.Errorf("playlist not found")
	ErrUserNotFound                = fmt.Errorf("user not found")
	ErrInvalidPermission           = fmt.Errorf("invalid permission")
	ErrInvalidPassword             = fmt.Errorf("invalid password")
	ErrInvalidUserId               = fmt.Errorf("invalid user id")
	ErrSessionNotFound             = fmt.Errorf("session not found")
	ErrUserNotGranted              = fmt.Errorf("user not granted")
	ErrInvalidSessionToken         = fmt.Errorf("invalid session token")
	ErrMissingAuthorizationHeader  = fmt.Errorf("missing authorization header")
	ErrInvalidAuthorizationHeader  = fmt.Errorf("invalid authorization header")
	ErrFailedToRemoveOwnPermission = fmt.Errorf("failed to remove own permission")
	ErrFailedToRemoveOwnUser       = fmt.Errorf("failed to remove own user")
	ErrExistingUser                = fmt.Errorf("existing user")
	ErrExistingMusic               = fmt.Errorf("existing music")
	ErrExistingArtist              = fmt.Errorf("existing artist")
	ErrExistingAlbum               = fmt.Errorf("existing album")
	ErrFileAlreadyExists           = func(path string) error { return fmt.Errorf("file %q already exists", path) }
	ErrInvalidExtension            = fmt.Errorf("invalid extension")
	ErrPathNotFound                = func(path string) error { return fmt.Errorf("path %q not found", path) }
)
